
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.20.0
 * Query Engine version: 06fc58a368dc7be9fbbbe894adf8d445d208c284
 */
Prisma.prismaVersion = {
  client: "5.20.0",
  engine: "06fc58a368dc7be9fbbbe894adf8d445d208c284"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Cadastro_clienteScalarFieldEnum = {
  id: 'id',
  nome_cliente: 'nome_cliente',
  cnpj_cliente: 'cnpj_cliente',
  email_cliente: 'email_cliente',
  senha_cliente: 'senha_cliente',
  is_premium: 'is_premium'
};

exports.Prisma.Cadastro_freelancerScalarFieldEnum = {
  id: 'id',
  nome_freelancer: 'nome_freelancer',
  data_nascimento: 'data_nascimento',
  cpf_freelancer: 'cpf_freelancer',
  email_freelancer: 'email_freelancer',
  senha_freelancer: 'senha_freelancer',
  is_premium: 'is_premium'
};

exports.Prisma.CategoriasScalarFieldEnum = {
  id: 'id',
  nome_categoria: 'nome_categoria',
  icon_categoria: 'icon_categoria'
};

exports.Prisma.Descricao_perfilScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  id_cliente: 'id_cliente',
  id_freelancer: 'id_freelancer'
};

exports.Prisma.Foto_perfilScalarFieldEnum = {
  id: 'id',
  foto_perfil: 'foto_perfil',
  id_cliente: 'id_cliente',
  id_freelancer: 'id_freelancer'
};

exports.Prisma.Freelancer_categoriaScalarFieldEnum = {
  id: 'id',
  id_freelancer: 'id_freelancer',
  id_categoria: 'id_categoria'
};

exports.Prisma.Freelancer_habilidadeScalarFieldEnum = {
  id: 'id',
  id_freelancer: 'id_freelancer',
  id_habilidade: 'id_habilidade'
};

exports.Prisma.HabilidadesScalarFieldEnum = {
  id: 'id',
  nome_habilidade: 'nome_habilidade',
  icon_habilidade: 'icon_habilidade'
};

exports.Prisma.Nivel_experienciaScalarFieldEnum = {
  id: 'id',
  nivel_experiencia: 'nivel_experiencia'
};

exports.Prisma.PortfolioScalarFieldEnum = {
  id: 'id',
  arquivo: 'arquivo'
};

exports.Prisma.Publicacao_projetosScalarFieldEnum = {
  id: 'id',
  id_cliente: 'id_cliente',
  nome_projeto: 'nome_projeto',
  descricao_projeto: 'descricao_projeto',
  orcamento: 'orcamento',
  id_nivel_experiencia: 'id_nivel_experiencia'
};

exports.Prisma.Categoria_publicacao_projetosScalarFieldEnum = {
  id: 'id',
  id_projeto: 'id_projeto',
  id_categoria: 'id_categoria'
};

exports.Prisma.Habilidade_publicacao_projetosScalarFieldEnum = {
  id: 'id',
  id_projeto: 'id_projeto',
  id_habilidade: 'id_habilidade'
};

exports.Prisma.Portfolio_freelancerScalarFieldEnum = {
  id: 'id',
  id_portfolio: 'id_portfolio',
  id_freelancer: 'id_freelancer'
};

exports.Prisma.AvaliacaoScalarFieldEnum = {
  id: 'id',
  estrelas: 'estrelas',
  comentario: 'comentario'
};

exports.Prisma.Avaliacao_usuarioScalarFieldEnum = {
  id: 'id',
  id_avaliacao: 'id_avaliacao',
  id_avaliador: 'id_avaliador',
  tipo_avaliador: 'tipo_avaliador',
  id_avaliado: 'id_avaliado',
  tipo_avaliado: 'tipo_avaliado'
};

exports.Prisma.PagamentosScalarFieldEnum = {
  id: 'id',
  id_cliente: 'id_cliente',
  valor: 'valor',
  metodo_pagamento: 'metodo_pagamento',
  status_pagamento: 'status_pagamento',
  parcelas: 'parcelas',
  taxa: 'taxa',
  codigo_transacao: 'codigo_transacao',
  descricao: 'descricao',
  moeda: 'moeda',
  data_pagamento: 'data_pagamento'
};

exports.Prisma.Freelancer_projetoScalarFieldEnum = {
  id: 'id',
  id_projeto: 'id_projeto',
  id_freelancer: 'id_freelancer',
  status: 'status'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.avaliacao_usuario_tipo_avaliador = exports.$Enums.avaliacao_usuario_tipo_avaliador = {
  cliente: 'cliente',
  freelancer: 'freelancer'
};

exports.avaliacao_usuario_tipo_avaliado = exports.$Enums.avaliacao_usuario_tipo_avaliado = {
  cliente: 'cliente',
  freelancer: 'freelancer'
};

exports.pagamentos_metodo_pagamento = exports.$Enums.pagamentos_metodo_pagamento = {
  cartao_credito: 'cartao_credito',
  boleto: 'boleto',
  pix: 'pix',
  transferencia: 'transferencia'
};

exports.pagamentos_status_pagamento = exports.$Enums.pagamentos_status_pagamento = {
  pendente: 'pendente',
  concluido: 'concluido',
  cancelado: 'cancelado'
};

exports.Prisma.ModelName = {
  cadastro_cliente: 'cadastro_cliente',
  cadastro_freelancer: 'cadastro_freelancer',
  categorias: 'categorias',
  descricao_perfil: 'descricao_perfil',
  foto_perfil: 'foto_perfil',
  freelancer_categoria: 'freelancer_categoria',
  freelancer_habilidade: 'freelancer_habilidade',
  habilidades: 'habilidades',
  nivel_experiencia: 'nivel_experiencia',
  portfolio: 'portfolio',
  publicacao_projetos: 'publicacao_projetos',
  categoria_publicacao_projetos: 'categoria_publicacao_projetos',
  habilidade_publicacao_projetos: 'habilidade_publicacao_projetos',
  portfolio_freelancer: 'portfolio_freelancer',
  avaliacao: 'avaliacao',
  avaliacao_usuario: 'avaliacao_usuario',
  pagamentos: 'pagamentos',
  freelancer_projeto: 'freelancer_projeto'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
