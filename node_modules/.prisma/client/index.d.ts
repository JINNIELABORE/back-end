
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model cadastro_cliente
 * 
 */
export type cadastro_cliente = $Result.DefaultSelection<Prisma.$cadastro_clientePayload>
/**
 * Model cadastro_freelancer
 * 
 */
export type cadastro_freelancer = $Result.DefaultSelection<Prisma.$cadastro_freelancerPayload>
/**
 * Model categorias
 * 
 */
export type categorias = $Result.DefaultSelection<Prisma.$categoriasPayload>
/**
 * Model descricao_perfil
 * 
 */
export type descricao_perfil = $Result.DefaultSelection<Prisma.$descricao_perfilPayload>
/**
 * Model foto_perfil
 * 
 */
export type foto_perfil = $Result.DefaultSelection<Prisma.$foto_perfilPayload>
/**
 * Model freelancer_categoria
 * 
 */
export type freelancer_categoria = $Result.DefaultSelection<Prisma.$freelancer_categoriaPayload>
/**
 * Model freelancer_habilidade
 * 
 */
export type freelancer_habilidade = $Result.DefaultSelection<Prisma.$freelancer_habilidadePayload>
/**
 * Model habilidades
 * 
 */
export type habilidades = $Result.DefaultSelection<Prisma.$habilidadesPayload>
/**
 * Model nivel_experiencia
 * 
 */
export type nivel_experiencia = $Result.DefaultSelection<Prisma.$nivel_experienciaPayload>
/**
 * Model portfolio
 * 
 */
export type portfolio = $Result.DefaultSelection<Prisma.$portfolioPayload>
/**
 * Model publicacao_projetos
 * 
 */
export type publicacao_projetos = $Result.DefaultSelection<Prisma.$publicacao_projetosPayload>
/**
 * Model categoria_publicacao_projetos
 * 
 */
export type categoria_publicacao_projetos = $Result.DefaultSelection<Prisma.$categoria_publicacao_projetosPayload>
/**
 * Model habilidade_publicacao_projetos
 * 
 */
export type habilidade_publicacao_projetos = $Result.DefaultSelection<Prisma.$habilidade_publicacao_projetosPayload>
/**
 * Model portfolio_freelancer
 * 
 */
export type portfolio_freelancer = $Result.DefaultSelection<Prisma.$portfolio_freelancerPayload>
/**
 * Model avaliacao
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type avaliacao = $Result.DefaultSelection<Prisma.$avaliacaoPayload>
/**
 * Model avaliacao_usuario
 * 
 */
export type avaliacao_usuario = $Result.DefaultSelection<Prisma.$avaliacao_usuarioPayload>
/**
 * Model pagamentos
 * 
 */
export type pagamentos = $Result.DefaultSelection<Prisma.$pagamentosPayload>
/**
 * Model freelancer_projeto
 * 
 */
export type freelancer_projeto = $Result.DefaultSelection<Prisma.$freelancer_projetoPayload>
/**
 * Model denuncia
 * 
 */
export type denuncia = $Result.DefaultSelection<Prisma.$denunciaPayload>
/**
 * Model disputa
 * 
 */
export type disputa = $Result.DefaultSelection<Prisma.$disputaPayload>
/**
 * Model solicitacao_pagamento
 * 
 */
export type solicitacao_pagamento = $Result.DefaultSelection<Prisma.$solicitacao_pagamentoPayload>
/**
 * Model total_a_receber
 * 
 */
export type total_a_receber = $Result.DefaultSelection<Prisma.$total_a_receberPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const avaliacao_usuario_tipo_avaliador: {
  cliente: 'cliente',
  freelancer: 'freelancer'
};

export type avaliacao_usuario_tipo_avaliador = (typeof avaliacao_usuario_tipo_avaliador)[keyof typeof avaliacao_usuario_tipo_avaliador]


export const avaliacao_usuario_tipo_avaliado: {
  cliente: 'cliente',
  freelancer: 'freelancer'
};

export type avaliacao_usuario_tipo_avaliado = (typeof avaliacao_usuario_tipo_avaliado)[keyof typeof avaliacao_usuario_tipo_avaliado]


export const pagamentos_metodo_pagamento: {
  pix: 'pix'
};

export type pagamentos_metodo_pagamento = (typeof pagamentos_metodo_pagamento)[keyof typeof pagamentos_metodo_pagamento]


export const pagamentos_status_pagamento: {
  pendente: 'pendente',
  concluido: 'concluido',
  cancelado: 'cancelado'
};

export type pagamentos_status_pagamento = (typeof pagamentos_status_pagamento)[keyof typeof pagamentos_status_pagamento]


export const disputa_tipo_denunciante: {
  cliente: 'cliente',
  freelancer: 'freelancer'
};

export type disputa_tipo_denunciante = (typeof disputa_tipo_denunciante)[keyof typeof disputa_tipo_denunciante]


export const disputa_tipo_denunciado: {
  cliente: 'cliente',
  freelancer: 'freelancer'
};

export type disputa_tipo_denunciado = (typeof disputa_tipo_denunciado)[keyof typeof disputa_tipo_denunciado]


export const disputa_situacao: {
  pendente: 'pendente',
  em_andamento: 'em_andamento',
  resolvido: 'resolvido'
};

export type disputa_situacao = (typeof disputa_situacao)[keyof typeof disputa_situacao]

}

export type avaliacao_usuario_tipo_avaliador = $Enums.avaliacao_usuario_tipo_avaliador

export const avaliacao_usuario_tipo_avaliador: typeof $Enums.avaliacao_usuario_tipo_avaliador

export type avaliacao_usuario_tipo_avaliado = $Enums.avaliacao_usuario_tipo_avaliado

export const avaliacao_usuario_tipo_avaliado: typeof $Enums.avaliacao_usuario_tipo_avaliado

export type pagamentos_metodo_pagamento = $Enums.pagamentos_metodo_pagamento

export const pagamentos_metodo_pagamento: typeof $Enums.pagamentos_metodo_pagamento

export type pagamentos_status_pagamento = $Enums.pagamentos_status_pagamento

export const pagamentos_status_pagamento: typeof $Enums.pagamentos_status_pagamento

export type disputa_tipo_denunciante = $Enums.disputa_tipo_denunciante

export const disputa_tipo_denunciante: typeof $Enums.disputa_tipo_denunciante

export type disputa_tipo_denunciado = $Enums.disputa_tipo_denunciado

export const disputa_tipo_denunciado: typeof $Enums.disputa_tipo_denunciado

export type disputa_situacao = $Enums.disputa_situacao

export const disputa_situacao: typeof $Enums.disputa_situacao

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Cadastro_clientes
 * const cadastro_clientes = await prisma.cadastro_cliente.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Cadastro_clientes
   * const cadastro_clientes = await prisma.cadastro_cliente.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.cadastro_cliente`: Exposes CRUD operations for the **cadastro_cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cadastro_clientes
    * const cadastro_clientes = await prisma.cadastro_cliente.findMany()
    * ```
    */
  get cadastro_cliente(): Prisma.cadastro_clienteDelegate<ExtArgs>;

  /**
   * `prisma.cadastro_freelancer`: Exposes CRUD operations for the **cadastro_freelancer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cadastro_freelancers
    * const cadastro_freelancers = await prisma.cadastro_freelancer.findMany()
    * ```
    */
  get cadastro_freelancer(): Prisma.cadastro_freelancerDelegate<ExtArgs>;

  /**
   * `prisma.categorias`: Exposes CRUD operations for the **categorias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categorias.findMany()
    * ```
    */
  get categorias(): Prisma.categoriasDelegate<ExtArgs>;

  /**
   * `prisma.descricao_perfil`: Exposes CRUD operations for the **descricao_perfil** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Descricao_perfils
    * const descricao_perfils = await prisma.descricao_perfil.findMany()
    * ```
    */
  get descricao_perfil(): Prisma.descricao_perfilDelegate<ExtArgs>;

  /**
   * `prisma.foto_perfil`: Exposes CRUD operations for the **foto_perfil** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Foto_perfils
    * const foto_perfils = await prisma.foto_perfil.findMany()
    * ```
    */
  get foto_perfil(): Prisma.foto_perfilDelegate<ExtArgs>;

  /**
   * `prisma.freelancer_categoria`: Exposes CRUD operations for the **freelancer_categoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Freelancer_categorias
    * const freelancer_categorias = await prisma.freelancer_categoria.findMany()
    * ```
    */
  get freelancer_categoria(): Prisma.freelancer_categoriaDelegate<ExtArgs>;

  /**
   * `prisma.freelancer_habilidade`: Exposes CRUD operations for the **freelancer_habilidade** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Freelancer_habilidades
    * const freelancer_habilidades = await prisma.freelancer_habilidade.findMany()
    * ```
    */
  get freelancer_habilidade(): Prisma.freelancer_habilidadeDelegate<ExtArgs>;

  /**
   * `prisma.habilidades`: Exposes CRUD operations for the **habilidades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Habilidades
    * const habilidades = await prisma.habilidades.findMany()
    * ```
    */
  get habilidades(): Prisma.habilidadesDelegate<ExtArgs>;

  /**
   * `prisma.nivel_experiencia`: Exposes CRUD operations for the **nivel_experiencia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nivel_experiencias
    * const nivel_experiencias = await prisma.nivel_experiencia.findMany()
    * ```
    */
  get nivel_experiencia(): Prisma.nivel_experienciaDelegate<ExtArgs>;

  /**
   * `prisma.portfolio`: Exposes CRUD operations for the **portfolio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Portfolios
    * const portfolios = await prisma.portfolio.findMany()
    * ```
    */
  get portfolio(): Prisma.portfolioDelegate<ExtArgs>;

  /**
   * `prisma.publicacao_projetos`: Exposes CRUD operations for the **publicacao_projetos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Publicacao_projetos
    * const publicacao_projetos = await prisma.publicacao_projetos.findMany()
    * ```
    */
  get publicacao_projetos(): Prisma.publicacao_projetosDelegate<ExtArgs>;

  /**
   * `prisma.categoria_publicacao_projetos`: Exposes CRUD operations for the **categoria_publicacao_projetos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categoria_publicacao_projetos
    * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.findMany()
    * ```
    */
  get categoria_publicacao_projetos(): Prisma.categoria_publicacao_projetosDelegate<ExtArgs>;

  /**
   * `prisma.habilidade_publicacao_projetos`: Exposes CRUD operations for the **habilidade_publicacao_projetos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Habilidade_publicacao_projetos
    * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.findMany()
    * ```
    */
  get habilidade_publicacao_projetos(): Prisma.habilidade_publicacao_projetosDelegate<ExtArgs>;

  /**
   * `prisma.portfolio_freelancer`: Exposes CRUD operations for the **portfolio_freelancer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Portfolio_freelancers
    * const portfolio_freelancers = await prisma.portfolio_freelancer.findMany()
    * ```
    */
  get portfolio_freelancer(): Prisma.portfolio_freelancerDelegate<ExtArgs>;

  /**
   * `prisma.avaliacao`: Exposes CRUD operations for the **avaliacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Avaliacaos
    * const avaliacaos = await prisma.avaliacao.findMany()
    * ```
    */
  get avaliacao(): Prisma.avaliacaoDelegate<ExtArgs>;

  /**
   * `prisma.avaliacao_usuario`: Exposes CRUD operations for the **avaliacao_usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Avaliacao_usuarios
    * const avaliacao_usuarios = await prisma.avaliacao_usuario.findMany()
    * ```
    */
  get avaliacao_usuario(): Prisma.avaliacao_usuarioDelegate<ExtArgs>;

  /**
   * `prisma.pagamentos`: Exposes CRUD operations for the **pagamentos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagamentos
    * const pagamentos = await prisma.pagamentos.findMany()
    * ```
    */
  get pagamentos(): Prisma.pagamentosDelegate<ExtArgs>;

  /**
   * `prisma.freelancer_projeto`: Exposes CRUD operations for the **freelancer_projeto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Freelancer_projetos
    * const freelancer_projetos = await prisma.freelancer_projeto.findMany()
    * ```
    */
  get freelancer_projeto(): Prisma.freelancer_projetoDelegate<ExtArgs>;

  /**
   * `prisma.denuncia`: Exposes CRUD operations for the **denuncia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Denuncias
    * const denuncias = await prisma.denuncia.findMany()
    * ```
    */
  get denuncia(): Prisma.denunciaDelegate<ExtArgs>;

  /**
   * `prisma.disputa`: Exposes CRUD operations for the **disputa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disputas
    * const disputas = await prisma.disputa.findMany()
    * ```
    */
  get disputa(): Prisma.disputaDelegate<ExtArgs>;

  /**
   * `prisma.solicitacao_pagamento`: Exposes CRUD operations for the **solicitacao_pagamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Solicitacao_pagamentos
    * const solicitacao_pagamentos = await prisma.solicitacao_pagamento.findMany()
    * ```
    */
  get solicitacao_pagamento(): Prisma.solicitacao_pagamentoDelegate<ExtArgs>;

  /**
   * `prisma.total_a_receber`: Exposes CRUD operations for the **total_a_receber** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Total_a_recebers
    * const total_a_recebers = await prisma.total_a_receber.findMany()
    * ```
    */
  get total_a_receber(): Prisma.total_a_receberDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.20.0
   * Query Engine version: 06fc58a368dc7be9fbbbe894adf8d445d208c284
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    cadastro_cliente: 'cadastro_cliente',
    cadastro_freelancer: 'cadastro_freelancer',
    categorias: 'categorias',
    descricao_perfil: 'descricao_perfil',
    foto_perfil: 'foto_perfil',
    freelancer_categoria: 'freelancer_categoria',
    freelancer_habilidade: 'freelancer_habilidade',
    habilidades: 'habilidades',
    nivel_experiencia: 'nivel_experiencia',
    portfolio: 'portfolio',
    publicacao_projetos: 'publicacao_projetos',
    categoria_publicacao_projetos: 'categoria_publicacao_projetos',
    habilidade_publicacao_projetos: 'habilidade_publicacao_projetos',
    portfolio_freelancer: 'portfolio_freelancer',
    avaliacao: 'avaliacao',
    avaliacao_usuario: 'avaliacao_usuario',
    pagamentos: 'pagamentos',
    freelancer_projeto: 'freelancer_projeto',
    denuncia: 'denuncia',
    disputa: 'disputa',
    solicitacao_pagamento: 'solicitacao_pagamento',
    total_a_receber: 'total_a_receber'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "cadastro_cliente" | "cadastro_freelancer" | "categorias" | "descricao_perfil" | "foto_perfil" | "freelancer_categoria" | "freelancer_habilidade" | "habilidades" | "nivel_experiencia" | "portfolio" | "publicacao_projetos" | "categoria_publicacao_projetos" | "habilidade_publicacao_projetos" | "portfolio_freelancer" | "avaliacao" | "avaliacao_usuario" | "pagamentos" | "freelancer_projeto" | "denuncia" | "disputa" | "solicitacao_pagamento" | "total_a_receber"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      cadastro_cliente: {
        payload: Prisma.$cadastro_clientePayload<ExtArgs>
        fields: Prisma.cadastro_clienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cadastro_clienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cadastro_clienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload>
          }
          findFirst: {
            args: Prisma.cadastro_clienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cadastro_clienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload>
          }
          findMany: {
            args: Prisma.cadastro_clienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload>[]
          }
          create: {
            args: Prisma.cadastro_clienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload>
          }
          createMany: {
            args: Prisma.cadastro_clienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.cadastro_clienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload>
          }
          update: {
            args: Prisma.cadastro_clienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload>
          }
          deleteMany: {
            args: Prisma.cadastro_clienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cadastro_clienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.cadastro_clienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_clientePayload>
          }
          aggregate: {
            args: Prisma.Cadastro_clienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCadastro_cliente>
          }
          groupBy: {
            args: Prisma.cadastro_clienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cadastro_clienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.cadastro_clienteCountArgs<ExtArgs>
            result: $Utils.Optional<Cadastro_clienteCountAggregateOutputType> | number
          }
        }
      }
      cadastro_freelancer: {
        payload: Prisma.$cadastro_freelancerPayload<ExtArgs>
        fields: Prisma.cadastro_freelancerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cadastro_freelancerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cadastro_freelancerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload>
          }
          findFirst: {
            args: Prisma.cadastro_freelancerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cadastro_freelancerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload>
          }
          findMany: {
            args: Prisma.cadastro_freelancerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload>[]
          }
          create: {
            args: Prisma.cadastro_freelancerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload>
          }
          createMany: {
            args: Prisma.cadastro_freelancerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.cadastro_freelancerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload>
          }
          update: {
            args: Prisma.cadastro_freelancerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload>
          }
          deleteMany: {
            args: Prisma.cadastro_freelancerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cadastro_freelancerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.cadastro_freelancerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cadastro_freelancerPayload>
          }
          aggregate: {
            args: Prisma.Cadastro_freelancerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCadastro_freelancer>
          }
          groupBy: {
            args: Prisma.cadastro_freelancerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cadastro_freelancerGroupByOutputType>[]
          }
          count: {
            args: Prisma.cadastro_freelancerCountArgs<ExtArgs>
            result: $Utils.Optional<Cadastro_freelancerCountAggregateOutputType> | number
          }
        }
      }
      categorias: {
        payload: Prisma.$categoriasPayload<ExtArgs>
        fields: Prisma.categoriasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoriasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoriasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          findFirst: {
            args: Prisma.categoriasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoriasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          findMany: {
            args: Prisma.categoriasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>[]
          }
          create: {
            args: Prisma.categoriasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          createMany: {
            args: Prisma.categoriasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.categoriasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          update: {
            args: Prisma.categoriasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          deleteMany: {
            args: Prisma.categoriasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoriasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.categoriasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriasPayload>
          }
          aggregate: {
            args: Prisma.CategoriasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategorias>
          }
          groupBy: {
            args: Prisma.categoriasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriasGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoriasCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriasCountAggregateOutputType> | number
          }
        }
      }
      descricao_perfil: {
        payload: Prisma.$descricao_perfilPayload<ExtArgs>
        fields: Prisma.descricao_perfilFieldRefs
        operations: {
          findUnique: {
            args: Prisma.descricao_perfilFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.descricao_perfilFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload>
          }
          findFirst: {
            args: Prisma.descricao_perfilFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.descricao_perfilFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload>
          }
          findMany: {
            args: Prisma.descricao_perfilFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload>[]
          }
          create: {
            args: Prisma.descricao_perfilCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload>
          }
          createMany: {
            args: Prisma.descricao_perfilCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.descricao_perfilDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload>
          }
          update: {
            args: Prisma.descricao_perfilUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload>
          }
          deleteMany: {
            args: Prisma.descricao_perfilDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.descricao_perfilUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.descricao_perfilUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descricao_perfilPayload>
          }
          aggregate: {
            args: Prisma.Descricao_perfilAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDescricao_perfil>
          }
          groupBy: {
            args: Prisma.descricao_perfilGroupByArgs<ExtArgs>
            result: $Utils.Optional<Descricao_perfilGroupByOutputType>[]
          }
          count: {
            args: Prisma.descricao_perfilCountArgs<ExtArgs>
            result: $Utils.Optional<Descricao_perfilCountAggregateOutputType> | number
          }
        }
      }
      foto_perfil: {
        payload: Prisma.$foto_perfilPayload<ExtArgs>
        fields: Prisma.foto_perfilFieldRefs
        operations: {
          findUnique: {
            args: Prisma.foto_perfilFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.foto_perfilFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload>
          }
          findFirst: {
            args: Prisma.foto_perfilFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.foto_perfilFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload>
          }
          findMany: {
            args: Prisma.foto_perfilFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload>[]
          }
          create: {
            args: Prisma.foto_perfilCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload>
          }
          createMany: {
            args: Prisma.foto_perfilCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.foto_perfilDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload>
          }
          update: {
            args: Prisma.foto_perfilUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload>
          }
          deleteMany: {
            args: Prisma.foto_perfilDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.foto_perfilUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.foto_perfilUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$foto_perfilPayload>
          }
          aggregate: {
            args: Prisma.Foto_perfilAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFoto_perfil>
          }
          groupBy: {
            args: Prisma.foto_perfilGroupByArgs<ExtArgs>
            result: $Utils.Optional<Foto_perfilGroupByOutputType>[]
          }
          count: {
            args: Prisma.foto_perfilCountArgs<ExtArgs>
            result: $Utils.Optional<Foto_perfilCountAggregateOutputType> | number
          }
        }
      }
      freelancer_categoria: {
        payload: Prisma.$freelancer_categoriaPayload<ExtArgs>
        fields: Prisma.freelancer_categoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.freelancer_categoriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.freelancer_categoriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload>
          }
          findFirst: {
            args: Prisma.freelancer_categoriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.freelancer_categoriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload>
          }
          findMany: {
            args: Prisma.freelancer_categoriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload>[]
          }
          create: {
            args: Prisma.freelancer_categoriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload>
          }
          createMany: {
            args: Prisma.freelancer_categoriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.freelancer_categoriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload>
          }
          update: {
            args: Prisma.freelancer_categoriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload>
          }
          deleteMany: {
            args: Prisma.freelancer_categoriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.freelancer_categoriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.freelancer_categoriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_categoriaPayload>
          }
          aggregate: {
            args: Prisma.Freelancer_categoriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFreelancer_categoria>
          }
          groupBy: {
            args: Prisma.freelancer_categoriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Freelancer_categoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.freelancer_categoriaCountArgs<ExtArgs>
            result: $Utils.Optional<Freelancer_categoriaCountAggregateOutputType> | number
          }
        }
      }
      freelancer_habilidade: {
        payload: Prisma.$freelancer_habilidadePayload<ExtArgs>
        fields: Prisma.freelancer_habilidadeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.freelancer_habilidadeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.freelancer_habilidadeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload>
          }
          findFirst: {
            args: Prisma.freelancer_habilidadeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.freelancer_habilidadeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload>
          }
          findMany: {
            args: Prisma.freelancer_habilidadeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload>[]
          }
          create: {
            args: Prisma.freelancer_habilidadeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload>
          }
          createMany: {
            args: Prisma.freelancer_habilidadeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.freelancer_habilidadeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload>
          }
          update: {
            args: Prisma.freelancer_habilidadeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload>
          }
          deleteMany: {
            args: Prisma.freelancer_habilidadeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.freelancer_habilidadeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.freelancer_habilidadeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_habilidadePayload>
          }
          aggregate: {
            args: Prisma.Freelancer_habilidadeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFreelancer_habilidade>
          }
          groupBy: {
            args: Prisma.freelancer_habilidadeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Freelancer_habilidadeGroupByOutputType>[]
          }
          count: {
            args: Prisma.freelancer_habilidadeCountArgs<ExtArgs>
            result: $Utils.Optional<Freelancer_habilidadeCountAggregateOutputType> | number
          }
        }
      }
      habilidades: {
        payload: Prisma.$habilidadesPayload<ExtArgs>
        fields: Prisma.habilidadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.habilidadesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.habilidadesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          findFirst: {
            args: Prisma.habilidadesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.habilidadesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          findMany: {
            args: Prisma.habilidadesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>[]
          }
          create: {
            args: Prisma.habilidadesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          createMany: {
            args: Prisma.habilidadesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.habilidadesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          update: {
            args: Prisma.habilidadesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          deleteMany: {
            args: Prisma.habilidadesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.habilidadesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.habilidadesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          aggregate: {
            args: Prisma.HabilidadesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHabilidades>
          }
          groupBy: {
            args: Prisma.habilidadesGroupByArgs<ExtArgs>
            result: $Utils.Optional<HabilidadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.habilidadesCountArgs<ExtArgs>
            result: $Utils.Optional<HabilidadesCountAggregateOutputType> | number
          }
        }
      }
      nivel_experiencia: {
        payload: Prisma.$nivel_experienciaPayload<ExtArgs>
        fields: Prisma.nivel_experienciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nivel_experienciaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nivel_experienciaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload>
          }
          findFirst: {
            args: Prisma.nivel_experienciaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nivel_experienciaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload>
          }
          findMany: {
            args: Prisma.nivel_experienciaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload>[]
          }
          create: {
            args: Prisma.nivel_experienciaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload>
          }
          createMany: {
            args: Prisma.nivel_experienciaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nivel_experienciaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload>
          }
          update: {
            args: Prisma.nivel_experienciaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload>
          }
          deleteMany: {
            args: Prisma.nivel_experienciaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nivel_experienciaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nivel_experienciaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nivel_experienciaPayload>
          }
          aggregate: {
            args: Prisma.Nivel_experienciaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNivel_experiencia>
          }
          groupBy: {
            args: Prisma.nivel_experienciaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nivel_experienciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.nivel_experienciaCountArgs<ExtArgs>
            result: $Utils.Optional<Nivel_experienciaCountAggregateOutputType> | number
          }
        }
      }
      portfolio: {
        payload: Prisma.$portfolioPayload<ExtArgs>
        fields: Prisma.portfolioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.portfolioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.portfolioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload>
          }
          findFirst: {
            args: Prisma.portfolioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.portfolioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload>
          }
          findMany: {
            args: Prisma.portfolioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload>[]
          }
          create: {
            args: Prisma.portfolioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload>
          }
          createMany: {
            args: Prisma.portfolioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.portfolioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload>
          }
          update: {
            args: Prisma.portfolioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload>
          }
          deleteMany: {
            args: Prisma.portfolioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.portfolioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.portfolioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolioPayload>
          }
          aggregate: {
            args: Prisma.PortfolioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePortfolio>
          }
          groupBy: {
            args: Prisma.portfolioGroupByArgs<ExtArgs>
            result: $Utils.Optional<PortfolioGroupByOutputType>[]
          }
          count: {
            args: Prisma.portfolioCountArgs<ExtArgs>
            result: $Utils.Optional<PortfolioCountAggregateOutputType> | number
          }
        }
      }
      publicacao_projetos: {
        payload: Prisma.$publicacao_projetosPayload<ExtArgs>
        fields: Prisma.publicacao_projetosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.publicacao_projetosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.publicacao_projetosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload>
          }
          findFirst: {
            args: Prisma.publicacao_projetosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.publicacao_projetosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload>
          }
          findMany: {
            args: Prisma.publicacao_projetosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload>[]
          }
          create: {
            args: Prisma.publicacao_projetosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload>
          }
          createMany: {
            args: Prisma.publicacao_projetosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.publicacao_projetosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload>
          }
          update: {
            args: Prisma.publicacao_projetosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload>
          }
          deleteMany: {
            args: Prisma.publicacao_projetosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.publicacao_projetosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.publicacao_projetosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$publicacao_projetosPayload>
          }
          aggregate: {
            args: Prisma.Publicacao_projetosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublicacao_projetos>
          }
          groupBy: {
            args: Prisma.publicacao_projetosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Publicacao_projetosGroupByOutputType>[]
          }
          count: {
            args: Prisma.publicacao_projetosCountArgs<ExtArgs>
            result: $Utils.Optional<Publicacao_projetosCountAggregateOutputType> | number
          }
        }
      }
      categoria_publicacao_projetos: {
        payload: Prisma.$categoria_publicacao_projetosPayload<ExtArgs>
        fields: Prisma.categoria_publicacao_projetosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoria_publicacao_projetosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoria_publicacao_projetosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload>
          }
          findFirst: {
            args: Prisma.categoria_publicacao_projetosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoria_publicacao_projetosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload>
          }
          findMany: {
            args: Prisma.categoria_publicacao_projetosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload>[]
          }
          create: {
            args: Prisma.categoria_publicacao_projetosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload>
          }
          createMany: {
            args: Prisma.categoria_publicacao_projetosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.categoria_publicacao_projetosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload>
          }
          update: {
            args: Prisma.categoria_publicacao_projetosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload>
          }
          deleteMany: {
            args: Prisma.categoria_publicacao_projetosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoria_publicacao_projetosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.categoria_publicacao_projetosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_publicacao_projetosPayload>
          }
          aggregate: {
            args: Prisma.Categoria_publicacao_projetosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria_publicacao_projetos>
          }
          groupBy: {
            args: Prisma.categoria_publicacao_projetosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Categoria_publicacao_projetosGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoria_publicacao_projetosCountArgs<ExtArgs>
            result: $Utils.Optional<Categoria_publicacao_projetosCountAggregateOutputType> | number
          }
        }
      }
      habilidade_publicacao_projetos: {
        payload: Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>
        fields: Prisma.habilidade_publicacao_projetosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.habilidade_publicacao_projetosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.habilidade_publicacao_projetosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload>
          }
          findFirst: {
            args: Prisma.habilidade_publicacao_projetosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.habilidade_publicacao_projetosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload>
          }
          findMany: {
            args: Prisma.habilidade_publicacao_projetosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload>[]
          }
          create: {
            args: Prisma.habilidade_publicacao_projetosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload>
          }
          createMany: {
            args: Prisma.habilidade_publicacao_projetosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.habilidade_publicacao_projetosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload>
          }
          update: {
            args: Prisma.habilidade_publicacao_projetosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload>
          }
          deleteMany: {
            args: Prisma.habilidade_publicacao_projetosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.habilidade_publicacao_projetosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.habilidade_publicacao_projetosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$habilidade_publicacao_projetosPayload>
          }
          aggregate: {
            args: Prisma.Habilidade_publicacao_projetosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHabilidade_publicacao_projetos>
          }
          groupBy: {
            args: Prisma.habilidade_publicacao_projetosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Habilidade_publicacao_projetosGroupByOutputType>[]
          }
          count: {
            args: Prisma.habilidade_publicacao_projetosCountArgs<ExtArgs>
            result: $Utils.Optional<Habilidade_publicacao_projetosCountAggregateOutputType> | number
          }
        }
      }
      portfolio_freelancer: {
        payload: Prisma.$portfolio_freelancerPayload<ExtArgs>
        fields: Prisma.portfolio_freelancerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.portfolio_freelancerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.portfolio_freelancerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload>
          }
          findFirst: {
            args: Prisma.portfolio_freelancerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.portfolio_freelancerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload>
          }
          findMany: {
            args: Prisma.portfolio_freelancerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload>[]
          }
          create: {
            args: Prisma.portfolio_freelancerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload>
          }
          createMany: {
            args: Prisma.portfolio_freelancerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.portfolio_freelancerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload>
          }
          update: {
            args: Prisma.portfolio_freelancerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload>
          }
          deleteMany: {
            args: Prisma.portfolio_freelancerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.portfolio_freelancerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.portfolio_freelancerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$portfolio_freelancerPayload>
          }
          aggregate: {
            args: Prisma.Portfolio_freelancerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePortfolio_freelancer>
          }
          groupBy: {
            args: Prisma.portfolio_freelancerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Portfolio_freelancerGroupByOutputType>[]
          }
          count: {
            args: Prisma.portfolio_freelancerCountArgs<ExtArgs>
            result: $Utils.Optional<Portfolio_freelancerCountAggregateOutputType> | number
          }
        }
      }
      avaliacao: {
        payload: Prisma.$avaliacaoPayload<ExtArgs>
        fields: Prisma.avaliacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.avaliacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.avaliacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload>
          }
          findFirst: {
            args: Prisma.avaliacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.avaliacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload>
          }
          findMany: {
            args: Prisma.avaliacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload>[]
          }
          create: {
            args: Prisma.avaliacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload>
          }
          createMany: {
            args: Prisma.avaliacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.avaliacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload>
          }
          update: {
            args: Prisma.avaliacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload>
          }
          deleteMany: {
            args: Prisma.avaliacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.avaliacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.avaliacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacaoPayload>
          }
          aggregate: {
            args: Prisma.AvaliacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvaliacao>
          }
          groupBy: {
            args: Prisma.avaliacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AvaliacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.avaliacaoCountArgs<ExtArgs>
            result: $Utils.Optional<AvaliacaoCountAggregateOutputType> | number
          }
        }
      }
      avaliacao_usuario: {
        payload: Prisma.$avaliacao_usuarioPayload<ExtArgs>
        fields: Prisma.avaliacao_usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.avaliacao_usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.avaliacao_usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload>
          }
          findFirst: {
            args: Prisma.avaliacao_usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.avaliacao_usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload>
          }
          findMany: {
            args: Prisma.avaliacao_usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload>[]
          }
          create: {
            args: Prisma.avaliacao_usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload>
          }
          createMany: {
            args: Prisma.avaliacao_usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.avaliacao_usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload>
          }
          update: {
            args: Prisma.avaliacao_usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload>
          }
          deleteMany: {
            args: Prisma.avaliacao_usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.avaliacao_usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.avaliacao_usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$avaliacao_usuarioPayload>
          }
          aggregate: {
            args: Prisma.Avaliacao_usuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvaliacao_usuario>
          }
          groupBy: {
            args: Prisma.avaliacao_usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Avaliacao_usuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.avaliacao_usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<Avaliacao_usuarioCountAggregateOutputType> | number
          }
        }
      }
      pagamentos: {
        payload: Prisma.$pagamentosPayload<ExtArgs>
        fields: Prisma.pagamentosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pagamentosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pagamentosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload>
          }
          findFirst: {
            args: Prisma.pagamentosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pagamentosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload>
          }
          findMany: {
            args: Prisma.pagamentosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload>[]
          }
          create: {
            args: Prisma.pagamentosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload>
          }
          createMany: {
            args: Prisma.pagamentosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.pagamentosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload>
          }
          update: {
            args: Prisma.pagamentosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload>
          }
          deleteMany: {
            args: Prisma.pagamentosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pagamentosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.pagamentosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagamentosPayload>
          }
          aggregate: {
            args: Prisma.PagamentosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePagamentos>
          }
          groupBy: {
            args: Prisma.pagamentosGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagamentosGroupByOutputType>[]
          }
          count: {
            args: Prisma.pagamentosCountArgs<ExtArgs>
            result: $Utils.Optional<PagamentosCountAggregateOutputType> | number
          }
        }
      }
      freelancer_projeto: {
        payload: Prisma.$freelancer_projetoPayload<ExtArgs>
        fields: Prisma.freelancer_projetoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.freelancer_projetoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.freelancer_projetoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload>
          }
          findFirst: {
            args: Prisma.freelancer_projetoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.freelancer_projetoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload>
          }
          findMany: {
            args: Prisma.freelancer_projetoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload>[]
          }
          create: {
            args: Prisma.freelancer_projetoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload>
          }
          createMany: {
            args: Prisma.freelancer_projetoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.freelancer_projetoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload>
          }
          update: {
            args: Prisma.freelancer_projetoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload>
          }
          deleteMany: {
            args: Prisma.freelancer_projetoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.freelancer_projetoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.freelancer_projetoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$freelancer_projetoPayload>
          }
          aggregate: {
            args: Prisma.Freelancer_projetoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFreelancer_projeto>
          }
          groupBy: {
            args: Prisma.freelancer_projetoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Freelancer_projetoGroupByOutputType>[]
          }
          count: {
            args: Prisma.freelancer_projetoCountArgs<ExtArgs>
            result: $Utils.Optional<Freelancer_projetoCountAggregateOutputType> | number
          }
        }
      }
      denuncia: {
        payload: Prisma.$denunciaPayload<ExtArgs>
        fields: Prisma.denunciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.denunciaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.denunciaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload>
          }
          findFirst: {
            args: Prisma.denunciaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.denunciaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload>
          }
          findMany: {
            args: Prisma.denunciaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload>[]
          }
          create: {
            args: Prisma.denunciaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload>
          }
          createMany: {
            args: Prisma.denunciaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.denunciaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload>
          }
          update: {
            args: Prisma.denunciaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload>
          }
          deleteMany: {
            args: Prisma.denunciaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.denunciaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.denunciaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$denunciaPayload>
          }
          aggregate: {
            args: Prisma.DenunciaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDenuncia>
          }
          groupBy: {
            args: Prisma.denunciaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DenunciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.denunciaCountArgs<ExtArgs>
            result: $Utils.Optional<DenunciaCountAggregateOutputType> | number
          }
        }
      }
      disputa: {
        payload: Prisma.$disputaPayload<ExtArgs>
        fields: Prisma.disputaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disputaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disputaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload>
          }
          findFirst: {
            args: Prisma.disputaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disputaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload>
          }
          findMany: {
            args: Prisma.disputaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload>[]
          }
          create: {
            args: Prisma.disputaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload>
          }
          createMany: {
            args: Prisma.disputaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.disputaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload>
          }
          update: {
            args: Prisma.disputaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload>
          }
          deleteMany: {
            args: Prisma.disputaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.disputaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.disputaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disputaPayload>
          }
          aggregate: {
            args: Prisma.DisputaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDisputa>
          }
          groupBy: {
            args: Prisma.disputaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DisputaGroupByOutputType>[]
          }
          count: {
            args: Prisma.disputaCountArgs<ExtArgs>
            result: $Utils.Optional<DisputaCountAggregateOutputType> | number
          }
        }
      }
      solicitacao_pagamento: {
        payload: Prisma.$solicitacao_pagamentoPayload<ExtArgs>
        fields: Prisma.solicitacao_pagamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.solicitacao_pagamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.solicitacao_pagamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload>
          }
          findFirst: {
            args: Prisma.solicitacao_pagamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.solicitacao_pagamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload>
          }
          findMany: {
            args: Prisma.solicitacao_pagamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload>[]
          }
          create: {
            args: Prisma.solicitacao_pagamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload>
          }
          createMany: {
            args: Prisma.solicitacao_pagamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.solicitacao_pagamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload>
          }
          update: {
            args: Prisma.solicitacao_pagamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload>
          }
          deleteMany: {
            args: Prisma.solicitacao_pagamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.solicitacao_pagamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.solicitacao_pagamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacao_pagamentoPayload>
          }
          aggregate: {
            args: Prisma.Solicitacao_pagamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSolicitacao_pagamento>
          }
          groupBy: {
            args: Prisma.solicitacao_pagamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Solicitacao_pagamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.solicitacao_pagamentoCountArgs<ExtArgs>
            result: $Utils.Optional<Solicitacao_pagamentoCountAggregateOutputType> | number
          }
        }
      }
      total_a_receber: {
        payload: Prisma.$total_a_receberPayload<ExtArgs>
        fields: Prisma.total_a_receberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.total_a_receberFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.total_a_receberFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload>
          }
          findFirst: {
            args: Prisma.total_a_receberFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.total_a_receberFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload>
          }
          findMany: {
            args: Prisma.total_a_receberFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload>[]
          }
          create: {
            args: Prisma.total_a_receberCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload>
          }
          createMany: {
            args: Prisma.total_a_receberCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.total_a_receberDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload>
          }
          update: {
            args: Prisma.total_a_receberUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload>
          }
          deleteMany: {
            args: Prisma.total_a_receberDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.total_a_receberUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.total_a_receberUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$total_a_receberPayload>
          }
          aggregate: {
            args: Prisma.Total_a_receberAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTotal_a_receber>
          }
          groupBy: {
            args: Prisma.total_a_receberGroupByArgs<ExtArgs>
            result: $Utils.Optional<Total_a_receberGroupByOutputType>[]
          }
          count: {
            args: Prisma.total_a_receberCountArgs<ExtArgs>
            result: $Utils.Optional<Total_a_receberCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model cadastro_cliente
   */

  export type AggregateCadastro_cliente = {
    _count: Cadastro_clienteCountAggregateOutputType | null
    _avg: Cadastro_clienteAvgAggregateOutputType | null
    _sum: Cadastro_clienteSumAggregateOutputType | null
    _min: Cadastro_clienteMinAggregateOutputType | null
    _max: Cadastro_clienteMaxAggregateOutputType | null
  }

  export type Cadastro_clienteAvgAggregateOutputType = {
    id: number | null
    cnpj_cliente: number | null
  }

  export type Cadastro_clienteSumAggregateOutputType = {
    id: number | null
    cnpj_cliente: bigint | null
  }

  export type Cadastro_clienteMinAggregateOutputType = {
    id: number | null
    nome_cliente: string | null
    cnpj_cliente: bigint | null
    email_cliente: string | null
    senha_cliente: string | null
    is_premium: boolean | null
  }

  export type Cadastro_clienteMaxAggregateOutputType = {
    id: number | null
    nome_cliente: string | null
    cnpj_cliente: bigint | null
    email_cliente: string | null
    senha_cliente: string | null
    is_premium: boolean | null
  }

  export type Cadastro_clienteCountAggregateOutputType = {
    id: number
    nome_cliente: number
    cnpj_cliente: number
    email_cliente: number
    senha_cliente: number
    is_premium: number
    _all: number
  }


  export type Cadastro_clienteAvgAggregateInputType = {
    id?: true
    cnpj_cliente?: true
  }

  export type Cadastro_clienteSumAggregateInputType = {
    id?: true
    cnpj_cliente?: true
  }

  export type Cadastro_clienteMinAggregateInputType = {
    id?: true
    nome_cliente?: true
    cnpj_cliente?: true
    email_cliente?: true
    senha_cliente?: true
    is_premium?: true
  }

  export type Cadastro_clienteMaxAggregateInputType = {
    id?: true
    nome_cliente?: true
    cnpj_cliente?: true
    email_cliente?: true
    senha_cliente?: true
    is_premium?: true
  }

  export type Cadastro_clienteCountAggregateInputType = {
    id?: true
    nome_cliente?: true
    cnpj_cliente?: true
    email_cliente?: true
    senha_cliente?: true
    is_premium?: true
    _all?: true
  }

  export type Cadastro_clienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cadastro_cliente to aggregate.
     */
    where?: cadastro_clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cadastro_clientes to fetch.
     */
    orderBy?: cadastro_clienteOrderByWithRelationInput | cadastro_clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cadastro_clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cadastro_clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cadastro_clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cadastro_clientes
    **/
    _count?: true | Cadastro_clienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cadastro_clienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cadastro_clienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cadastro_clienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cadastro_clienteMaxAggregateInputType
  }

  export type GetCadastro_clienteAggregateType<T extends Cadastro_clienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCadastro_cliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCadastro_cliente[P]>
      : GetScalarType<T[P], AggregateCadastro_cliente[P]>
  }




  export type cadastro_clienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cadastro_clienteWhereInput
    orderBy?: cadastro_clienteOrderByWithAggregationInput | cadastro_clienteOrderByWithAggregationInput[]
    by: Cadastro_clienteScalarFieldEnum[] | Cadastro_clienteScalarFieldEnum
    having?: cadastro_clienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cadastro_clienteCountAggregateInputType | true
    _avg?: Cadastro_clienteAvgAggregateInputType
    _sum?: Cadastro_clienteSumAggregateInputType
    _min?: Cadastro_clienteMinAggregateInputType
    _max?: Cadastro_clienteMaxAggregateInputType
  }

  export type Cadastro_clienteGroupByOutputType = {
    id: number
    nome_cliente: string
    cnpj_cliente: bigint
    email_cliente: string
    senha_cliente: string
    is_premium: boolean
    _count: Cadastro_clienteCountAggregateOutputType | null
    _avg: Cadastro_clienteAvgAggregateOutputType | null
    _sum: Cadastro_clienteSumAggregateOutputType | null
    _min: Cadastro_clienteMinAggregateOutputType | null
    _max: Cadastro_clienteMaxAggregateOutputType | null
  }

  type GetCadastro_clienteGroupByPayload<T extends cadastro_clienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cadastro_clienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cadastro_clienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cadastro_clienteGroupByOutputType[P]>
            : GetScalarType<T[P], Cadastro_clienteGroupByOutputType[P]>
        }
      >
    >


  export type cadastro_clienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_cliente?: boolean
    cnpj_cliente?: boolean
    email_cliente?: boolean
    senha_cliente?: boolean
    is_premium?: boolean
  }, ExtArgs["result"]["cadastro_cliente"]>


  export type cadastro_clienteSelectScalar = {
    id?: boolean
    nome_cliente?: boolean
    cnpj_cliente?: boolean
    email_cliente?: boolean
    senha_cliente?: boolean
    is_premium?: boolean
  }


  export type $cadastro_clientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cadastro_cliente"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_cliente: string
      cnpj_cliente: bigint
      email_cliente: string
      senha_cliente: string
      is_premium: boolean
    }, ExtArgs["result"]["cadastro_cliente"]>
    composites: {}
  }

  type cadastro_clienteGetPayload<S extends boolean | null | undefined | cadastro_clienteDefaultArgs> = $Result.GetResult<Prisma.$cadastro_clientePayload, S>

  type cadastro_clienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<cadastro_clienteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Cadastro_clienteCountAggregateInputType | true
    }

  export interface cadastro_clienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cadastro_cliente'], meta: { name: 'cadastro_cliente' } }
    /**
     * Find zero or one Cadastro_cliente that matches the filter.
     * @param {cadastro_clienteFindUniqueArgs} args - Arguments to find a Cadastro_cliente
     * @example
     * // Get one Cadastro_cliente
     * const cadastro_cliente = await prisma.cadastro_cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cadastro_clienteFindUniqueArgs>(args: SelectSubset<T, cadastro_clienteFindUniqueArgs<ExtArgs>>): Prisma__cadastro_clienteClient<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cadastro_cliente that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {cadastro_clienteFindUniqueOrThrowArgs} args - Arguments to find a Cadastro_cliente
     * @example
     * // Get one Cadastro_cliente
     * const cadastro_cliente = await prisma.cadastro_cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cadastro_clienteFindUniqueOrThrowArgs>(args: SelectSubset<T, cadastro_clienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cadastro_clienteClient<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cadastro_cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_clienteFindFirstArgs} args - Arguments to find a Cadastro_cliente
     * @example
     * // Get one Cadastro_cliente
     * const cadastro_cliente = await prisma.cadastro_cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cadastro_clienteFindFirstArgs>(args?: SelectSubset<T, cadastro_clienteFindFirstArgs<ExtArgs>>): Prisma__cadastro_clienteClient<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cadastro_cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_clienteFindFirstOrThrowArgs} args - Arguments to find a Cadastro_cliente
     * @example
     * // Get one Cadastro_cliente
     * const cadastro_cliente = await prisma.cadastro_cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cadastro_clienteFindFirstOrThrowArgs>(args?: SelectSubset<T, cadastro_clienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__cadastro_clienteClient<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Cadastro_clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_clienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cadastro_clientes
     * const cadastro_clientes = await prisma.cadastro_cliente.findMany()
     * 
     * // Get first 10 Cadastro_clientes
     * const cadastro_clientes = await prisma.cadastro_cliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cadastro_clienteWithIdOnly = await prisma.cadastro_cliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cadastro_clienteFindManyArgs>(args?: SelectSubset<T, cadastro_clienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cadastro_cliente.
     * @param {cadastro_clienteCreateArgs} args - Arguments to create a Cadastro_cliente.
     * @example
     * // Create one Cadastro_cliente
     * const Cadastro_cliente = await prisma.cadastro_cliente.create({
     *   data: {
     *     // ... data to create a Cadastro_cliente
     *   }
     * })
     * 
     */
    create<T extends cadastro_clienteCreateArgs>(args: SelectSubset<T, cadastro_clienteCreateArgs<ExtArgs>>): Prisma__cadastro_clienteClient<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Cadastro_clientes.
     * @param {cadastro_clienteCreateManyArgs} args - Arguments to create many Cadastro_clientes.
     * @example
     * // Create many Cadastro_clientes
     * const cadastro_cliente = await prisma.cadastro_cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cadastro_clienteCreateManyArgs>(args?: SelectSubset<T, cadastro_clienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cadastro_cliente.
     * @param {cadastro_clienteDeleteArgs} args - Arguments to delete one Cadastro_cliente.
     * @example
     * // Delete one Cadastro_cliente
     * const Cadastro_cliente = await prisma.cadastro_cliente.delete({
     *   where: {
     *     // ... filter to delete one Cadastro_cliente
     *   }
     * })
     * 
     */
    delete<T extends cadastro_clienteDeleteArgs>(args: SelectSubset<T, cadastro_clienteDeleteArgs<ExtArgs>>): Prisma__cadastro_clienteClient<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cadastro_cliente.
     * @param {cadastro_clienteUpdateArgs} args - Arguments to update one Cadastro_cliente.
     * @example
     * // Update one Cadastro_cliente
     * const cadastro_cliente = await prisma.cadastro_cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cadastro_clienteUpdateArgs>(args: SelectSubset<T, cadastro_clienteUpdateArgs<ExtArgs>>): Prisma__cadastro_clienteClient<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Cadastro_clientes.
     * @param {cadastro_clienteDeleteManyArgs} args - Arguments to filter Cadastro_clientes to delete.
     * @example
     * // Delete a few Cadastro_clientes
     * const { count } = await prisma.cadastro_cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cadastro_clienteDeleteManyArgs>(args?: SelectSubset<T, cadastro_clienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cadastro_clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_clienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cadastro_clientes
     * const cadastro_cliente = await prisma.cadastro_cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cadastro_clienteUpdateManyArgs>(args: SelectSubset<T, cadastro_clienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cadastro_cliente.
     * @param {cadastro_clienteUpsertArgs} args - Arguments to update or create a Cadastro_cliente.
     * @example
     * // Update or create a Cadastro_cliente
     * const cadastro_cliente = await prisma.cadastro_cliente.upsert({
     *   create: {
     *     // ... data to create a Cadastro_cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cadastro_cliente we want to update
     *   }
     * })
     */
    upsert<T extends cadastro_clienteUpsertArgs>(args: SelectSubset<T, cadastro_clienteUpsertArgs<ExtArgs>>): Prisma__cadastro_clienteClient<$Result.GetResult<Prisma.$cadastro_clientePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Cadastro_clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_clienteCountArgs} args - Arguments to filter Cadastro_clientes to count.
     * @example
     * // Count the number of Cadastro_clientes
     * const count = await prisma.cadastro_cliente.count({
     *   where: {
     *     // ... the filter for the Cadastro_clientes we want to count
     *   }
     * })
    **/
    count<T extends cadastro_clienteCountArgs>(
      args?: Subset<T, cadastro_clienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cadastro_clienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cadastro_cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cadastro_clienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cadastro_clienteAggregateArgs>(args: Subset<T, Cadastro_clienteAggregateArgs>): Prisma.PrismaPromise<GetCadastro_clienteAggregateType<T>>

    /**
     * Group by Cadastro_cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_clienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cadastro_clienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cadastro_clienteGroupByArgs['orderBy'] }
        : { orderBy?: cadastro_clienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cadastro_clienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCadastro_clienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cadastro_cliente model
   */
  readonly fields: cadastro_clienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cadastro_cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cadastro_clienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cadastro_cliente model
   */ 
  interface cadastro_clienteFieldRefs {
    readonly id: FieldRef<"cadastro_cliente", 'Int'>
    readonly nome_cliente: FieldRef<"cadastro_cliente", 'String'>
    readonly cnpj_cliente: FieldRef<"cadastro_cliente", 'BigInt'>
    readonly email_cliente: FieldRef<"cadastro_cliente", 'String'>
    readonly senha_cliente: FieldRef<"cadastro_cliente", 'String'>
    readonly is_premium: FieldRef<"cadastro_cliente", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * cadastro_cliente findUnique
   */
  export type cadastro_clienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_cliente to fetch.
     */
    where: cadastro_clienteWhereUniqueInput
  }

  /**
   * cadastro_cliente findUniqueOrThrow
   */
  export type cadastro_clienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_cliente to fetch.
     */
    where: cadastro_clienteWhereUniqueInput
  }

  /**
   * cadastro_cliente findFirst
   */
  export type cadastro_clienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_cliente to fetch.
     */
    where?: cadastro_clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cadastro_clientes to fetch.
     */
    orderBy?: cadastro_clienteOrderByWithRelationInput | cadastro_clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cadastro_clientes.
     */
    cursor?: cadastro_clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cadastro_clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cadastro_clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cadastro_clientes.
     */
    distinct?: Cadastro_clienteScalarFieldEnum | Cadastro_clienteScalarFieldEnum[]
  }

  /**
   * cadastro_cliente findFirstOrThrow
   */
  export type cadastro_clienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_cliente to fetch.
     */
    where?: cadastro_clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cadastro_clientes to fetch.
     */
    orderBy?: cadastro_clienteOrderByWithRelationInput | cadastro_clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cadastro_clientes.
     */
    cursor?: cadastro_clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cadastro_clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cadastro_clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cadastro_clientes.
     */
    distinct?: Cadastro_clienteScalarFieldEnum | Cadastro_clienteScalarFieldEnum[]
  }

  /**
   * cadastro_cliente findMany
   */
  export type cadastro_clienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_clientes to fetch.
     */
    where?: cadastro_clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cadastro_clientes to fetch.
     */
    orderBy?: cadastro_clienteOrderByWithRelationInput | cadastro_clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cadastro_clientes.
     */
    cursor?: cadastro_clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cadastro_clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cadastro_clientes.
     */
    skip?: number
    distinct?: Cadastro_clienteScalarFieldEnum | Cadastro_clienteScalarFieldEnum[]
  }

  /**
   * cadastro_cliente create
   */
  export type cadastro_clienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * The data needed to create a cadastro_cliente.
     */
    data: XOR<cadastro_clienteCreateInput, cadastro_clienteUncheckedCreateInput>
  }

  /**
   * cadastro_cliente createMany
   */
  export type cadastro_clienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cadastro_clientes.
     */
    data: cadastro_clienteCreateManyInput | cadastro_clienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cadastro_cliente update
   */
  export type cadastro_clienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * The data needed to update a cadastro_cliente.
     */
    data: XOR<cadastro_clienteUpdateInput, cadastro_clienteUncheckedUpdateInput>
    /**
     * Choose, which cadastro_cliente to update.
     */
    where: cadastro_clienteWhereUniqueInput
  }

  /**
   * cadastro_cliente updateMany
   */
  export type cadastro_clienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cadastro_clientes.
     */
    data: XOR<cadastro_clienteUpdateManyMutationInput, cadastro_clienteUncheckedUpdateManyInput>
    /**
     * Filter which cadastro_clientes to update
     */
    where?: cadastro_clienteWhereInput
  }

  /**
   * cadastro_cliente upsert
   */
  export type cadastro_clienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * The filter to search for the cadastro_cliente to update in case it exists.
     */
    where: cadastro_clienteWhereUniqueInput
    /**
     * In case the cadastro_cliente found by the `where` argument doesn't exist, create a new cadastro_cliente with this data.
     */
    create: XOR<cadastro_clienteCreateInput, cadastro_clienteUncheckedCreateInput>
    /**
     * In case the cadastro_cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cadastro_clienteUpdateInput, cadastro_clienteUncheckedUpdateInput>
  }

  /**
   * cadastro_cliente delete
   */
  export type cadastro_clienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
    /**
     * Filter which cadastro_cliente to delete.
     */
    where: cadastro_clienteWhereUniqueInput
  }

  /**
   * cadastro_cliente deleteMany
   */
  export type cadastro_clienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cadastro_clientes to delete
     */
    where?: cadastro_clienteWhereInput
  }

  /**
   * cadastro_cliente without action
   */
  export type cadastro_clienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_cliente
     */
    select?: cadastro_clienteSelect<ExtArgs> | null
  }


  /**
   * Model cadastro_freelancer
   */

  export type AggregateCadastro_freelancer = {
    _count: Cadastro_freelancerCountAggregateOutputType | null
    _avg: Cadastro_freelancerAvgAggregateOutputType | null
    _sum: Cadastro_freelancerSumAggregateOutputType | null
    _min: Cadastro_freelancerMinAggregateOutputType | null
    _max: Cadastro_freelancerMaxAggregateOutputType | null
  }

  export type Cadastro_freelancerAvgAggregateOutputType = {
    id: number | null
    cpf_freelancer: number | null
  }

  export type Cadastro_freelancerSumAggregateOutputType = {
    id: number | null
    cpf_freelancer: bigint | null
  }

  export type Cadastro_freelancerMinAggregateOutputType = {
    id: number | null
    nome_freelancer: string | null
    data_nascimento: Date | null
    cpf_freelancer: bigint | null
    email_freelancer: string | null
    senha_freelancer: string | null
    is_premium: boolean | null
  }

  export type Cadastro_freelancerMaxAggregateOutputType = {
    id: number | null
    nome_freelancer: string | null
    data_nascimento: Date | null
    cpf_freelancer: bigint | null
    email_freelancer: string | null
    senha_freelancer: string | null
    is_premium: boolean | null
  }

  export type Cadastro_freelancerCountAggregateOutputType = {
    id: number
    nome_freelancer: number
    data_nascimento: number
    cpf_freelancer: number
    email_freelancer: number
    senha_freelancer: number
    is_premium: number
    _all: number
  }


  export type Cadastro_freelancerAvgAggregateInputType = {
    id?: true
    cpf_freelancer?: true
  }

  export type Cadastro_freelancerSumAggregateInputType = {
    id?: true
    cpf_freelancer?: true
  }

  export type Cadastro_freelancerMinAggregateInputType = {
    id?: true
    nome_freelancer?: true
    data_nascimento?: true
    cpf_freelancer?: true
    email_freelancer?: true
    senha_freelancer?: true
    is_premium?: true
  }

  export type Cadastro_freelancerMaxAggregateInputType = {
    id?: true
    nome_freelancer?: true
    data_nascimento?: true
    cpf_freelancer?: true
    email_freelancer?: true
    senha_freelancer?: true
    is_premium?: true
  }

  export type Cadastro_freelancerCountAggregateInputType = {
    id?: true
    nome_freelancer?: true
    data_nascimento?: true
    cpf_freelancer?: true
    email_freelancer?: true
    senha_freelancer?: true
    is_premium?: true
    _all?: true
  }

  export type Cadastro_freelancerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cadastro_freelancer to aggregate.
     */
    where?: cadastro_freelancerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cadastro_freelancers to fetch.
     */
    orderBy?: cadastro_freelancerOrderByWithRelationInput | cadastro_freelancerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cadastro_freelancerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cadastro_freelancers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cadastro_freelancers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cadastro_freelancers
    **/
    _count?: true | Cadastro_freelancerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cadastro_freelancerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cadastro_freelancerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cadastro_freelancerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cadastro_freelancerMaxAggregateInputType
  }

  export type GetCadastro_freelancerAggregateType<T extends Cadastro_freelancerAggregateArgs> = {
        [P in keyof T & keyof AggregateCadastro_freelancer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCadastro_freelancer[P]>
      : GetScalarType<T[P], AggregateCadastro_freelancer[P]>
  }




  export type cadastro_freelancerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cadastro_freelancerWhereInput
    orderBy?: cadastro_freelancerOrderByWithAggregationInput | cadastro_freelancerOrderByWithAggregationInput[]
    by: Cadastro_freelancerScalarFieldEnum[] | Cadastro_freelancerScalarFieldEnum
    having?: cadastro_freelancerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cadastro_freelancerCountAggregateInputType | true
    _avg?: Cadastro_freelancerAvgAggregateInputType
    _sum?: Cadastro_freelancerSumAggregateInputType
    _min?: Cadastro_freelancerMinAggregateInputType
    _max?: Cadastro_freelancerMaxAggregateInputType
  }

  export type Cadastro_freelancerGroupByOutputType = {
    id: number
    nome_freelancer: string
    data_nascimento: Date
    cpf_freelancer: bigint
    email_freelancer: string
    senha_freelancer: string
    is_premium: boolean
    _count: Cadastro_freelancerCountAggregateOutputType | null
    _avg: Cadastro_freelancerAvgAggregateOutputType | null
    _sum: Cadastro_freelancerSumAggregateOutputType | null
    _min: Cadastro_freelancerMinAggregateOutputType | null
    _max: Cadastro_freelancerMaxAggregateOutputType | null
  }

  type GetCadastro_freelancerGroupByPayload<T extends cadastro_freelancerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cadastro_freelancerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cadastro_freelancerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cadastro_freelancerGroupByOutputType[P]>
            : GetScalarType<T[P], Cadastro_freelancerGroupByOutputType[P]>
        }
      >
    >


  export type cadastro_freelancerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_freelancer?: boolean
    data_nascimento?: boolean
    cpf_freelancer?: boolean
    email_freelancer?: boolean
    senha_freelancer?: boolean
    is_premium?: boolean
  }, ExtArgs["result"]["cadastro_freelancer"]>


  export type cadastro_freelancerSelectScalar = {
    id?: boolean
    nome_freelancer?: boolean
    data_nascimento?: boolean
    cpf_freelancer?: boolean
    email_freelancer?: boolean
    senha_freelancer?: boolean
    is_premium?: boolean
  }


  export type $cadastro_freelancerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cadastro_freelancer"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_freelancer: string
      data_nascimento: Date
      cpf_freelancer: bigint
      email_freelancer: string
      senha_freelancer: string
      is_premium: boolean
    }, ExtArgs["result"]["cadastro_freelancer"]>
    composites: {}
  }

  type cadastro_freelancerGetPayload<S extends boolean | null | undefined | cadastro_freelancerDefaultArgs> = $Result.GetResult<Prisma.$cadastro_freelancerPayload, S>

  type cadastro_freelancerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<cadastro_freelancerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Cadastro_freelancerCountAggregateInputType | true
    }

  export interface cadastro_freelancerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cadastro_freelancer'], meta: { name: 'cadastro_freelancer' } }
    /**
     * Find zero or one Cadastro_freelancer that matches the filter.
     * @param {cadastro_freelancerFindUniqueArgs} args - Arguments to find a Cadastro_freelancer
     * @example
     * // Get one Cadastro_freelancer
     * const cadastro_freelancer = await prisma.cadastro_freelancer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cadastro_freelancerFindUniqueArgs>(args: SelectSubset<T, cadastro_freelancerFindUniqueArgs<ExtArgs>>): Prisma__cadastro_freelancerClient<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cadastro_freelancer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {cadastro_freelancerFindUniqueOrThrowArgs} args - Arguments to find a Cadastro_freelancer
     * @example
     * // Get one Cadastro_freelancer
     * const cadastro_freelancer = await prisma.cadastro_freelancer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cadastro_freelancerFindUniqueOrThrowArgs>(args: SelectSubset<T, cadastro_freelancerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cadastro_freelancerClient<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cadastro_freelancer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_freelancerFindFirstArgs} args - Arguments to find a Cadastro_freelancer
     * @example
     * // Get one Cadastro_freelancer
     * const cadastro_freelancer = await prisma.cadastro_freelancer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cadastro_freelancerFindFirstArgs>(args?: SelectSubset<T, cadastro_freelancerFindFirstArgs<ExtArgs>>): Prisma__cadastro_freelancerClient<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cadastro_freelancer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_freelancerFindFirstOrThrowArgs} args - Arguments to find a Cadastro_freelancer
     * @example
     * // Get one Cadastro_freelancer
     * const cadastro_freelancer = await prisma.cadastro_freelancer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cadastro_freelancerFindFirstOrThrowArgs>(args?: SelectSubset<T, cadastro_freelancerFindFirstOrThrowArgs<ExtArgs>>): Prisma__cadastro_freelancerClient<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Cadastro_freelancers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_freelancerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cadastro_freelancers
     * const cadastro_freelancers = await prisma.cadastro_freelancer.findMany()
     * 
     * // Get first 10 Cadastro_freelancers
     * const cadastro_freelancers = await prisma.cadastro_freelancer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cadastro_freelancerWithIdOnly = await prisma.cadastro_freelancer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cadastro_freelancerFindManyArgs>(args?: SelectSubset<T, cadastro_freelancerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cadastro_freelancer.
     * @param {cadastro_freelancerCreateArgs} args - Arguments to create a Cadastro_freelancer.
     * @example
     * // Create one Cadastro_freelancer
     * const Cadastro_freelancer = await prisma.cadastro_freelancer.create({
     *   data: {
     *     // ... data to create a Cadastro_freelancer
     *   }
     * })
     * 
     */
    create<T extends cadastro_freelancerCreateArgs>(args: SelectSubset<T, cadastro_freelancerCreateArgs<ExtArgs>>): Prisma__cadastro_freelancerClient<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Cadastro_freelancers.
     * @param {cadastro_freelancerCreateManyArgs} args - Arguments to create many Cadastro_freelancers.
     * @example
     * // Create many Cadastro_freelancers
     * const cadastro_freelancer = await prisma.cadastro_freelancer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cadastro_freelancerCreateManyArgs>(args?: SelectSubset<T, cadastro_freelancerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cadastro_freelancer.
     * @param {cadastro_freelancerDeleteArgs} args - Arguments to delete one Cadastro_freelancer.
     * @example
     * // Delete one Cadastro_freelancer
     * const Cadastro_freelancer = await prisma.cadastro_freelancer.delete({
     *   where: {
     *     // ... filter to delete one Cadastro_freelancer
     *   }
     * })
     * 
     */
    delete<T extends cadastro_freelancerDeleteArgs>(args: SelectSubset<T, cadastro_freelancerDeleteArgs<ExtArgs>>): Prisma__cadastro_freelancerClient<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cadastro_freelancer.
     * @param {cadastro_freelancerUpdateArgs} args - Arguments to update one Cadastro_freelancer.
     * @example
     * // Update one Cadastro_freelancer
     * const cadastro_freelancer = await prisma.cadastro_freelancer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cadastro_freelancerUpdateArgs>(args: SelectSubset<T, cadastro_freelancerUpdateArgs<ExtArgs>>): Prisma__cadastro_freelancerClient<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Cadastro_freelancers.
     * @param {cadastro_freelancerDeleteManyArgs} args - Arguments to filter Cadastro_freelancers to delete.
     * @example
     * // Delete a few Cadastro_freelancers
     * const { count } = await prisma.cadastro_freelancer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cadastro_freelancerDeleteManyArgs>(args?: SelectSubset<T, cadastro_freelancerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cadastro_freelancers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_freelancerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cadastro_freelancers
     * const cadastro_freelancer = await prisma.cadastro_freelancer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cadastro_freelancerUpdateManyArgs>(args: SelectSubset<T, cadastro_freelancerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cadastro_freelancer.
     * @param {cadastro_freelancerUpsertArgs} args - Arguments to update or create a Cadastro_freelancer.
     * @example
     * // Update or create a Cadastro_freelancer
     * const cadastro_freelancer = await prisma.cadastro_freelancer.upsert({
     *   create: {
     *     // ... data to create a Cadastro_freelancer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cadastro_freelancer we want to update
     *   }
     * })
     */
    upsert<T extends cadastro_freelancerUpsertArgs>(args: SelectSubset<T, cadastro_freelancerUpsertArgs<ExtArgs>>): Prisma__cadastro_freelancerClient<$Result.GetResult<Prisma.$cadastro_freelancerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Cadastro_freelancers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_freelancerCountArgs} args - Arguments to filter Cadastro_freelancers to count.
     * @example
     * // Count the number of Cadastro_freelancers
     * const count = await prisma.cadastro_freelancer.count({
     *   where: {
     *     // ... the filter for the Cadastro_freelancers we want to count
     *   }
     * })
    **/
    count<T extends cadastro_freelancerCountArgs>(
      args?: Subset<T, cadastro_freelancerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cadastro_freelancerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cadastro_freelancer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cadastro_freelancerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cadastro_freelancerAggregateArgs>(args: Subset<T, Cadastro_freelancerAggregateArgs>): Prisma.PrismaPromise<GetCadastro_freelancerAggregateType<T>>

    /**
     * Group by Cadastro_freelancer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cadastro_freelancerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cadastro_freelancerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cadastro_freelancerGroupByArgs['orderBy'] }
        : { orderBy?: cadastro_freelancerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cadastro_freelancerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCadastro_freelancerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cadastro_freelancer model
   */
  readonly fields: cadastro_freelancerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cadastro_freelancer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cadastro_freelancerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cadastro_freelancer model
   */ 
  interface cadastro_freelancerFieldRefs {
    readonly id: FieldRef<"cadastro_freelancer", 'Int'>
    readonly nome_freelancer: FieldRef<"cadastro_freelancer", 'String'>
    readonly data_nascimento: FieldRef<"cadastro_freelancer", 'DateTime'>
    readonly cpf_freelancer: FieldRef<"cadastro_freelancer", 'BigInt'>
    readonly email_freelancer: FieldRef<"cadastro_freelancer", 'String'>
    readonly senha_freelancer: FieldRef<"cadastro_freelancer", 'String'>
    readonly is_premium: FieldRef<"cadastro_freelancer", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * cadastro_freelancer findUnique
   */
  export type cadastro_freelancerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_freelancer to fetch.
     */
    where: cadastro_freelancerWhereUniqueInput
  }

  /**
   * cadastro_freelancer findUniqueOrThrow
   */
  export type cadastro_freelancerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_freelancer to fetch.
     */
    where: cadastro_freelancerWhereUniqueInput
  }

  /**
   * cadastro_freelancer findFirst
   */
  export type cadastro_freelancerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_freelancer to fetch.
     */
    where?: cadastro_freelancerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cadastro_freelancers to fetch.
     */
    orderBy?: cadastro_freelancerOrderByWithRelationInput | cadastro_freelancerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cadastro_freelancers.
     */
    cursor?: cadastro_freelancerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cadastro_freelancers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cadastro_freelancers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cadastro_freelancers.
     */
    distinct?: Cadastro_freelancerScalarFieldEnum | Cadastro_freelancerScalarFieldEnum[]
  }

  /**
   * cadastro_freelancer findFirstOrThrow
   */
  export type cadastro_freelancerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_freelancer to fetch.
     */
    where?: cadastro_freelancerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cadastro_freelancers to fetch.
     */
    orderBy?: cadastro_freelancerOrderByWithRelationInput | cadastro_freelancerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cadastro_freelancers.
     */
    cursor?: cadastro_freelancerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cadastro_freelancers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cadastro_freelancers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cadastro_freelancers.
     */
    distinct?: Cadastro_freelancerScalarFieldEnum | Cadastro_freelancerScalarFieldEnum[]
  }

  /**
   * cadastro_freelancer findMany
   */
  export type cadastro_freelancerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which cadastro_freelancers to fetch.
     */
    where?: cadastro_freelancerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cadastro_freelancers to fetch.
     */
    orderBy?: cadastro_freelancerOrderByWithRelationInput | cadastro_freelancerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cadastro_freelancers.
     */
    cursor?: cadastro_freelancerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cadastro_freelancers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cadastro_freelancers.
     */
    skip?: number
    distinct?: Cadastro_freelancerScalarFieldEnum | Cadastro_freelancerScalarFieldEnum[]
  }

  /**
   * cadastro_freelancer create
   */
  export type cadastro_freelancerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * The data needed to create a cadastro_freelancer.
     */
    data: XOR<cadastro_freelancerCreateInput, cadastro_freelancerUncheckedCreateInput>
  }

  /**
   * cadastro_freelancer createMany
   */
  export type cadastro_freelancerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cadastro_freelancers.
     */
    data: cadastro_freelancerCreateManyInput | cadastro_freelancerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cadastro_freelancer update
   */
  export type cadastro_freelancerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * The data needed to update a cadastro_freelancer.
     */
    data: XOR<cadastro_freelancerUpdateInput, cadastro_freelancerUncheckedUpdateInput>
    /**
     * Choose, which cadastro_freelancer to update.
     */
    where: cadastro_freelancerWhereUniqueInput
  }

  /**
   * cadastro_freelancer updateMany
   */
  export type cadastro_freelancerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cadastro_freelancers.
     */
    data: XOR<cadastro_freelancerUpdateManyMutationInput, cadastro_freelancerUncheckedUpdateManyInput>
    /**
     * Filter which cadastro_freelancers to update
     */
    where?: cadastro_freelancerWhereInput
  }

  /**
   * cadastro_freelancer upsert
   */
  export type cadastro_freelancerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * The filter to search for the cadastro_freelancer to update in case it exists.
     */
    where: cadastro_freelancerWhereUniqueInput
    /**
     * In case the cadastro_freelancer found by the `where` argument doesn't exist, create a new cadastro_freelancer with this data.
     */
    create: XOR<cadastro_freelancerCreateInput, cadastro_freelancerUncheckedCreateInput>
    /**
     * In case the cadastro_freelancer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cadastro_freelancerUpdateInput, cadastro_freelancerUncheckedUpdateInput>
  }

  /**
   * cadastro_freelancer delete
   */
  export type cadastro_freelancerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
    /**
     * Filter which cadastro_freelancer to delete.
     */
    where: cadastro_freelancerWhereUniqueInput
  }

  /**
   * cadastro_freelancer deleteMany
   */
  export type cadastro_freelancerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cadastro_freelancers to delete
     */
    where?: cadastro_freelancerWhereInput
  }

  /**
   * cadastro_freelancer without action
   */
  export type cadastro_freelancerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cadastro_freelancer
     */
    select?: cadastro_freelancerSelect<ExtArgs> | null
  }


  /**
   * Model categorias
   */

  export type AggregateCategorias = {
    _count: CategoriasCountAggregateOutputType | null
    _avg: CategoriasAvgAggregateOutputType | null
    _sum: CategoriasSumAggregateOutputType | null
    _min: CategoriasMinAggregateOutputType | null
    _max: CategoriasMaxAggregateOutputType | null
  }

  export type CategoriasAvgAggregateOutputType = {
    id: number | null
  }

  export type CategoriasSumAggregateOutputType = {
    id: number | null
  }

  export type CategoriasMinAggregateOutputType = {
    id: number | null
    nome_categoria: string | null
    icon_categoria: string | null
  }

  export type CategoriasMaxAggregateOutputType = {
    id: number | null
    nome_categoria: string | null
    icon_categoria: string | null
  }

  export type CategoriasCountAggregateOutputType = {
    id: number
    nome_categoria: number
    icon_categoria: number
    _all: number
  }


  export type CategoriasAvgAggregateInputType = {
    id?: true
  }

  export type CategoriasSumAggregateInputType = {
    id?: true
  }

  export type CategoriasMinAggregateInputType = {
    id?: true
    nome_categoria?: true
    icon_categoria?: true
  }

  export type CategoriasMaxAggregateInputType = {
    id?: true
    nome_categoria?: true
    icon_categoria?: true
  }

  export type CategoriasCountAggregateInputType = {
    id?: true
    nome_categoria?: true
    icon_categoria?: true
    _all?: true
  }

  export type CategoriasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categorias to aggregate.
     */
    where?: categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriasOrderByWithRelationInput | categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categorias
    **/
    _count?: true | CategoriasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriasMaxAggregateInputType
  }

  export type GetCategoriasAggregateType<T extends CategoriasAggregateArgs> = {
        [P in keyof T & keyof AggregateCategorias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategorias[P]>
      : GetScalarType<T[P], AggregateCategorias[P]>
  }




  export type categoriasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriasWhereInput
    orderBy?: categoriasOrderByWithAggregationInput | categoriasOrderByWithAggregationInput[]
    by: CategoriasScalarFieldEnum[] | CategoriasScalarFieldEnum
    having?: categoriasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriasCountAggregateInputType | true
    _avg?: CategoriasAvgAggregateInputType
    _sum?: CategoriasSumAggregateInputType
    _min?: CategoriasMinAggregateInputType
    _max?: CategoriasMaxAggregateInputType
  }

  export type CategoriasGroupByOutputType = {
    id: number
    nome_categoria: string
    icon_categoria: string
    _count: CategoriasCountAggregateOutputType | null
    _avg: CategoriasAvgAggregateOutputType | null
    _sum: CategoriasSumAggregateOutputType | null
    _min: CategoriasMinAggregateOutputType | null
    _max: CategoriasMaxAggregateOutputType | null
  }

  type GetCategoriasGroupByPayload<T extends categoriasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriasGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriasGroupByOutputType[P]>
        }
      >
    >


  export type categoriasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_categoria?: boolean
    icon_categoria?: boolean
  }, ExtArgs["result"]["categorias"]>


  export type categoriasSelectScalar = {
    id?: boolean
    nome_categoria?: boolean
    icon_categoria?: boolean
  }


  export type $categoriasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categorias"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_categoria: string
      icon_categoria: string
    }, ExtArgs["result"]["categorias"]>
    composites: {}
  }

  type categoriasGetPayload<S extends boolean | null | undefined | categoriasDefaultArgs> = $Result.GetResult<Prisma.$categoriasPayload, S>

  type categoriasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<categoriasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriasCountAggregateInputType | true
    }

  export interface categoriasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categorias'], meta: { name: 'categorias' } }
    /**
     * Find zero or one Categorias that matches the filter.
     * @param {categoriasFindUniqueArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoriasFindUniqueArgs>(args: SelectSubset<T, categoriasFindUniqueArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Categorias that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {categoriasFindUniqueOrThrowArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoriasFindUniqueOrThrowArgs>(args: SelectSubset<T, categoriasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasFindFirstArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoriasFindFirstArgs>(args?: SelectSubset<T, categoriasFindFirstArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Categorias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasFindFirstOrThrowArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoriasFindFirstOrThrowArgs>(args?: SelectSubset<T, categoriasFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categorias.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categorias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriasWithIdOnly = await prisma.categorias.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends categoriasFindManyArgs>(args?: SelectSubset<T, categoriasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Categorias.
     * @param {categoriasCreateArgs} args - Arguments to create a Categorias.
     * @example
     * // Create one Categorias
     * const Categorias = await prisma.categorias.create({
     *   data: {
     *     // ... data to create a Categorias
     *   }
     * })
     * 
     */
    create<T extends categoriasCreateArgs>(args: SelectSubset<T, categoriasCreateArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Categorias.
     * @param {categoriasCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categorias = await prisma.categorias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoriasCreateManyArgs>(args?: SelectSubset<T, categoriasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categorias.
     * @param {categoriasDeleteArgs} args - Arguments to delete one Categorias.
     * @example
     * // Delete one Categorias
     * const Categorias = await prisma.categorias.delete({
     *   where: {
     *     // ... filter to delete one Categorias
     *   }
     * })
     * 
     */
    delete<T extends categoriasDeleteArgs>(args: SelectSubset<T, categoriasDeleteArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Categorias.
     * @param {categoriasUpdateArgs} args - Arguments to update one Categorias.
     * @example
     * // Update one Categorias
     * const categorias = await prisma.categorias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoriasUpdateArgs>(args: SelectSubset<T, categoriasUpdateArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Categorias.
     * @param {categoriasDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categorias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoriasDeleteManyArgs>(args?: SelectSubset<T, categoriasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categorias = await prisma.categorias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoriasUpdateManyArgs>(args: SelectSubset<T, categoriasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categorias.
     * @param {categoriasUpsertArgs} args - Arguments to update or create a Categorias.
     * @example
     * // Update or create a Categorias
     * const categorias = await prisma.categorias.upsert({
     *   create: {
     *     // ... data to create a Categorias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categorias we want to update
     *   }
     * })
     */
    upsert<T extends categoriasUpsertArgs>(args: SelectSubset<T, categoriasUpsertArgs<ExtArgs>>): Prisma__categoriasClient<$Result.GetResult<Prisma.$categoriasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categorias.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends categoriasCountArgs>(
      args?: Subset<T, categoriasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriasAggregateArgs>(args: Subset<T, CategoriasAggregateArgs>): Prisma.PrismaPromise<GetCategoriasAggregateType<T>>

    /**
     * Group by Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoriasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoriasGroupByArgs['orderBy'] }
        : { orderBy?: categoriasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoriasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categorias model
   */
  readonly fields: categoriasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categorias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoriasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the categorias model
   */ 
  interface categoriasFieldRefs {
    readonly id: FieldRef<"categorias", 'Int'>
    readonly nome_categoria: FieldRef<"categorias", 'String'>
    readonly icon_categoria: FieldRef<"categorias", 'String'>
  }
    

  // Custom InputTypes
  /**
   * categorias findUnique
   */
  export type categoriasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where: categoriasWhereUniqueInput
  }

  /**
   * categorias findUniqueOrThrow
   */
  export type categoriasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where: categoriasWhereUniqueInput
  }

  /**
   * categorias findFirst
   */
  export type categoriasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where?: categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriasOrderByWithRelationInput | categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categorias.
     */
    cursor?: categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categorias.
     */
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * categorias findFirstOrThrow
   */
  export type categoriasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where?: categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriasOrderByWithRelationInput | categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categorias.
     */
    cursor?: categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categorias.
     */
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * categorias findMany
   */
  export type categoriasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where?: categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriasOrderByWithRelationInput | categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categorias.
     */
    cursor?: categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * categorias create
   */
  export type categoriasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * The data needed to create a categorias.
     */
    data: XOR<categoriasCreateInput, categoriasUncheckedCreateInput>
  }

  /**
   * categorias createMany
   */
  export type categoriasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categorias.
     */
    data: categoriasCreateManyInput | categoriasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categorias update
   */
  export type categoriasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * The data needed to update a categorias.
     */
    data: XOR<categoriasUpdateInput, categoriasUncheckedUpdateInput>
    /**
     * Choose, which categorias to update.
     */
    where: categoriasWhereUniqueInput
  }

  /**
   * categorias updateMany
   */
  export type categoriasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categorias.
     */
    data: XOR<categoriasUpdateManyMutationInput, categoriasUncheckedUpdateManyInput>
    /**
     * Filter which categorias to update
     */
    where?: categoriasWhereInput
  }

  /**
   * categorias upsert
   */
  export type categoriasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * The filter to search for the categorias to update in case it exists.
     */
    where: categoriasWhereUniqueInput
    /**
     * In case the categorias found by the `where` argument doesn't exist, create a new categorias with this data.
     */
    create: XOR<categoriasCreateInput, categoriasUncheckedCreateInput>
    /**
     * In case the categorias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriasUpdateInput, categoriasUncheckedUpdateInput>
  }

  /**
   * categorias delete
   */
  export type categoriasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
    /**
     * Filter which categorias to delete.
     */
    where: categoriasWhereUniqueInput
  }

  /**
   * categorias deleteMany
   */
  export type categoriasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categorias to delete
     */
    where?: categoriasWhereInput
  }

  /**
   * categorias without action
   */
  export type categoriasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categorias
     */
    select?: categoriasSelect<ExtArgs> | null
  }


  /**
   * Model descricao_perfil
   */

  export type AggregateDescricao_perfil = {
    _count: Descricao_perfilCountAggregateOutputType | null
    _avg: Descricao_perfilAvgAggregateOutputType | null
    _sum: Descricao_perfilSumAggregateOutputType | null
    _min: Descricao_perfilMinAggregateOutputType | null
    _max: Descricao_perfilMaxAggregateOutputType | null
  }

  export type Descricao_perfilAvgAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    id_freelancer: number | null
  }

  export type Descricao_perfilSumAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    id_freelancer: number | null
  }

  export type Descricao_perfilMinAggregateOutputType = {
    id: number | null
    descricao: string | null
    id_cliente: number | null
    id_freelancer: number | null
  }

  export type Descricao_perfilMaxAggregateOutputType = {
    id: number | null
    descricao: string | null
    id_cliente: number | null
    id_freelancer: number | null
  }

  export type Descricao_perfilCountAggregateOutputType = {
    id: number
    descricao: number
    id_cliente: number
    id_freelancer: number
    _all: number
  }


  export type Descricao_perfilAvgAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
  }

  export type Descricao_perfilSumAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
  }

  export type Descricao_perfilMinAggregateInputType = {
    id?: true
    descricao?: true
    id_cliente?: true
    id_freelancer?: true
  }

  export type Descricao_perfilMaxAggregateInputType = {
    id?: true
    descricao?: true
    id_cliente?: true
    id_freelancer?: true
  }

  export type Descricao_perfilCountAggregateInputType = {
    id?: true
    descricao?: true
    id_cliente?: true
    id_freelancer?: true
    _all?: true
  }

  export type Descricao_perfilAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which descricao_perfil to aggregate.
     */
    where?: descricao_perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of descricao_perfils to fetch.
     */
    orderBy?: descricao_perfilOrderByWithRelationInput | descricao_perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: descricao_perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` descricao_perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` descricao_perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned descricao_perfils
    **/
    _count?: true | Descricao_perfilCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Descricao_perfilAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Descricao_perfilSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Descricao_perfilMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Descricao_perfilMaxAggregateInputType
  }

  export type GetDescricao_perfilAggregateType<T extends Descricao_perfilAggregateArgs> = {
        [P in keyof T & keyof AggregateDescricao_perfil]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDescricao_perfil[P]>
      : GetScalarType<T[P], AggregateDescricao_perfil[P]>
  }




  export type descricao_perfilGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: descricao_perfilWhereInput
    orderBy?: descricao_perfilOrderByWithAggregationInput | descricao_perfilOrderByWithAggregationInput[]
    by: Descricao_perfilScalarFieldEnum[] | Descricao_perfilScalarFieldEnum
    having?: descricao_perfilScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Descricao_perfilCountAggregateInputType | true
    _avg?: Descricao_perfilAvgAggregateInputType
    _sum?: Descricao_perfilSumAggregateInputType
    _min?: Descricao_perfilMinAggregateInputType
    _max?: Descricao_perfilMaxAggregateInputType
  }

  export type Descricao_perfilGroupByOutputType = {
    id: number
    descricao: string
    id_cliente: number | null
    id_freelancer: number | null
    _count: Descricao_perfilCountAggregateOutputType | null
    _avg: Descricao_perfilAvgAggregateOutputType | null
    _sum: Descricao_perfilSumAggregateOutputType | null
    _min: Descricao_perfilMinAggregateOutputType | null
    _max: Descricao_perfilMaxAggregateOutputType | null
  }

  type GetDescricao_perfilGroupByPayload<T extends descricao_perfilGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Descricao_perfilGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Descricao_perfilGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Descricao_perfilGroupByOutputType[P]>
            : GetScalarType<T[P], Descricao_perfilGroupByOutputType[P]>
        }
      >
    >


  export type descricao_perfilSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    id_cliente?: boolean
    id_freelancer?: boolean
  }, ExtArgs["result"]["descricao_perfil"]>


  export type descricao_perfilSelectScalar = {
    id?: boolean
    descricao?: boolean
    id_cliente?: boolean
    id_freelancer?: boolean
  }


  export type $descricao_perfilPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "descricao_perfil"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descricao: string
      id_cliente: number | null
      id_freelancer: number | null
    }, ExtArgs["result"]["descricao_perfil"]>
    composites: {}
  }

  type descricao_perfilGetPayload<S extends boolean | null | undefined | descricao_perfilDefaultArgs> = $Result.GetResult<Prisma.$descricao_perfilPayload, S>

  type descricao_perfilCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<descricao_perfilFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Descricao_perfilCountAggregateInputType | true
    }

  export interface descricao_perfilDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['descricao_perfil'], meta: { name: 'descricao_perfil' } }
    /**
     * Find zero or one Descricao_perfil that matches the filter.
     * @param {descricao_perfilFindUniqueArgs} args - Arguments to find a Descricao_perfil
     * @example
     * // Get one Descricao_perfil
     * const descricao_perfil = await prisma.descricao_perfil.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends descricao_perfilFindUniqueArgs>(args: SelectSubset<T, descricao_perfilFindUniqueArgs<ExtArgs>>): Prisma__descricao_perfilClient<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Descricao_perfil that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {descricao_perfilFindUniqueOrThrowArgs} args - Arguments to find a Descricao_perfil
     * @example
     * // Get one Descricao_perfil
     * const descricao_perfil = await prisma.descricao_perfil.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends descricao_perfilFindUniqueOrThrowArgs>(args: SelectSubset<T, descricao_perfilFindUniqueOrThrowArgs<ExtArgs>>): Prisma__descricao_perfilClient<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Descricao_perfil that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descricao_perfilFindFirstArgs} args - Arguments to find a Descricao_perfil
     * @example
     * // Get one Descricao_perfil
     * const descricao_perfil = await prisma.descricao_perfil.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends descricao_perfilFindFirstArgs>(args?: SelectSubset<T, descricao_perfilFindFirstArgs<ExtArgs>>): Prisma__descricao_perfilClient<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Descricao_perfil that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descricao_perfilFindFirstOrThrowArgs} args - Arguments to find a Descricao_perfil
     * @example
     * // Get one Descricao_perfil
     * const descricao_perfil = await prisma.descricao_perfil.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends descricao_perfilFindFirstOrThrowArgs>(args?: SelectSubset<T, descricao_perfilFindFirstOrThrowArgs<ExtArgs>>): Prisma__descricao_perfilClient<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Descricao_perfils that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descricao_perfilFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Descricao_perfils
     * const descricao_perfils = await prisma.descricao_perfil.findMany()
     * 
     * // Get first 10 Descricao_perfils
     * const descricao_perfils = await prisma.descricao_perfil.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const descricao_perfilWithIdOnly = await prisma.descricao_perfil.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends descricao_perfilFindManyArgs>(args?: SelectSubset<T, descricao_perfilFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Descricao_perfil.
     * @param {descricao_perfilCreateArgs} args - Arguments to create a Descricao_perfil.
     * @example
     * // Create one Descricao_perfil
     * const Descricao_perfil = await prisma.descricao_perfil.create({
     *   data: {
     *     // ... data to create a Descricao_perfil
     *   }
     * })
     * 
     */
    create<T extends descricao_perfilCreateArgs>(args: SelectSubset<T, descricao_perfilCreateArgs<ExtArgs>>): Prisma__descricao_perfilClient<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Descricao_perfils.
     * @param {descricao_perfilCreateManyArgs} args - Arguments to create many Descricao_perfils.
     * @example
     * // Create many Descricao_perfils
     * const descricao_perfil = await prisma.descricao_perfil.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends descricao_perfilCreateManyArgs>(args?: SelectSubset<T, descricao_perfilCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Descricao_perfil.
     * @param {descricao_perfilDeleteArgs} args - Arguments to delete one Descricao_perfil.
     * @example
     * // Delete one Descricao_perfil
     * const Descricao_perfil = await prisma.descricao_perfil.delete({
     *   where: {
     *     // ... filter to delete one Descricao_perfil
     *   }
     * })
     * 
     */
    delete<T extends descricao_perfilDeleteArgs>(args: SelectSubset<T, descricao_perfilDeleteArgs<ExtArgs>>): Prisma__descricao_perfilClient<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Descricao_perfil.
     * @param {descricao_perfilUpdateArgs} args - Arguments to update one Descricao_perfil.
     * @example
     * // Update one Descricao_perfil
     * const descricao_perfil = await prisma.descricao_perfil.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends descricao_perfilUpdateArgs>(args: SelectSubset<T, descricao_perfilUpdateArgs<ExtArgs>>): Prisma__descricao_perfilClient<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Descricao_perfils.
     * @param {descricao_perfilDeleteManyArgs} args - Arguments to filter Descricao_perfils to delete.
     * @example
     * // Delete a few Descricao_perfils
     * const { count } = await prisma.descricao_perfil.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends descricao_perfilDeleteManyArgs>(args?: SelectSubset<T, descricao_perfilDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Descricao_perfils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descricao_perfilUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Descricao_perfils
     * const descricao_perfil = await prisma.descricao_perfil.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends descricao_perfilUpdateManyArgs>(args: SelectSubset<T, descricao_perfilUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Descricao_perfil.
     * @param {descricao_perfilUpsertArgs} args - Arguments to update or create a Descricao_perfil.
     * @example
     * // Update or create a Descricao_perfil
     * const descricao_perfil = await prisma.descricao_perfil.upsert({
     *   create: {
     *     // ... data to create a Descricao_perfil
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Descricao_perfil we want to update
     *   }
     * })
     */
    upsert<T extends descricao_perfilUpsertArgs>(args: SelectSubset<T, descricao_perfilUpsertArgs<ExtArgs>>): Prisma__descricao_perfilClient<$Result.GetResult<Prisma.$descricao_perfilPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Descricao_perfils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descricao_perfilCountArgs} args - Arguments to filter Descricao_perfils to count.
     * @example
     * // Count the number of Descricao_perfils
     * const count = await prisma.descricao_perfil.count({
     *   where: {
     *     // ... the filter for the Descricao_perfils we want to count
     *   }
     * })
    **/
    count<T extends descricao_perfilCountArgs>(
      args?: Subset<T, descricao_perfilCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Descricao_perfilCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Descricao_perfil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Descricao_perfilAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Descricao_perfilAggregateArgs>(args: Subset<T, Descricao_perfilAggregateArgs>): Prisma.PrismaPromise<GetDescricao_perfilAggregateType<T>>

    /**
     * Group by Descricao_perfil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descricao_perfilGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends descricao_perfilGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: descricao_perfilGroupByArgs['orderBy'] }
        : { orderBy?: descricao_perfilGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, descricao_perfilGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDescricao_perfilGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the descricao_perfil model
   */
  readonly fields: descricao_perfilFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for descricao_perfil.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__descricao_perfilClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the descricao_perfil model
   */ 
  interface descricao_perfilFieldRefs {
    readonly id: FieldRef<"descricao_perfil", 'Int'>
    readonly descricao: FieldRef<"descricao_perfil", 'String'>
    readonly id_cliente: FieldRef<"descricao_perfil", 'Int'>
    readonly id_freelancer: FieldRef<"descricao_perfil", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * descricao_perfil findUnique
   */
  export type descricao_perfilFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * Filter, which descricao_perfil to fetch.
     */
    where: descricao_perfilWhereUniqueInput
  }

  /**
   * descricao_perfil findUniqueOrThrow
   */
  export type descricao_perfilFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * Filter, which descricao_perfil to fetch.
     */
    where: descricao_perfilWhereUniqueInput
  }

  /**
   * descricao_perfil findFirst
   */
  export type descricao_perfilFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * Filter, which descricao_perfil to fetch.
     */
    where?: descricao_perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of descricao_perfils to fetch.
     */
    orderBy?: descricao_perfilOrderByWithRelationInput | descricao_perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for descricao_perfils.
     */
    cursor?: descricao_perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` descricao_perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` descricao_perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of descricao_perfils.
     */
    distinct?: Descricao_perfilScalarFieldEnum | Descricao_perfilScalarFieldEnum[]
  }

  /**
   * descricao_perfil findFirstOrThrow
   */
  export type descricao_perfilFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * Filter, which descricao_perfil to fetch.
     */
    where?: descricao_perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of descricao_perfils to fetch.
     */
    orderBy?: descricao_perfilOrderByWithRelationInput | descricao_perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for descricao_perfils.
     */
    cursor?: descricao_perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` descricao_perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` descricao_perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of descricao_perfils.
     */
    distinct?: Descricao_perfilScalarFieldEnum | Descricao_perfilScalarFieldEnum[]
  }

  /**
   * descricao_perfil findMany
   */
  export type descricao_perfilFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * Filter, which descricao_perfils to fetch.
     */
    where?: descricao_perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of descricao_perfils to fetch.
     */
    orderBy?: descricao_perfilOrderByWithRelationInput | descricao_perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing descricao_perfils.
     */
    cursor?: descricao_perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` descricao_perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` descricao_perfils.
     */
    skip?: number
    distinct?: Descricao_perfilScalarFieldEnum | Descricao_perfilScalarFieldEnum[]
  }

  /**
   * descricao_perfil create
   */
  export type descricao_perfilCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * The data needed to create a descricao_perfil.
     */
    data: XOR<descricao_perfilCreateInput, descricao_perfilUncheckedCreateInput>
  }

  /**
   * descricao_perfil createMany
   */
  export type descricao_perfilCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many descricao_perfils.
     */
    data: descricao_perfilCreateManyInput | descricao_perfilCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * descricao_perfil update
   */
  export type descricao_perfilUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * The data needed to update a descricao_perfil.
     */
    data: XOR<descricao_perfilUpdateInput, descricao_perfilUncheckedUpdateInput>
    /**
     * Choose, which descricao_perfil to update.
     */
    where: descricao_perfilWhereUniqueInput
  }

  /**
   * descricao_perfil updateMany
   */
  export type descricao_perfilUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update descricao_perfils.
     */
    data: XOR<descricao_perfilUpdateManyMutationInput, descricao_perfilUncheckedUpdateManyInput>
    /**
     * Filter which descricao_perfils to update
     */
    where?: descricao_perfilWhereInput
  }

  /**
   * descricao_perfil upsert
   */
  export type descricao_perfilUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * The filter to search for the descricao_perfil to update in case it exists.
     */
    where: descricao_perfilWhereUniqueInput
    /**
     * In case the descricao_perfil found by the `where` argument doesn't exist, create a new descricao_perfil with this data.
     */
    create: XOR<descricao_perfilCreateInput, descricao_perfilUncheckedCreateInput>
    /**
     * In case the descricao_perfil was found with the provided `where` argument, update it with this data.
     */
    update: XOR<descricao_perfilUpdateInput, descricao_perfilUncheckedUpdateInput>
  }

  /**
   * descricao_perfil delete
   */
  export type descricao_perfilDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
    /**
     * Filter which descricao_perfil to delete.
     */
    where: descricao_perfilWhereUniqueInput
  }

  /**
   * descricao_perfil deleteMany
   */
  export type descricao_perfilDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which descricao_perfils to delete
     */
    where?: descricao_perfilWhereInput
  }

  /**
   * descricao_perfil without action
   */
  export type descricao_perfilDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descricao_perfil
     */
    select?: descricao_perfilSelect<ExtArgs> | null
  }


  /**
   * Model foto_perfil
   */

  export type AggregateFoto_perfil = {
    _count: Foto_perfilCountAggregateOutputType | null
    _avg: Foto_perfilAvgAggregateOutputType | null
    _sum: Foto_perfilSumAggregateOutputType | null
    _min: Foto_perfilMinAggregateOutputType | null
    _max: Foto_perfilMaxAggregateOutputType | null
  }

  export type Foto_perfilAvgAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    id_freelancer: number | null
  }

  export type Foto_perfilSumAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    id_freelancer: number | null
  }

  export type Foto_perfilMinAggregateOutputType = {
    id: number | null
    foto_perfil: string | null
    id_cliente: number | null
    id_freelancer: number | null
  }

  export type Foto_perfilMaxAggregateOutputType = {
    id: number | null
    foto_perfil: string | null
    id_cliente: number | null
    id_freelancer: number | null
  }

  export type Foto_perfilCountAggregateOutputType = {
    id: number
    foto_perfil: number
    id_cliente: number
    id_freelancer: number
    _all: number
  }


  export type Foto_perfilAvgAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
  }

  export type Foto_perfilSumAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
  }

  export type Foto_perfilMinAggregateInputType = {
    id?: true
    foto_perfil?: true
    id_cliente?: true
    id_freelancer?: true
  }

  export type Foto_perfilMaxAggregateInputType = {
    id?: true
    foto_perfil?: true
    id_cliente?: true
    id_freelancer?: true
  }

  export type Foto_perfilCountAggregateInputType = {
    id?: true
    foto_perfil?: true
    id_cliente?: true
    id_freelancer?: true
    _all?: true
  }

  export type Foto_perfilAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which foto_perfil to aggregate.
     */
    where?: foto_perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of foto_perfils to fetch.
     */
    orderBy?: foto_perfilOrderByWithRelationInput | foto_perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: foto_perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` foto_perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` foto_perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned foto_perfils
    **/
    _count?: true | Foto_perfilCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Foto_perfilAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Foto_perfilSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Foto_perfilMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Foto_perfilMaxAggregateInputType
  }

  export type GetFoto_perfilAggregateType<T extends Foto_perfilAggregateArgs> = {
        [P in keyof T & keyof AggregateFoto_perfil]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFoto_perfil[P]>
      : GetScalarType<T[P], AggregateFoto_perfil[P]>
  }




  export type foto_perfilGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: foto_perfilWhereInput
    orderBy?: foto_perfilOrderByWithAggregationInput | foto_perfilOrderByWithAggregationInput[]
    by: Foto_perfilScalarFieldEnum[] | Foto_perfilScalarFieldEnum
    having?: foto_perfilScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Foto_perfilCountAggregateInputType | true
    _avg?: Foto_perfilAvgAggregateInputType
    _sum?: Foto_perfilSumAggregateInputType
    _min?: Foto_perfilMinAggregateInputType
    _max?: Foto_perfilMaxAggregateInputType
  }

  export type Foto_perfilGroupByOutputType = {
    id: number
    foto_perfil: string
    id_cliente: number | null
    id_freelancer: number | null
    _count: Foto_perfilCountAggregateOutputType | null
    _avg: Foto_perfilAvgAggregateOutputType | null
    _sum: Foto_perfilSumAggregateOutputType | null
    _min: Foto_perfilMinAggregateOutputType | null
    _max: Foto_perfilMaxAggregateOutputType | null
  }

  type GetFoto_perfilGroupByPayload<T extends foto_perfilGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Foto_perfilGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Foto_perfilGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Foto_perfilGroupByOutputType[P]>
            : GetScalarType<T[P], Foto_perfilGroupByOutputType[P]>
        }
      >
    >


  export type foto_perfilSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    foto_perfil?: boolean
    id_cliente?: boolean
    id_freelancer?: boolean
  }, ExtArgs["result"]["foto_perfil"]>


  export type foto_perfilSelectScalar = {
    id?: boolean
    foto_perfil?: boolean
    id_cliente?: boolean
    id_freelancer?: boolean
  }


  export type $foto_perfilPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "foto_perfil"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      foto_perfil: string
      id_cliente: number | null
      id_freelancer: number | null
    }, ExtArgs["result"]["foto_perfil"]>
    composites: {}
  }

  type foto_perfilGetPayload<S extends boolean | null | undefined | foto_perfilDefaultArgs> = $Result.GetResult<Prisma.$foto_perfilPayload, S>

  type foto_perfilCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<foto_perfilFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Foto_perfilCountAggregateInputType | true
    }

  export interface foto_perfilDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['foto_perfil'], meta: { name: 'foto_perfil' } }
    /**
     * Find zero or one Foto_perfil that matches the filter.
     * @param {foto_perfilFindUniqueArgs} args - Arguments to find a Foto_perfil
     * @example
     * // Get one Foto_perfil
     * const foto_perfil = await prisma.foto_perfil.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends foto_perfilFindUniqueArgs>(args: SelectSubset<T, foto_perfilFindUniqueArgs<ExtArgs>>): Prisma__foto_perfilClient<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Foto_perfil that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {foto_perfilFindUniqueOrThrowArgs} args - Arguments to find a Foto_perfil
     * @example
     * // Get one Foto_perfil
     * const foto_perfil = await prisma.foto_perfil.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends foto_perfilFindUniqueOrThrowArgs>(args: SelectSubset<T, foto_perfilFindUniqueOrThrowArgs<ExtArgs>>): Prisma__foto_perfilClient<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Foto_perfil that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_perfilFindFirstArgs} args - Arguments to find a Foto_perfil
     * @example
     * // Get one Foto_perfil
     * const foto_perfil = await prisma.foto_perfil.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends foto_perfilFindFirstArgs>(args?: SelectSubset<T, foto_perfilFindFirstArgs<ExtArgs>>): Prisma__foto_perfilClient<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Foto_perfil that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_perfilFindFirstOrThrowArgs} args - Arguments to find a Foto_perfil
     * @example
     * // Get one Foto_perfil
     * const foto_perfil = await prisma.foto_perfil.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends foto_perfilFindFirstOrThrowArgs>(args?: SelectSubset<T, foto_perfilFindFirstOrThrowArgs<ExtArgs>>): Prisma__foto_perfilClient<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Foto_perfils that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_perfilFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Foto_perfils
     * const foto_perfils = await prisma.foto_perfil.findMany()
     * 
     * // Get first 10 Foto_perfils
     * const foto_perfils = await prisma.foto_perfil.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const foto_perfilWithIdOnly = await prisma.foto_perfil.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends foto_perfilFindManyArgs>(args?: SelectSubset<T, foto_perfilFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Foto_perfil.
     * @param {foto_perfilCreateArgs} args - Arguments to create a Foto_perfil.
     * @example
     * // Create one Foto_perfil
     * const Foto_perfil = await prisma.foto_perfil.create({
     *   data: {
     *     // ... data to create a Foto_perfil
     *   }
     * })
     * 
     */
    create<T extends foto_perfilCreateArgs>(args: SelectSubset<T, foto_perfilCreateArgs<ExtArgs>>): Prisma__foto_perfilClient<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Foto_perfils.
     * @param {foto_perfilCreateManyArgs} args - Arguments to create many Foto_perfils.
     * @example
     * // Create many Foto_perfils
     * const foto_perfil = await prisma.foto_perfil.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends foto_perfilCreateManyArgs>(args?: SelectSubset<T, foto_perfilCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Foto_perfil.
     * @param {foto_perfilDeleteArgs} args - Arguments to delete one Foto_perfil.
     * @example
     * // Delete one Foto_perfil
     * const Foto_perfil = await prisma.foto_perfil.delete({
     *   where: {
     *     // ... filter to delete one Foto_perfil
     *   }
     * })
     * 
     */
    delete<T extends foto_perfilDeleteArgs>(args: SelectSubset<T, foto_perfilDeleteArgs<ExtArgs>>): Prisma__foto_perfilClient<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Foto_perfil.
     * @param {foto_perfilUpdateArgs} args - Arguments to update one Foto_perfil.
     * @example
     * // Update one Foto_perfil
     * const foto_perfil = await prisma.foto_perfil.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends foto_perfilUpdateArgs>(args: SelectSubset<T, foto_perfilUpdateArgs<ExtArgs>>): Prisma__foto_perfilClient<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Foto_perfils.
     * @param {foto_perfilDeleteManyArgs} args - Arguments to filter Foto_perfils to delete.
     * @example
     * // Delete a few Foto_perfils
     * const { count } = await prisma.foto_perfil.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends foto_perfilDeleteManyArgs>(args?: SelectSubset<T, foto_perfilDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Foto_perfils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_perfilUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Foto_perfils
     * const foto_perfil = await prisma.foto_perfil.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends foto_perfilUpdateManyArgs>(args: SelectSubset<T, foto_perfilUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Foto_perfil.
     * @param {foto_perfilUpsertArgs} args - Arguments to update or create a Foto_perfil.
     * @example
     * // Update or create a Foto_perfil
     * const foto_perfil = await prisma.foto_perfil.upsert({
     *   create: {
     *     // ... data to create a Foto_perfil
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Foto_perfil we want to update
     *   }
     * })
     */
    upsert<T extends foto_perfilUpsertArgs>(args: SelectSubset<T, foto_perfilUpsertArgs<ExtArgs>>): Prisma__foto_perfilClient<$Result.GetResult<Prisma.$foto_perfilPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Foto_perfils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_perfilCountArgs} args - Arguments to filter Foto_perfils to count.
     * @example
     * // Count the number of Foto_perfils
     * const count = await prisma.foto_perfil.count({
     *   where: {
     *     // ... the filter for the Foto_perfils we want to count
     *   }
     * })
    **/
    count<T extends foto_perfilCountArgs>(
      args?: Subset<T, foto_perfilCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Foto_perfilCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Foto_perfil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_perfilAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Foto_perfilAggregateArgs>(args: Subset<T, Foto_perfilAggregateArgs>): Prisma.PrismaPromise<GetFoto_perfilAggregateType<T>>

    /**
     * Group by Foto_perfil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_perfilGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends foto_perfilGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: foto_perfilGroupByArgs['orderBy'] }
        : { orderBy?: foto_perfilGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, foto_perfilGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFoto_perfilGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the foto_perfil model
   */
  readonly fields: foto_perfilFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for foto_perfil.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__foto_perfilClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the foto_perfil model
   */ 
  interface foto_perfilFieldRefs {
    readonly id: FieldRef<"foto_perfil", 'Int'>
    readonly foto_perfil: FieldRef<"foto_perfil", 'String'>
    readonly id_cliente: FieldRef<"foto_perfil", 'Int'>
    readonly id_freelancer: FieldRef<"foto_perfil", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * foto_perfil findUnique
   */
  export type foto_perfilFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * Filter, which foto_perfil to fetch.
     */
    where: foto_perfilWhereUniqueInput
  }

  /**
   * foto_perfil findUniqueOrThrow
   */
  export type foto_perfilFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * Filter, which foto_perfil to fetch.
     */
    where: foto_perfilWhereUniqueInput
  }

  /**
   * foto_perfil findFirst
   */
  export type foto_perfilFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * Filter, which foto_perfil to fetch.
     */
    where?: foto_perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of foto_perfils to fetch.
     */
    orderBy?: foto_perfilOrderByWithRelationInput | foto_perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for foto_perfils.
     */
    cursor?: foto_perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` foto_perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` foto_perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of foto_perfils.
     */
    distinct?: Foto_perfilScalarFieldEnum | Foto_perfilScalarFieldEnum[]
  }

  /**
   * foto_perfil findFirstOrThrow
   */
  export type foto_perfilFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * Filter, which foto_perfil to fetch.
     */
    where?: foto_perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of foto_perfils to fetch.
     */
    orderBy?: foto_perfilOrderByWithRelationInput | foto_perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for foto_perfils.
     */
    cursor?: foto_perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` foto_perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` foto_perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of foto_perfils.
     */
    distinct?: Foto_perfilScalarFieldEnum | Foto_perfilScalarFieldEnum[]
  }

  /**
   * foto_perfil findMany
   */
  export type foto_perfilFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * Filter, which foto_perfils to fetch.
     */
    where?: foto_perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of foto_perfils to fetch.
     */
    orderBy?: foto_perfilOrderByWithRelationInput | foto_perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing foto_perfils.
     */
    cursor?: foto_perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` foto_perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` foto_perfils.
     */
    skip?: number
    distinct?: Foto_perfilScalarFieldEnum | Foto_perfilScalarFieldEnum[]
  }

  /**
   * foto_perfil create
   */
  export type foto_perfilCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * The data needed to create a foto_perfil.
     */
    data: XOR<foto_perfilCreateInput, foto_perfilUncheckedCreateInput>
  }

  /**
   * foto_perfil createMany
   */
  export type foto_perfilCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many foto_perfils.
     */
    data: foto_perfilCreateManyInput | foto_perfilCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * foto_perfil update
   */
  export type foto_perfilUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * The data needed to update a foto_perfil.
     */
    data: XOR<foto_perfilUpdateInput, foto_perfilUncheckedUpdateInput>
    /**
     * Choose, which foto_perfil to update.
     */
    where: foto_perfilWhereUniqueInput
  }

  /**
   * foto_perfil updateMany
   */
  export type foto_perfilUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update foto_perfils.
     */
    data: XOR<foto_perfilUpdateManyMutationInput, foto_perfilUncheckedUpdateManyInput>
    /**
     * Filter which foto_perfils to update
     */
    where?: foto_perfilWhereInput
  }

  /**
   * foto_perfil upsert
   */
  export type foto_perfilUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * The filter to search for the foto_perfil to update in case it exists.
     */
    where: foto_perfilWhereUniqueInput
    /**
     * In case the foto_perfil found by the `where` argument doesn't exist, create a new foto_perfil with this data.
     */
    create: XOR<foto_perfilCreateInput, foto_perfilUncheckedCreateInput>
    /**
     * In case the foto_perfil was found with the provided `where` argument, update it with this data.
     */
    update: XOR<foto_perfilUpdateInput, foto_perfilUncheckedUpdateInput>
  }

  /**
   * foto_perfil delete
   */
  export type foto_perfilDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
    /**
     * Filter which foto_perfil to delete.
     */
    where: foto_perfilWhereUniqueInput
  }

  /**
   * foto_perfil deleteMany
   */
  export type foto_perfilDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which foto_perfils to delete
     */
    where?: foto_perfilWhereInput
  }

  /**
   * foto_perfil without action
   */
  export type foto_perfilDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_perfil
     */
    select?: foto_perfilSelect<ExtArgs> | null
  }


  /**
   * Model freelancer_categoria
   */

  export type AggregateFreelancer_categoria = {
    _count: Freelancer_categoriaCountAggregateOutputType | null
    _avg: Freelancer_categoriaAvgAggregateOutputType | null
    _sum: Freelancer_categoriaSumAggregateOutputType | null
    _min: Freelancer_categoriaMinAggregateOutputType | null
    _max: Freelancer_categoriaMaxAggregateOutputType | null
  }

  export type Freelancer_categoriaAvgAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    id_categoria: number | null
  }

  export type Freelancer_categoriaSumAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    id_categoria: number | null
  }

  export type Freelancer_categoriaMinAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    id_categoria: number | null
  }

  export type Freelancer_categoriaMaxAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    id_categoria: number | null
  }

  export type Freelancer_categoriaCountAggregateOutputType = {
    id: number
    id_freelancer: number
    id_categoria: number
    _all: number
  }


  export type Freelancer_categoriaAvgAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_categoria?: true
  }

  export type Freelancer_categoriaSumAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_categoria?: true
  }

  export type Freelancer_categoriaMinAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_categoria?: true
  }

  export type Freelancer_categoriaMaxAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_categoria?: true
  }

  export type Freelancer_categoriaCountAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_categoria?: true
    _all?: true
  }

  export type Freelancer_categoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which freelancer_categoria to aggregate.
     */
    where?: freelancer_categoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_categorias to fetch.
     */
    orderBy?: freelancer_categoriaOrderByWithRelationInput | freelancer_categoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: freelancer_categoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned freelancer_categorias
    **/
    _count?: true | Freelancer_categoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Freelancer_categoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Freelancer_categoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Freelancer_categoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Freelancer_categoriaMaxAggregateInputType
  }

  export type GetFreelancer_categoriaAggregateType<T extends Freelancer_categoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateFreelancer_categoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFreelancer_categoria[P]>
      : GetScalarType<T[P], AggregateFreelancer_categoria[P]>
  }




  export type freelancer_categoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: freelancer_categoriaWhereInput
    orderBy?: freelancer_categoriaOrderByWithAggregationInput | freelancer_categoriaOrderByWithAggregationInput[]
    by: Freelancer_categoriaScalarFieldEnum[] | Freelancer_categoriaScalarFieldEnum
    having?: freelancer_categoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Freelancer_categoriaCountAggregateInputType | true
    _avg?: Freelancer_categoriaAvgAggregateInputType
    _sum?: Freelancer_categoriaSumAggregateInputType
    _min?: Freelancer_categoriaMinAggregateInputType
    _max?: Freelancer_categoriaMaxAggregateInputType
  }

  export type Freelancer_categoriaGroupByOutputType = {
    id: number
    id_freelancer: number
    id_categoria: number
    _count: Freelancer_categoriaCountAggregateOutputType | null
    _avg: Freelancer_categoriaAvgAggregateOutputType | null
    _sum: Freelancer_categoriaSumAggregateOutputType | null
    _min: Freelancer_categoriaMinAggregateOutputType | null
    _max: Freelancer_categoriaMaxAggregateOutputType | null
  }

  type GetFreelancer_categoriaGroupByPayload<T extends freelancer_categoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Freelancer_categoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Freelancer_categoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Freelancer_categoriaGroupByOutputType[P]>
            : GetScalarType<T[P], Freelancer_categoriaGroupByOutputType[P]>
        }
      >
    >


  export type freelancer_categoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_freelancer?: boolean
    id_categoria?: boolean
  }, ExtArgs["result"]["freelancer_categoria"]>


  export type freelancer_categoriaSelectScalar = {
    id?: boolean
    id_freelancer?: boolean
    id_categoria?: boolean
  }


  export type $freelancer_categoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "freelancer_categoria"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_freelancer: number
      id_categoria: number
    }, ExtArgs["result"]["freelancer_categoria"]>
    composites: {}
  }

  type freelancer_categoriaGetPayload<S extends boolean | null | undefined | freelancer_categoriaDefaultArgs> = $Result.GetResult<Prisma.$freelancer_categoriaPayload, S>

  type freelancer_categoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<freelancer_categoriaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Freelancer_categoriaCountAggregateInputType | true
    }

  export interface freelancer_categoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['freelancer_categoria'], meta: { name: 'freelancer_categoria' } }
    /**
     * Find zero or one Freelancer_categoria that matches the filter.
     * @param {freelancer_categoriaFindUniqueArgs} args - Arguments to find a Freelancer_categoria
     * @example
     * // Get one Freelancer_categoria
     * const freelancer_categoria = await prisma.freelancer_categoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends freelancer_categoriaFindUniqueArgs>(args: SelectSubset<T, freelancer_categoriaFindUniqueArgs<ExtArgs>>): Prisma__freelancer_categoriaClient<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Freelancer_categoria that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {freelancer_categoriaFindUniqueOrThrowArgs} args - Arguments to find a Freelancer_categoria
     * @example
     * // Get one Freelancer_categoria
     * const freelancer_categoria = await prisma.freelancer_categoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends freelancer_categoriaFindUniqueOrThrowArgs>(args: SelectSubset<T, freelancer_categoriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__freelancer_categoriaClient<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Freelancer_categoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_categoriaFindFirstArgs} args - Arguments to find a Freelancer_categoria
     * @example
     * // Get one Freelancer_categoria
     * const freelancer_categoria = await prisma.freelancer_categoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends freelancer_categoriaFindFirstArgs>(args?: SelectSubset<T, freelancer_categoriaFindFirstArgs<ExtArgs>>): Prisma__freelancer_categoriaClient<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Freelancer_categoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_categoriaFindFirstOrThrowArgs} args - Arguments to find a Freelancer_categoria
     * @example
     * // Get one Freelancer_categoria
     * const freelancer_categoria = await prisma.freelancer_categoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends freelancer_categoriaFindFirstOrThrowArgs>(args?: SelectSubset<T, freelancer_categoriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__freelancer_categoriaClient<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Freelancer_categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_categoriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Freelancer_categorias
     * const freelancer_categorias = await prisma.freelancer_categoria.findMany()
     * 
     * // Get first 10 Freelancer_categorias
     * const freelancer_categorias = await prisma.freelancer_categoria.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const freelancer_categoriaWithIdOnly = await prisma.freelancer_categoria.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends freelancer_categoriaFindManyArgs>(args?: SelectSubset<T, freelancer_categoriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Freelancer_categoria.
     * @param {freelancer_categoriaCreateArgs} args - Arguments to create a Freelancer_categoria.
     * @example
     * // Create one Freelancer_categoria
     * const Freelancer_categoria = await prisma.freelancer_categoria.create({
     *   data: {
     *     // ... data to create a Freelancer_categoria
     *   }
     * })
     * 
     */
    create<T extends freelancer_categoriaCreateArgs>(args: SelectSubset<T, freelancer_categoriaCreateArgs<ExtArgs>>): Prisma__freelancer_categoriaClient<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Freelancer_categorias.
     * @param {freelancer_categoriaCreateManyArgs} args - Arguments to create many Freelancer_categorias.
     * @example
     * // Create many Freelancer_categorias
     * const freelancer_categoria = await prisma.freelancer_categoria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends freelancer_categoriaCreateManyArgs>(args?: SelectSubset<T, freelancer_categoriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Freelancer_categoria.
     * @param {freelancer_categoriaDeleteArgs} args - Arguments to delete one Freelancer_categoria.
     * @example
     * // Delete one Freelancer_categoria
     * const Freelancer_categoria = await prisma.freelancer_categoria.delete({
     *   where: {
     *     // ... filter to delete one Freelancer_categoria
     *   }
     * })
     * 
     */
    delete<T extends freelancer_categoriaDeleteArgs>(args: SelectSubset<T, freelancer_categoriaDeleteArgs<ExtArgs>>): Prisma__freelancer_categoriaClient<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Freelancer_categoria.
     * @param {freelancer_categoriaUpdateArgs} args - Arguments to update one Freelancer_categoria.
     * @example
     * // Update one Freelancer_categoria
     * const freelancer_categoria = await prisma.freelancer_categoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends freelancer_categoriaUpdateArgs>(args: SelectSubset<T, freelancer_categoriaUpdateArgs<ExtArgs>>): Prisma__freelancer_categoriaClient<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Freelancer_categorias.
     * @param {freelancer_categoriaDeleteManyArgs} args - Arguments to filter Freelancer_categorias to delete.
     * @example
     * // Delete a few Freelancer_categorias
     * const { count } = await prisma.freelancer_categoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends freelancer_categoriaDeleteManyArgs>(args?: SelectSubset<T, freelancer_categoriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Freelancer_categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_categoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Freelancer_categorias
     * const freelancer_categoria = await prisma.freelancer_categoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends freelancer_categoriaUpdateManyArgs>(args: SelectSubset<T, freelancer_categoriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Freelancer_categoria.
     * @param {freelancer_categoriaUpsertArgs} args - Arguments to update or create a Freelancer_categoria.
     * @example
     * // Update or create a Freelancer_categoria
     * const freelancer_categoria = await prisma.freelancer_categoria.upsert({
     *   create: {
     *     // ... data to create a Freelancer_categoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Freelancer_categoria we want to update
     *   }
     * })
     */
    upsert<T extends freelancer_categoriaUpsertArgs>(args: SelectSubset<T, freelancer_categoriaUpsertArgs<ExtArgs>>): Prisma__freelancer_categoriaClient<$Result.GetResult<Prisma.$freelancer_categoriaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Freelancer_categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_categoriaCountArgs} args - Arguments to filter Freelancer_categorias to count.
     * @example
     * // Count the number of Freelancer_categorias
     * const count = await prisma.freelancer_categoria.count({
     *   where: {
     *     // ... the filter for the Freelancer_categorias we want to count
     *   }
     * })
    **/
    count<T extends freelancer_categoriaCountArgs>(
      args?: Subset<T, freelancer_categoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Freelancer_categoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Freelancer_categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Freelancer_categoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Freelancer_categoriaAggregateArgs>(args: Subset<T, Freelancer_categoriaAggregateArgs>): Prisma.PrismaPromise<GetFreelancer_categoriaAggregateType<T>>

    /**
     * Group by Freelancer_categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_categoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends freelancer_categoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: freelancer_categoriaGroupByArgs['orderBy'] }
        : { orderBy?: freelancer_categoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, freelancer_categoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFreelancer_categoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the freelancer_categoria model
   */
  readonly fields: freelancer_categoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for freelancer_categoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__freelancer_categoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the freelancer_categoria model
   */ 
  interface freelancer_categoriaFieldRefs {
    readonly id: FieldRef<"freelancer_categoria", 'Int'>
    readonly id_freelancer: FieldRef<"freelancer_categoria", 'Int'>
    readonly id_categoria: FieldRef<"freelancer_categoria", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * freelancer_categoria findUnique
   */
  export type freelancer_categoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_categoria to fetch.
     */
    where: freelancer_categoriaWhereUniqueInput
  }

  /**
   * freelancer_categoria findUniqueOrThrow
   */
  export type freelancer_categoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_categoria to fetch.
     */
    where: freelancer_categoriaWhereUniqueInput
  }

  /**
   * freelancer_categoria findFirst
   */
  export type freelancer_categoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_categoria to fetch.
     */
    where?: freelancer_categoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_categorias to fetch.
     */
    orderBy?: freelancer_categoriaOrderByWithRelationInput | freelancer_categoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for freelancer_categorias.
     */
    cursor?: freelancer_categoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of freelancer_categorias.
     */
    distinct?: Freelancer_categoriaScalarFieldEnum | Freelancer_categoriaScalarFieldEnum[]
  }

  /**
   * freelancer_categoria findFirstOrThrow
   */
  export type freelancer_categoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_categoria to fetch.
     */
    where?: freelancer_categoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_categorias to fetch.
     */
    orderBy?: freelancer_categoriaOrderByWithRelationInput | freelancer_categoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for freelancer_categorias.
     */
    cursor?: freelancer_categoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of freelancer_categorias.
     */
    distinct?: Freelancer_categoriaScalarFieldEnum | Freelancer_categoriaScalarFieldEnum[]
  }

  /**
   * freelancer_categoria findMany
   */
  export type freelancer_categoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_categorias to fetch.
     */
    where?: freelancer_categoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_categorias to fetch.
     */
    orderBy?: freelancer_categoriaOrderByWithRelationInput | freelancer_categoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing freelancer_categorias.
     */
    cursor?: freelancer_categoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_categorias.
     */
    skip?: number
    distinct?: Freelancer_categoriaScalarFieldEnum | Freelancer_categoriaScalarFieldEnum[]
  }

  /**
   * freelancer_categoria create
   */
  export type freelancer_categoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * The data needed to create a freelancer_categoria.
     */
    data: XOR<freelancer_categoriaCreateInput, freelancer_categoriaUncheckedCreateInput>
  }

  /**
   * freelancer_categoria createMany
   */
  export type freelancer_categoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many freelancer_categorias.
     */
    data: freelancer_categoriaCreateManyInput | freelancer_categoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * freelancer_categoria update
   */
  export type freelancer_categoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * The data needed to update a freelancer_categoria.
     */
    data: XOR<freelancer_categoriaUpdateInput, freelancer_categoriaUncheckedUpdateInput>
    /**
     * Choose, which freelancer_categoria to update.
     */
    where: freelancer_categoriaWhereUniqueInput
  }

  /**
   * freelancer_categoria updateMany
   */
  export type freelancer_categoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update freelancer_categorias.
     */
    data: XOR<freelancer_categoriaUpdateManyMutationInput, freelancer_categoriaUncheckedUpdateManyInput>
    /**
     * Filter which freelancer_categorias to update
     */
    where?: freelancer_categoriaWhereInput
  }

  /**
   * freelancer_categoria upsert
   */
  export type freelancer_categoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * The filter to search for the freelancer_categoria to update in case it exists.
     */
    where: freelancer_categoriaWhereUniqueInput
    /**
     * In case the freelancer_categoria found by the `where` argument doesn't exist, create a new freelancer_categoria with this data.
     */
    create: XOR<freelancer_categoriaCreateInput, freelancer_categoriaUncheckedCreateInput>
    /**
     * In case the freelancer_categoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<freelancer_categoriaUpdateInput, freelancer_categoriaUncheckedUpdateInput>
  }

  /**
   * freelancer_categoria delete
   */
  export type freelancer_categoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
    /**
     * Filter which freelancer_categoria to delete.
     */
    where: freelancer_categoriaWhereUniqueInput
  }

  /**
   * freelancer_categoria deleteMany
   */
  export type freelancer_categoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which freelancer_categorias to delete
     */
    where?: freelancer_categoriaWhereInput
  }

  /**
   * freelancer_categoria without action
   */
  export type freelancer_categoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_categoria
     */
    select?: freelancer_categoriaSelect<ExtArgs> | null
  }


  /**
   * Model freelancer_habilidade
   */

  export type AggregateFreelancer_habilidade = {
    _count: Freelancer_habilidadeCountAggregateOutputType | null
    _avg: Freelancer_habilidadeAvgAggregateOutputType | null
    _sum: Freelancer_habilidadeSumAggregateOutputType | null
    _min: Freelancer_habilidadeMinAggregateOutputType | null
    _max: Freelancer_habilidadeMaxAggregateOutputType | null
  }

  export type Freelancer_habilidadeAvgAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    id_habilidade: number | null
  }

  export type Freelancer_habilidadeSumAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    id_habilidade: number | null
  }

  export type Freelancer_habilidadeMinAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    id_habilidade: number | null
  }

  export type Freelancer_habilidadeMaxAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    id_habilidade: number | null
  }

  export type Freelancer_habilidadeCountAggregateOutputType = {
    id: number
    id_freelancer: number
    id_habilidade: number
    _all: number
  }


  export type Freelancer_habilidadeAvgAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_habilidade?: true
  }

  export type Freelancer_habilidadeSumAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_habilidade?: true
  }

  export type Freelancer_habilidadeMinAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_habilidade?: true
  }

  export type Freelancer_habilidadeMaxAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_habilidade?: true
  }

  export type Freelancer_habilidadeCountAggregateInputType = {
    id?: true
    id_freelancer?: true
    id_habilidade?: true
    _all?: true
  }

  export type Freelancer_habilidadeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which freelancer_habilidade to aggregate.
     */
    where?: freelancer_habilidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_habilidades to fetch.
     */
    orderBy?: freelancer_habilidadeOrderByWithRelationInput | freelancer_habilidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: freelancer_habilidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned freelancer_habilidades
    **/
    _count?: true | Freelancer_habilidadeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Freelancer_habilidadeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Freelancer_habilidadeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Freelancer_habilidadeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Freelancer_habilidadeMaxAggregateInputType
  }

  export type GetFreelancer_habilidadeAggregateType<T extends Freelancer_habilidadeAggregateArgs> = {
        [P in keyof T & keyof AggregateFreelancer_habilidade]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFreelancer_habilidade[P]>
      : GetScalarType<T[P], AggregateFreelancer_habilidade[P]>
  }




  export type freelancer_habilidadeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: freelancer_habilidadeWhereInput
    orderBy?: freelancer_habilidadeOrderByWithAggregationInput | freelancer_habilidadeOrderByWithAggregationInput[]
    by: Freelancer_habilidadeScalarFieldEnum[] | Freelancer_habilidadeScalarFieldEnum
    having?: freelancer_habilidadeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Freelancer_habilidadeCountAggregateInputType | true
    _avg?: Freelancer_habilidadeAvgAggregateInputType
    _sum?: Freelancer_habilidadeSumAggregateInputType
    _min?: Freelancer_habilidadeMinAggregateInputType
    _max?: Freelancer_habilidadeMaxAggregateInputType
  }

  export type Freelancer_habilidadeGroupByOutputType = {
    id: number
    id_freelancer: number
    id_habilidade: number
    _count: Freelancer_habilidadeCountAggregateOutputType | null
    _avg: Freelancer_habilidadeAvgAggregateOutputType | null
    _sum: Freelancer_habilidadeSumAggregateOutputType | null
    _min: Freelancer_habilidadeMinAggregateOutputType | null
    _max: Freelancer_habilidadeMaxAggregateOutputType | null
  }

  type GetFreelancer_habilidadeGroupByPayload<T extends freelancer_habilidadeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Freelancer_habilidadeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Freelancer_habilidadeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Freelancer_habilidadeGroupByOutputType[P]>
            : GetScalarType<T[P], Freelancer_habilidadeGroupByOutputType[P]>
        }
      >
    >


  export type freelancer_habilidadeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_freelancer?: boolean
    id_habilidade?: boolean
  }, ExtArgs["result"]["freelancer_habilidade"]>


  export type freelancer_habilidadeSelectScalar = {
    id?: boolean
    id_freelancer?: boolean
    id_habilidade?: boolean
  }


  export type $freelancer_habilidadePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "freelancer_habilidade"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_freelancer: number
      id_habilidade: number
    }, ExtArgs["result"]["freelancer_habilidade"]>
    composites: {}
  }

  type freelancer_habilidadeGetPayload<S extends boolean | null | undefined | freelancer_habilidadeDefaultArgs> = $Result.GetResult<Prisma.$freelancer_habilidadePayload, S>

  type freelancer_habilidadeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<freelancer_habilidadeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Freelancer_habilidadeCountAggregateInputType | true
    }

  export interface freelancer_habilidadeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['freelancer_habilidade'], meta: { name: 'freelancer_habilidade' } }
    /**
     * Find zero or one Freelancer_habilidade that matches the filter.
     * @param {freelancer_habilidadeFindUniqueArgs} args - Arguments to find a Freelancer_habilidade
     * @example
     * // Get one Freelancer_habilidade
     * const freelancer_habilidade = await prisma.freelancer_habilidade.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends freelancer_habilidadeFindUniqueArgs>(args: SelectSubset<T, freelancer_habilidadeFindUniqueArgs<ExtArgs>>): Prisma__freelancer_habilidadeClient<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Freelancer_habilidade that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {freelancer_habilidadeFindUniqueOrThrowArgs} args - Arguments to find a Freelancer_habilidade
     * @example
     * // Get one Freelancer_habilidade
     * const freelancer_habilidade = await prisma.freelancer_habilidade.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends freelancer_habilidadeFindUniqueOrThrowArgs>(args: SelectSubset<T, freelancer_habilidadeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__freelancer_habilidadeClient<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Freelancer_habilidade that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_habilidadeFindFirstArgs} args - Arguments to find a Freelancer_habilidade
     * @example
     * // Get one Freelancer_habilidade
     * const freelancer_habilidade = await prisma.freelancer_habilidade.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends freelancer_habilidadeFindFirstArgs>(args?: SelectSubset<T, freelancer_habilidadeFindFirstArgs<ExtArgs>>): Prisma__freelancer_habilidadeClient<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Freelancer_habilidade that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_habilidadeFindFirstOrThrowArgs} args - Arguments to find a Freelancer_habilidade
     * @example
     * // Get one Freelancer_habilidade
     * const freelancer_habilidade = await prisma.freelancer_habilidade.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends freelancer_habilidadeFindFirstOrThrowArgs>(args?: SelectSubset<T, freelancer_habilidadeFindFirstOrThrowArgs<ExtArgs>>): Prisma__freelancer_habilidadeClient<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Freelancer_habilidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_habilidadeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Freelancer_habilidades
     * const freelancer_habilidades = await prisma.freelancer_habilidade.findMany()
     * 
     * // Get first 10 Freelancer_habilidades
     * const freelancer_habilidades = await prisma.freelancer_habilidade.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const freelancer_habilidadeWithIdOnly = await prisma.freelancer_habilidade.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends freelancer_habilidadeFindManyArgs>(args?: SelectSubset<T, freelancer_habilidadeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Freelancer_habilidade.
     * @param {freelancer_habilidadeCreateArgs} args - Arguments to create a Freelancer_habilidade.
     * @example
     * // Create one Freelancer_habilidade
     * const Freelancer_habilidade = await prisma.freelancer_habilidade.create({
     *   data: {
     *     // ... data to create a Freelancer_habilidade
     *   }
     * })
     * 
     */
    create<T extends freelancer_habilidadeCreateArgs>(args: SelectSubset<T, freelancer_habilidadeCreateArgs<ExtArgs>>): Prisma__freelancer_habilidadeClient<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Freelancer_habilidades.
     * @param {freelancer_habilidadeCreateManyArgs} args - Arguments to create many Freelancer_habilidades.
     * @example
     * // Create many Freelancer_habilidades
     * const freelancer_habilidade = await prisma.freelancer_habilidade.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends freelancer_habilidadeCreateManyArgs>(args?: SelectSubset<T, freelancer_habilidadeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Freelancer_habilidade.
     * @param {freelancer_habilidadeDeleteArgs} args - Arguments to delete one Freelancer_habilidade.
     * @example
     * // Delete one Freelancer_habilidade
     * const Freelancer_habilidade = await prisma.freelancer_habilidade.delete({
     *   where: {
     *     // ... filter to delete one Freelancer_habilidade
     *   }
     * })
     * 
     */
    delete<T extends freelancer_habilidadeDeleteArgs>(args: SelectSubset<T, freelancer_habilidadeDeleteArgs<ExtArgs>>): Prisma__freelancer_habilidadeClient<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Freelancer_habilidade.
     * @param {freelancer_habilidadeUpdateArgs} args - Arguments to update one Freelancer_habilidade.
     * @example
     * // Update one Freelancer_habilidade
     * const freelancer_habilidade = await prisma.freelancer_habilidade.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends freelancer_habilidadeUpdateArgs>(args: SelectSubset<T, freelancer_habilidadeUpdateArgs<ExtArgs>>): Prisma__freelancer_habilidadeClient<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Freelancer_habilidades.
     * @param {freelancer_habilidadeDeleteManyArgs} args - Arguments to filter Freelancer_habilidades to delete.
     * @example
     * // Delete a few Freelancer_habilidades
     * const { count } = await prisma.freelancer_habilidade.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends freelancer_habilidadeDeleteManyArgs>(args?: SelectSubset<T, freelancer_habilidadeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Freelancer_habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_habilidadeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Freelancer_habilidades
     * const freelancer_habilidade = await prisma.freelancer_habilidade.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends freelancer_habilidadeUpdateManyArgs>(args: SelectSubset<T, freelancer_habilidadeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Freelancer_habilidade.
     * @param {freelancer_habilidadeUpsertArgs} args - Arguments to update or create a Freelancer_habilidade.
     * @example
     * // Update or create a Freelancer_habilidade
     * const freelancer_habilidade = await prisma.freelancer_habilidade.upsert({
     *   create: {
     *     // ... data to create a Freelancer_habilidade
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Freelancer_habilidade we want to update
     *   }
     * })
     */
    upsert<T extends freelancer_habilidadeUpsertArgs>(args: SelectSubset<T, freelancer_habilidadeUpsertArgs<ExtArgs>>): Prisma__freelancer_habilidadeClient<$Result.GetResult<Prisma.$freelancer_habilidadePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Freelancer_habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_habilidadeCountArgs} args - Arguments to filter Freelancer_habilidades to count.
     * @example
     * // Count the number of Freelancer_habilidades
     * const count = await prisma.freelancer_habilidade.count({
     *   where: {
     *     // ... the filter for the Freelancer_habilidades we want to count
     *   }
     * })
    **/
    count<T extends freelancer_habilidadeCountArgs>(
      args?: Subset<T, freelancer_habilidadeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Freelancer_habilidadeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Freelancer_habilidade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Freelancer_habilidadeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Freelancer_habilidadeAggregateArgs>(args: Subset<T, Freelancer_habilidadeAggregateArgs>): Prisma.PrismaPromise<GetFreelancer_habilidadeAggregateType<T>>

    /**
     * Group by Freelancer_habilidade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_habilidadeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends freelancer_habilidadeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: freelancer_habilidadeGroupByArgs['orderBy'] }
        : { orderBy?: freelancer_habilidadeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, freelancer_habilidadeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFreelancer_habilidadeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the freelancer_habilidade model
   */
  readonly fields: freelancer_habilidadeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for freelancer_habilidade.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__freelancer_habilidadeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the freelancer_habilidade model
   */ 
  interface freelancer_habilidadeFieldRefs {
    readonly id: FieldRef<"freelancer_habilidade", 'Int'>
    readonly id_freelancer: FieldRef<"freelancer_habilidade", 'Int'>
    readonly id_habilidade: FieldRef<"freelancer_habilidade", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * freelancer_habilidade findUnique
   */
  export type freelancer_habilidadeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_habilidade to fetch.
     */
    where: freelancer_habilidadeWhereUniqueInput
  }

  /**
   * freelancer_habilidade findUniqueOrThrow
   */
  export type freelancer_habilidadeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_habilidade to fetch.
     */
    where: freelancer_habilidadeWhereUniqueInput
  }

  /**
   * freelancer_habilidade findFirst
   */
  export type freelancer_habilidadeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_habilidade to fetch.
     */
    where?: freelancer_habilidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_habilidades to fetch.
     */
    orderBy?: freelancer_habilidadeOrderByWithRelationInput | freelancer_habilidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for freelancer_habilidades.
     */
    cursor?: freelancer_habilidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of freelancer_habilidades.
     */
    distinct?: Freelancer_habilidadeScalarFieldEnum | Freelancer_habilidadeScalarFieldEnum[]
  }

  /**
   * freelancer_habilidade findFirstOrThrow
   */
  export type freelancer_habilidadeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_habilidade to fetch.
     */
    where?: freelancer_habilidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_habilidades to fetch.
     */
    orderBy?: freelancer_habilidadeOrderByWithRelationInput | freelancer_habilidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for freelancer_habilidades.
     */
    cursor?: freelancer_habilidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of freelancer_habilidades.
     */
    distinct?: Freelancer_habilidadeScalarFieldEnum | Freelancer_habilidadeScalarFieldEnum[]
  }

  /**
   * freelancer_habilidade findMany
   */
  export type freelancer_habilidadeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_habilidades to fetch.
     */
    where?: freelancer_habilidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_habilidades to fetch.
     */
    orderBy?: freelancer_habilidadeOrderByWithRelationInput | freelancer_habilidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing freelancer_habilidades.
     */
    cursor?: freelancer_habilidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_habilidades.
     */
    skip?: number
    distinct?: Freelancer_habilidadeScalarFieldEnum | Freelancer_habilidadeScalarFieldEnum[]
  }

  /**
   * freelancer_habilidade create
   */
  export type freelancer_habilidadeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * The data needed to create a freelancer_habilidade.
     */
    data: XOR<freelancer_habilidadeCreateInput, freelancer_habilidadeUncheckedCreateInput>
  }

  /**
   * freelancer_habilidade createMany
   */
  export type freelancer_habilidadeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many freelancer_habilidades.
     */
    data: freelancer_habilidadeCreateManyInput | freelancer_habilidadeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * freelancer_habilidade update
   */
  export type freelancer_habilidadeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * The data needed to update a freelancer_habilidade.
     */
    data: XOR<freelancer_habilidadeUpdateInput, freelancer_habilidadeUncheckedUpdateInput>
    /**
     * Choose, which freelancer_habilidade to update.
     */
    where: freelancer_habilidadeWhereUniqueInput
  }

  /**
   * freelancer_habilidade updateMany
   */
  export type freelancer_habilidadeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update freelancer_habilidades.
     */
    data: XOR<freelancer_habilidadeUpdateManyMutationInput, freelancer_habilidadeUncheckedUpdateManyInput>
    /**
     * Filter which freelancer_habilidades to update
     */
    where?: freelancer_habilidadeWhereInput
  }

  /**
   * freelancer_habilidade upsert
   */
  export type freelancer_habilidadeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * The filter to search for the freelancer_habilidade to update in case it exists.
     */
    where: freelancer_habilidadeWhereUniqueInput
    /**
     * In case the freelancer_habilidade found by the `where` argument doesn't exist, create a new freelancer_habilidade with this data.
     */
    create: XOR<freelancer_habilidadeCreateInput, freelancer_habilidadeUncheckedCreateInput>
    /**
     * In case the freelancer_habilidade was found with the provided `where` argument, update it with this data.
     */
    update: XOR<freelancer_habilidadeUpdateInput, freelancer_habilidadeUncheckedUpdateInput>
  }

  /**
   * freelancer_habilidade delete
   */
  export type freelancer_habilidadeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
    /**
     * Filter which freelancer_habilidade to delete.
     */
    where: freelancer_habilidadeWhereUniqueInput
  }

  /**
   * freelancer_habilidade deleteMany
   */
  export type freelancer_habilidadeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which freelancer_habilidades to delete
     */
    where?: freelancer_habilidadeWhereInput
  }

  /**
   * freelancer_habilidade without action
   */
  export type freelancer_habilidadeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_habilidade
     */
    select?: freelancer_habilidadeSelect<ExtArgs> | null
  }


  /**
   * Model habilidades
   */

  export type AggregateHabilidades = {
    _count: HabilidadesCountAggregateOutputType | null
    _avg: HabilidadesAvgAggregateOutputType | null
    _sum: HabilidadesSumAggregateOutputType | null
    _min: HabilidadesMinAggregateOutputType | null
    _max: HabilidadesMaxAggregateOutputType | null
  }

  export type HabilidadesAvgAggregateOutputType = {
    id: number | null
  }

  export type HabilidadesSumAggregateOutputType = {
    id: number | null
  }

  export type HabilidadesMinAggregateOutputType = {
    id: number | null
    nome_habilidade: string | null
    icon_habilidade: string | null
  }

  export type HabilidadesMaxAggregateOutputType = {
    id: number | null
    nome_habilidade: string | null
    icon_habilidade: string | null
  }

  export type HabilidadesCountAggregateOutputType = {
    id: number
    nome_habilidade: number
    icon_habilidade: number
    _all: number
  }


  export type HabilidadesAvgAggregateInputType = {
    id?: true
  }

  export type HabilidadesSumAggregateInputType = {
    id?: true
  }

  export type HabilidadesMinAggregateInputType = {
    id?: true
    nome_habilidade?: true
    icon_habilidade?: true
  }

  export type HabilidadesMaxAggregateInputType = {
    id?: true
    nome_habilidade?: true
    icon_habilidade?: true
  }

  export type HabilidadesCountAggregateInputType = {
    id?: true
    nome_habilidade?: true
    icon_habilidade?: true
    _all?: true
  }

  export type HabilidadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which habilidades to aggregate.
     */
    where?: habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidades to fetch.
     */
    orderBy?: habilidadesOrderByWithRelationInput | habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned habilidades
    **/
    _count?: true | HabilidadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HabilidadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HabilidadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HabilidadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HabilidadesMaxAggregateInputType
  }

  export type GetHabilidadesAggregateType<T extends HabilidadesAggregateArgs> = {
        [P in keyof T & keyof AggregateHabilidades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHabilidades[P]>
      : GetScalarType<T[P], AggregateHabilidades[P]>
  }




  export type habilidadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: habilidadesWhereInput
    orderBy?: habilidadesOrderByWithAggregationInput | habilidadesOrderByWithAggregationInput[]
    by: HabilidadesScalarFieldEnum[] | HabilidadesScalarFieldEnum
    having?: habilidadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HabilidadesCountAggregateInputType | true
    _avg?: HabilidadesAvgAggregateInputType
    _sum?: HabilidadesSumAggregateInputType
    _min?: HabilidadesMinAggregateInputType
    _max?: HabilidadesMaxAggregateInputType
  }

  export type HabilidadesGroupByOutputType = {
    id: number
    nome_habilidade: string
    icon_habilidade: string
    _count: HabilidadesCountAggregateOutputType | null
    _avg: HabilidadesAvgAggregateOutputType | null
    _sum: HabilidadesSumAggregateOutputType | null
    _min: HabilidadesMinAggregateOutputType | null
    _max: HabilidadesMaxAggregateOutputType | null
  }

  type GetHabilidadesGroupByPayload<T extends habilidadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HabilidadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HabilidadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HabilidadesGroupByOutputType[P]>
            : GetScalarType<T[P], HabilidadesGroupByOutputType[P]>
        }
      >
    >


  export type habilidadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_habilidade?: boolean
    icon_habilidade?: boolean
  }, ExtArgs["result"]["habilidades"]>


  export type habilidadesSelectScalar = {
    id?: boolean
    nome_habilidade?: boolean
    icon_habilidade?: boolean
  }


  export type $habilidadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "habilidades"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_habilidade: string
      icon_habilidade: string
    }, ExtArgs["result"]["habilidades"]>
    composites: {}
  }

  type habilidadesGetPayload<S extends boolean | null | undefined | habilidadesDefaultArgs> = $Result.GetResult<Prisma.$habilidadesPayload, S>

  type habilidadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<habilidadesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HabilidadesCountAggregateInputType | true
    }

  export interface habilidadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['habilidades'], meta: { name: 'habilidades' } }
    /**
     * Find zero or one Habilidades that matches the filter.
     * @param {habilidadesFindUniqueArgs} args - Arguments to find a Habilidades
     * @example
     * // Get one Habilidades
     * const habilidades = await prisma.habilidades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends habilidadesFindUniqueArgs>(args: SelectSubset<T, habilidadesFindUniqueArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Habilidades that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {habilidadesFindUniqueOrThrowArgs} args - Arguments to find a Habilidades
     * @example
     * // Get one Habilidades
     * const habilidades = await prisma.habilidades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends habilidadesFindUniqueOrThrowArgs>(args: SelectSubset<T, habilidadesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Habilidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesFindFirstArgs} args - Arguments to find a Habilidades
     * @example
     * // Get one Habilidades
     * const habilidades = await prisma.habilidades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends habilidadesFindFirstArgs>(args?: SelectSubset<T, habilidadesFindFirstArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Habilidades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesFindFirstOrThrowArgs} args - Arguments to find a Habilidades
     * @example
     * // Get one Habilidades
     * const habilidades = await prisma.habilidades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends habilidadesFindFirstOrThrowArgs>(args?: SelectSubset<T, habilidadesFindFirstOrThrowArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Habilidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Habilidades
     * const habilidades = await prisma.habilidades.findMany()
     * 
     * // Get first 10 Habilidades
     * const habilidades = await prisma.habilidades.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const habilidadesWithIdOnly = await prisma.habilidades.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends habilidadesFindManyArgs>(args?: SelectSubset<T, habilidadesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Habilidades.
     * @param {habilidadesCreateArgs} args - Arguments to create a Habilidades.
     * @example
     * // Create one Habilidades
     * const Habilidades = await prisma.habilidades.create({
     *   data: {
     *     // ... data to create a Habilidades
     *   }
     * })
     * 
     */
    create<T extends habilidadesCreateArgs>(args: SelectSubset<T, habilidadesCreateArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Habilidades.
     * @param {habilidadesCreateManyArgs} args - Arguments to create many Habilidades.
     * @example
     * // Create many Habilidades
     * const habilidades = await prisma.habilidades.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends habilidadesCreateManyArgs>(args?: SelectSubset<T, habilidadesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Habilidades.
     * @param {habilidadesDeleteArgs} args - Arguments to delete one Habilidades.
     * @example
     * // Delete one Habilidades
     * const Habilidades = await prisma.habilidades.delete({
     *   where: {
     *     // ... filter to delete one Habilidades
     *   }
     * })
     * 
     */
    delete<T extends habilidadesDeleteArgs>(args: SelectSubset<T, habilidadesDeleteArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Habilidades.
     * @param {habilidadesUpdateArgs} args - Arguments to update one Habilidades.
     * @example
     * // Update one Habilidades
     * const habilidades = await prisma.habilidades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends habilidadesUpdateArgs>(args: SelectSubset<T, habilidadesUpdateArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Habilidades.
     * @param {habilidadesDeleteManyArgs} args - Arguments to filter Habilidades to delete.
     * @example
     * // Delete a few Habilidades
     * const { count } = await prisma.habilidades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends habilidadesDeleteManyArgs>(args?: SelectSubset<T, habilidadesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Habilidades
     * const habilidades = await prisma.habilidades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends habilidadesUpdateManyArgs>(args: SelectSubset<T, habilidadesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Habilidades.
     * @param {habilidadesUpsertArgs} args - Arguments to update or create a Habilidades.
     * @example
     * // Update or create a Habilidades
     * const habilidades = await prisma.habilidades.upsert({
     *   create: {
     *     // ... data to create a Habilidades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Habilidades we want to update
     *   }
     * })
     */
    upsert<T extends habilidadesUpsertArgs>(args: SelectSubset<T, habilidadesUpsertArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesCountArgs} args - Arguments to filter Habilidades to count.
     * @example
     * // Count the number of Habilidades
     * const count = await prisma.habilidades.count({
     *   where: {
     *     // ... the filter for the Habilidades we want to count
     *   }
     * })
    **/
    count<T extends habilidadesCountArgs>(
      args?: Subset<T, habilidadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HabilidadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HabilidadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HabilidadesAggregateArgs>(args: Subset<T, HabilidadesAggregateArgs>): Prisma.PrismaPromise<GetHabilidadesAggregateType<T>>

    /**
     * Group by Habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends habilidadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: habilidadesGroupByArgs['orderBy'] }
        : { orderBy?: habilidadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, habilidadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHabilidadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the habilidades model
   */
  readonly fields: habilidadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for habilidades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__habilidadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the habilidades model
   */ 
  interface habilidadesFieldRefs {
    readonly id: FieldRef<"habilidades", 'Int'>
    readonly nome_habilidade: FieldRef<"habilidades", 'String'>
    readonly icon_habilidade: FieldRef<"habilidades", 'String'>
  }
    

  // Custom InputTypes
  /**
   * habilidades findUnique
   */
  export type habilidadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where: habilidadesWhereUniqueInput
  }

  /**
   * habilidades findUniqueOrThrow
   */
  export type habilidadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where: habilidadesWhereUniqueInput
  }

  /**
   * habilidades findFirst
   */
  export type habilidadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where?: habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidades to fetch.
     */
    orderBy?: habilidadesOrderByWithRelationInput | habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for habilidades.
     */
    cursor?: habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of habilidades.
     */
    distinct?: HabilidadesScalarFieldEnum | HabilidadesScalarFieldEnum[]
  }

  /**
   * habilidades findFirstOrThrow
   */
  export type habilidadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where?: habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidades to fetch.
     */
    orderBy?: habilidadesOrderByWithRelationInput | habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for habilidades.
     */
    cursor?: habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of habilidades.
     */
    distinct?: HabilidadesScalarFieldEnum | HabilidadesScalarFieldEnum[]
  }

  /**
   * habilidades findMany
   */
  export type habilidadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where?: habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidades to fetch.
     */
    orderBy?: habilidadesOrderByWithRelationInput | habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing habilidades.
     */
    cursor?: habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidades.
     */
    skip?: number
    distinct?: HabilidadesScalarFieldEnum | HabilidadesScalarFieldEnum[]
  }

  /**
   * habilidades create
   */
  export type habilidadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * The data needed to create a habilidades.
     */
    data: XOR<habilidadesCreateInput, habilidadesUncheckedCreateInput>
  }

  /**
   * habilidades createMany
   */
  export type habilidadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many habilidades.
     */
    data: habilidadesCreateManyInput | habilidadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * habilidades update
   */
  export type habilidadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * The data needed to update a habilidades.
     */
    data: XOR<habilidadesUpdateInput, habilidadesUncheckedUpdateInput>
    /**
     * Choose, which habilidades to update.
     */
    where: habilidadesWhereUniqueInput
  }

  /**
   * habilidades updateMany
   */
  export type habilidadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update habilidades.
     */
    data: XOR<habilidadesUpdateManyMutationInput, habilidadesUncheckedUpdateManyInput>
    /**
     * Filter which habilidades to update
     */
    where?: habilidadesWhereInput
  }

  /**
   * habilidades upsert
   */
  export type habilidadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * The filter to search for the habilidades to update in case it exists.
     */
    where: habilidadesWhereUniqueInput
    /**
     * In case the habilidades found by the `where` argument doesn't exist, create a new habilidades with this data.
     */
    create: XOR<habilidadesCreateInput, habilidadesUncheckedCreateInput>
    /**
     * In case the habilidades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<habilidadesUpdateInput, habilidadesUncheckedUpdateInput>
  }

  /**
   * habilidades delete
   */
  export type habilidadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Filter which habilidades to delete.
     */
    where: habilidadesWhereUniqueInput
  }

  /**
   * habilidades deleteMany
   */
  export type habilidadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which habilidades to delete
     */
    where?: habilidadesWhereInput
  }

  /**
   * habilidades without action
   */
  export type habilidadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
  }


  /**
   * Model nivel_experiencia
   */

  export type AggregateNivel_experiencia = {
    _count: Nivel_experienciaCountAggregateOutputType | null
    _avg: Nivel_experienciaAvgAggregateOutputType | null
    _sum: Nivel_experienciaSumAggregateOutputType | null
    _min: Nivel_experienciaMinAggregateOutputType | null
    _max: Nivel_experienciaMaxAggregateOutputType | null
  }

  export type Nivel_experienciaAvgAggregateOutputType = {
    id: number | null
  }

  export type Nivel_experienciaSumAggregateOutputType = {
    id: number | null
  }

  export type Nivel_experienciaMinAggregateOutputType = {
    id: number | null
    nivel_experiencia: string | null
  }

  export type Nivel_experienciaMaxAggregateOutputType = {
    id: number | null
    nivel_experiencia: string | null
  }

  export type Nivel_experienciaCountAggregateOutputType = {
    id: number
    nivel_experiencia: number
    _all: number
  }


  export type Nivel_experienciaAvgAggregateInputType = {
    id?: true
  }

  export type Nivel_experienciaSumAggregateInputType = {
    id?: true
  }

  export type Nivel_experienciaMinAggregateInputType = {
    id?: true
    nivel_experiencia?: true
  }

  export type Nivel_experienciaMaxAggregateInputType = {
    id?: true
    nivel_experiencia?: true
  }

  export type Nivel_experienciaCountAggregateInputType = {
    id?: true
    nivel_experiencia?: true
    _all?: true
  }

  export type Nivel_experienciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nivel_experiencia to aggregate.
     */
    where?: nivel_experienciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nivel_experiencias to fetch.
     */
    orderBy?: nivel_experienciaOrderByWithRelationInput | nivel_experienciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nivel_experienciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nivel_experiencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nivel_experiencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nivel_experiencias
    **/
    _count?: true | Nivel_experienciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nivel_experienciaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nivel_experienciaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nivel_experienciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nivel_experienciaMaxAggregateInputType
  }

  export type GetNivel_experienciaAggregateType<T extends Nivel_experienciaAggregateArgs> = {
        [P in keyof T & keyof AggregateNivel_experiencia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNivel_experiencia[P]>
      : GetScalarType<T[P], AggregateNivel_experiencia[P]>
  }




  export type nivel_experienciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nivel_experienciaWhereInput
    orderBy?: nivel_experienciaOrderByWithAggregationInput | nivel_experienciaOrderByWithAggregationInput[]
    by: Nivel_experienciaScalarFieldEnum[] | Nivel_experienciaScalarFieldEnum
    having?: nivel_experienciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nivel_experienciaCountAggregateInputType | true
    _avg?: Nivel_experienciaAvgAggregateInputType
    _sum?: Nivel_experienciaSumAggregateInputType
    _min?: Nivel_experienciaMinAggregateInputType
    _max?: Nivel_experienciaMaxAggregateInputType
  }

  export type Nivel_experienciaGroupByOutputType = {
    id: number
    nivel_experiencia: string | null
    _count: Nivel_experienciaCountAggregateOutputType | null
    _avg: Nivel_experienciaAvgAggregateOutputType | null
    _sum: Nivel_experienciaSumAggregateOutputType | null
    _min: Nivel_experienciaMinAggregateOutputType | null
    _max: Nivel_experienciaMaxAggregateOutputType | null
  }

  type GetNivel_experienciaGroupByPayload<T extends nivel_experienciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nivel_experienciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nivel_experienciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nivel_experienciaGroupByOutputType[P]>
            : GetScalarType<T[P], Nivel_experienciaGroupByOutputType[P]>
        }
      >
    >


  export type nivel_experienciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nivel_experiencia?: boolean
  }, ExtArgs["result"]["nivel_experiencia"]>


  export type nivel_experienciaSelectScalar = {
    id?: boolean
    nivel_experiencia?: boolean
  }


  export type $nivel_experienciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nivel_experiencia"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nivel_experiencia: string | null
    }, ExtArgs["result"]["nivel_experiencia"]>
    composites: {}
  }

  type nivel_experienciaGetPayload<S extends boolean | null | undefined | nivel_experienciaDefaultArgs> = $Result.GetResult<Prisma.$nivel_experienciaPayload, S>

  type nivel_experienciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<nivel_experienciaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Nivel_experienciaCountAggregateInputType | true
    }

  export interface nivel_experienciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nivel_experiencia'], meta: { name: 'nivel_experiencia' } }
    /**
     * Find zero or one Nivel_experiencia that matches the filter.
     * @param {nivel_experienciaFindUniqueArgs} args - Arguments to find a Nivel_experiencia
     * @example
     * // Get one Nivel_experiencia
     * const nivel_experiencia = await prisma.nivel_experiencia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nivel_experienciaFindUniqueArgs>(args: SelectSubset<T, nivel_experienciaFindUniqueArgs<ExtArgs>>): Prisma__nivel_experienciaClient<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Nivel_experiencia that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {nivel_experienciaFindUniqueOrThrowArgs} args - Arguments to find a Nivel_experiencia
     * @example
     * // Get one Nivel_experiencia
     * const nivel_experiencia = await prisma.nivel_experiencia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nivel_experienciaFindUniqueOrThrowArgs>(args: SelectSubset<T, nivel_experienciaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nivel_experienciaClient<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Nivel_experiencia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivel_experienciaFindFirstArgs} args - Arguments to find a Nivel_experiencia
     * @example
     * // Get one Nivel_experiencia
     * const nivel_experiencia = await prisma.nivel_experiencia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nivel_experienciaFindFirstArgs>(args?: SelectSubset<T, nivel_experienciaFindFirstArgs<ExtArgs>>): Prisma__nivel_experienciaClient<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Nivel_experiencia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivel_experienciaFindFirstOrThrowArgs} args - Arguments to find a Nivel_experiencia
     * @example
     * // Get one Nivel_experiencia
     * const nivel_experiencia = await prisma.nivel_experiencia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nivel_experienciaFindFirstOrThrowArgs>(args?: SelectSubset<T, nivel_experienciaFindFirstOrThrowArgs<ExtArgs>>): Prisma__nivel_experienciaClient<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Nivel_experiencias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivel_experienciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nivel_experiencias
     * const nivel_experiencias = await prisma.nivel_experiencia.findMany()
     * 
     * // Get first 10 Nivel_experiencias
     * const nivel_experiencias = await prisma.nivel_experiencia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nivel_experienciaWithIdOnly = await prisma.nivel_experiencia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nivel_experienciaFindManyArgs>(args?: SelectSubset<T, nivel_experienciaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Nivel_experiencia.
     * @param {nivel_experienciaCreateArgs} args - Arguments to create a Nivel_experiencia.
     * @example
     * // Create one Nivel_experiencia
     * const Nivel_experiencia = await prisma.nivel_experiencia.create({
     *   data: {
     *     // ... data to create a Nivel_experiencia
     *   }
     * })
     * 
     */
    create<T extends nivel_experienciaCreateArgs>(args: SelectSubset<T, nivel_experienciaCreateArgs<ExtArgs>>): Prisma__nivel_experienciaClient<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Nivel_experiencias.
     * @param {nivel_experienciaCreateManyArgs} args - Arguments to create many Nivel_experiencias.
     * @example
     * // Create many Nivel_experiencias
     * const nivel_experiencia = await prisma.nivel_experiencia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nivel_experienciaCreateManyArgs>(args?: SelectSubset<T, nivel_experienciaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nivel_experiencia.
     * @param {nivel_experienciaDeleteArgs} args - Arguments to delete one Nivel_experiencia.
     * @example
     * // Delete one Nivel_experiencia
     * const Nivel_experiencia = await prisma.nivel_experiencia.delete({
     *   where: {
     *     // ... filter to delete one Nivel_experiencia
     *   }
     * })
     * 
     */
    delete<T extends nivel_experienciaDeleteArgs>(args: SelectSubset<T, nivel_experienciaDeleteArgs<ExtArgs>>): Prisma__nivel_experienciaClient<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Nivel_experiencia.
     * @param {nivel_experienciaUpdateArgs} args - Arguments to update one Nivel_experiencia.
     * @example
     * // Update one Nivel_experiencia
     * const nivel_experiencia = await prisma.nivel_experiencia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nivel_experienciaUpdateArgs>(args: SelectSubset<T, nivel_experienciaUpdateArgs<ExtArgs>>): Prisma__nivel_experienciaClient<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Nivel_experiencias.
     * @param {nivel_experienciaDeleteManyArgs} args - Arguments to filter Nivel_experiencias to delete.
     * @example
     * // Delete a few Nivel_experiencias
     * const { count } = await prisma.nivel_experiencia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nivel_experienciaDeleteManyArgs>(args?: SelectSubset<T, nivel_experienciaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nivel_experiencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivel_experienciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nivel_experiencias
     * const nivel_experiencia = await prisma.nivel_experiencia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nivel_experienciaUpdateManyArgs>(args: SelectSubset<T, nivel_experienciaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nivel_experiencia.
     * @param {nivel_experienciaUpsertArgs} args - Arguments to update or create a Nivel_experiencia.
     * @example
     * // Update or create a Nivel_experiencia
     * const nivel_experiencia = await prisma.nivel_experiencia.upsert({
     *   create: {
     *     // ... data to create a Nivel_experiencia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nivel_experiencia we want to update
     *   }
     * })
     */
    upsert<T extends nivel_experienciaUpsertArgs>(args: SelectSubset<T, nivel_experienciaUpsertArgs<ExtArgs>>): Prisma__nivel_experienciaClient<$Result.GetResult<Prisma.$nivel_experienciaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Nivel_experiencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivel_experienciaCountArgs} args - Arguments to filter Nivel_experiencias to count.
     * @example
     * // Count the number of Nivel_experiencias
     * const count = await prisma.nivel_experiencia.count({
     *   where: {
     *     // ... the filter for the Nivel_experiencias we want to count
     *   }
     * })
    **/
    count<T extends nivel_experienciaCountArgs>(
      args?: Subset<T, nivel_experienciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nivel_experienciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nivel_experiencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nivel_experienciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nivel_experienciaAggregateArgs>(args: Subset<T, Nivel_experienciaAggregateArgs>): Prisma.PrismaPromise<GetNivel_experienciaAggregateType<T>>

    /**
     * Group by Nivel_experiencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivel_experienciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nivel_experienciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nivel_experienciaGroupByArgs['orderBy'] }
        : { orderBy?: nivel_experienciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nivel_experienciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNivel_experienciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nivel_experiencia model
   */
  readonly fields: nivel_experienciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nivel_experiencia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nivel_experienciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nivel_experiencia model
   */ 
  interface nivel_experienciaFieldRefs {
    readonly id: FieldRef<"nivel_experiencia", 'Int'>
    readonly nivel_experiencia: FieldRef<"nivel_experiencia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * nivel_experiencia findUnique
   */
  export type nivel_experienciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * Filter, which nivel_experiencia to fetch.
     */
    where: nivel_experienciaWhereUniqueInput
  }

  /**
   * nivel_experiencia findUniqueOrThrow
   */
  export type nivel_experienciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * Filter, which nivel_experiencia to fetch.
     */
    where: nivel_experienciaWhereUniqueInput
  }

  /**
   * nivel_experiencia findFirst
   */
  export type nivel_experienciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * Filter, which nivel_experiencia to fetch.
     */
    where?: nivel_experienciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nivel_experiencias to fetch.
     */
    orderBy?: nivel_experienciaOrderByWithRelationInput | nivel_experienciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nivel_experiencias.
     */
    cursor?: nivel_experienciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nivel_experiencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nivel_experiencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nivel_experiencias.
     */
    distinct?: Nivel_experienciaScalarFieldEnum | Nivel_experienciaScalarFieldEnum[]
  }

  /**
   * nivel_experiencia findFirstOrThrow
   */
  export type nivel_experienciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * Filter, which nivel_experiencia to fetch.
     */
    where?: nivel_experienciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nivel_experiencias to fetch.
     */
    orderBy?: nivel_experienciaOrderByWithRelationInput | nivel_experienciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nivel_experiencias.
     */
    cursor?: nivel_experienciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nivel_experiencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nivel_experiencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nivel_experiencias.
     */
    distinct?: Nivel_experienciaScalarFieldEnum | Nivel_experienciaScalarFieldEnum[]
  }

  /**
   * nivel_experiencia findMany
   */
  export type nivel_experienciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * Filter, which nivel_experiencias to fetch.
     */
    where?: nivel_experienciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nivel_experiencias to fetch.
     */
    orderBy?: nivel_experienciaOrderByWithRelationInput | nivel_experienciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nivel_experiencias.
     */
    cursor?: nivel_experienciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nivel_experiencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nivel_experiencias.
     */
    skip?: number
    distinct?: Nivel_experienciaScalarFieldEnum | Nivel_experienciaScalarFieldEnum[]
  }

  /**
   * nivel_experiencia create
   */
  export type nivel_experienciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * The data needed to create a nivel_experiencia.
     */
    data?: XOR<nivel_experienciaCreateInput, nivel_experienciaUncheckedCreateInput>
  }

  /**
   * nivel_experiencia createMany
   */
  export type nivel_experienciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nivel_experiencias.
     */
    data: nivel_experienciaCreateManyInput | nivel_experienciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nivel_experiencia update
   */
  export type nivel_experienciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * The data needed to update a nivel_experiencia.
     */
    data: XOR<nivel_experienciaUpdateInput, nivel_experienciaUncheckedUpdateInput>
    /**
     * Choose, which nivel_experiencia to update.
     */
    where: nivel_experienciaWhereUniqueInput
  }

  /**
   * nivel_experiencia updateMany
   */
  export type nivel_experienciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nivel_experiencias.
     */
    data: XOR<nivel_experienciaUpdateManyMutationInput, nivel_experienciaUncheckedUpdateManyInput>
    /**
     * Filter which nivel_experiencias to update
     */
    where?: nivel_experienciaWhereInput
  }

  /**
   * nivel_experiencia upsert
   */
  export type nivel_experienciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * The filter to search for the nivel_experiencia to update in case it exists.
     */
    where: nivel_experienciaWhereUniqueInput
    /**
     * In case the nivel_experiencia found by the `where` argument doesn't exist, create a new nivel_experiencia with this data.
     */
    create: XOR<nivel_experienciaCreateInput, nivel_experienciaUncheckedCreateInput>
    /**
     * In case the nivel_experiencia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nivel_experienciaUpdateInput, nivel_experienciaUncheckedUpdateInput>
  }

  /**
   * nivel_experiencia delete
   */
  export type nivel_experienciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
    /**
     * Filter which nivel_experiencia to delete.
     */
    where: nivel_experienciaWhereUniqueInput
  }

  /**
   * nivel_experiencia deleteMany
   */
  export type nivel_experienciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nivel_experiencias to delete
     */
    where?: nivel_experienciaWhereInput
  }

  /**
   * nivel_experiencia without action
   */
  export type nivel_experienciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel_experiencia
     */
    select?: nivel_experienciaSelect<ExtArgs> | null
  }


  /**
   * Model portfolio
   */

  export type AggregatePortfolio = {
    _count: PortfolioCountAggregateOutputType | null
    _avg: PortfolioAvgAggregateOutputType | null
    _sum: PortfolioSumAggregateOutputType | null
    _min: PortfolioMinAggregateOutputType | null
    _max: PortfolioMaxAggregateOutputType | null
  }

  export type PortfolioAvgAggregateOutputType = {
    id: number | null
  }

  export type PortfolioSumAggregateOutputType = {
    id: number | null
  }

  export type PortfolioMinAggregateOutputType = {
    id: number | null
    arquivo: string | null
  }

  export type PortfolioMaxAggregateOutputType = {
    id: number | null
    arquivo: string | null
  }

  export type PortfolioCountAggregateOutputType = {
    id: number
    arquivo: number
    _all: number
  }


  export type PortfolioAvgAggregateInputType = {
    id?: true
  }

  export type PortfolioSumAggregateInputType = {
    id?: true
  }

  export type PortfolioMinAggregateInputType = {
    id?: true
    arquivo?: true
  }

  export type PortfolioMaxAggregateInputType = {
    id?: true
    arquivo?: true
  }

  export type PortfolioCountAggregateInputType = {
    id?: true
    arquivo?: true
    _all?: true
  }

  export type PortfolioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which portfolio to aggregate.
     */
    where?: portfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of portfolios to fetch.
     */
    orderBy?: portfolioOrderByWithRelationInput | portfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: portfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned portfolios
    **/
    _count?: true | PortfolioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PortfolioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PortfolioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PortfolioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PortfolioMaxAggregateInputType
  }

  export type GetPortfolioAggregateType<T extends PortfolioAggregateArgs> = {
        [P in keyof T & keyof AggregatePortfolio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePortfolio[P]>
      : GetScalarType<T[P], AggregatePortfolio[P]>
  }




  export type portfolioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: portfolioWhereInput
    orderBy?: portfolioOrderByWithAggregationInput | portfolioOrderByWithAggregationInput[]
    by: PortfolioScalarFieldEnum[] | PortfolioScalarFieldEnum
    having?: portfolioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PortfolioCountAggregateInputType | true
    _avg?: PortfolioAvgAggregateInputType
    _sum?: PortfolioSumAggregateInputType
    _min?: PortfolioMinAggregateInputType
    _max?: PortfolioMaxAggregateInputType
  }

  export type PortfolioGroupByOutputType = {
    id: number
    arquivo: string
    _count: PortfolioCountAggregateOutputType | null
    _avg: PortfolioAvgAggregateOutputType | null
    _sum: PortfolioSumAggregateOutputType | null
    _min: PortfolioMinAggregateOutputType | null
    _max: PortfolioMaxAggregateOutputType | null
  }

  type GetPortfolioGroupByPayload<T extends portfolioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PortfolioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PortfolioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PortfolioGroupByOutputType[P]>
            : GetScalarType<T[P], PortfolioGroupByOutputType[P]>
        }
      >
    >


  export type portfolioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    arquivo?: boolean
  }, ExtArgs["result"]["portfolio"]>


  export type portfolioSelectScalar = {
    id?: boolean
    arquivo?: boolean
  }


  export type $portfolioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "portfolio"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      arquivo: string
    }, ExtArgs["result"]["portfolio"]>
    composites: {}
  }

  type portfolioGetPayload<S extends boolean | null | undefined | portfolioDefaultArgs> = $Result.GetResult<Prisma.$portfolioPayload, S>

  type portfolioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<portfolioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PortfolioCountAggregateInputType | true
    }

  export interface portfolioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['portfolio'], meta: { name: 'portfolio' } }
    /**
     * Find zero or one Portfolio that matches the filter.
     * @param {portfolioFindUniqueArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends portfolioFindUniqueArgs>(args: SelectSubset<T, portfolioFindUniqueArgs<ExtArgs>>): Prisma__portfolioClient<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Portfolio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {portfolioFindUniqueOrThrowArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends portfolioFindUniqueOrThrowArgs>(args: SelectSubset<T, portfolioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__portfolioClient<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Portfolio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolioFindFirstArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends portfolioFindFirstArgs>(args?: SelectSubset<T, portfolioFindFirstArgs<ExtArgs>>): Prisma__portfolioClient<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Portfolio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolioFindFirstOrThrowArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends portfolioFindFirstOrThrowArgs>(args?: SelectSubset<T, portfolioFindFirstOrThrowArgs<ExtArgs>>): Prisma__portfolioClient<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Portfolios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Portfolios
     * const portfolios = await prisma.portfolio.findMany()
     * 
     * // Get first 10 Portfolios
     * const portfolios = await prisma.portfolio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const portfolioWithIdOnly = await prisma.portfolio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends portfolioFindManyArgs>(args?: SelectSubset<T, portfolioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Portfolio.
     * @param {portfolioCreateArgs} args - Arguments to create a Portfolio.
     * @example
     * // Create one Portfolio
     * const Portfolio = await prisma.portfolio.create({
     *   data: {
     *     // ... data to create a Portfolio
     *   }
     * })
     * 
     */
    create<T extends portfolioCreateArgs>(args: SelectSubset<T, portfolioCreateArgs<ExtArgs>>): Prisma__portfolioClient<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Portfolios.
     * @param {portfolioCreateManyArgs} args - Arguments to create many Portfolios.
     * @example
     * // Create many Portfolios
     * const portfolio = await prisma.portfolio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends portfolioCreateManyArgs>(args?: SelectSubset<T, portfolioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Portfolio.
     * @param {portfolioDeleteArgs} args - Arguments to delete one Portfolio.
     * @example
     * // Delete one Portfolio
     * const Portfolio = await prisma.portfolio.delete({
     *   where: {
     *     // ... filter to delete one Portfolio
     *   }
     * })
     * 
     */
    delete<T extends portfolioDeleteArgs>(args: SelectSubset<T, portfolioDeleteArgs<ExtArgs>>): Prisma__portfolioClient<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Portfolio.
     * @param {portfolioUpdateArgs} args - Arguments to update one Portfolio.
     * @example
     * // Update one Portfolio
     * const portfolio = await prisma.portfolio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends portfolioUpdateArgs>(args: SelectSubset<T, portfolioUpdateArgs<ExtArgs>>): Prisma__portfolioClient<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Portfolios.
     * @param {portfolioDeleteManyArgs} args - Arguments to filter Portfolios to delete.
     * @example
     * // Delete a few Portfolios
     * const { count } = await prisma.portfolio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends portfolioDeleteManyArgs>(args?: SelectSubset<T, portfolioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Portfolios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Portfolios
     * const portfolio = await prisma.portfolio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends portfolioUpdateManyArgs>(args: SelectSubset<T, portfolioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Portfolio.
     * @param {portfolioUpsertArgs} args - Arguments to update or create a Portfolio.
     * @example
     * // Update or create a Portfolio
     * const portfolio = await prisma.portfolio.upsert({
     *   create: {
     *     // ... data to create a Portfolio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Portfolio we want to update
     *   }
     * })
     */
    upsert<T extends portfolioUpsertArgs>(args: SelectSubset<T, portfolioUpsertArgs<ExtArgs>>): Prisma__portfolioClient<$Result.GetResult<Prisma.$portfolioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Portfolios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolioCountArgs} args - Arguments to filter Portfolios to count.
     * @example
     * // Count the number of Portfolios
     * const count = await prisma.portfolio.count({
     *   where: {
     *     // ... the filter for the Portfolios we want to count
     *   }
     * })
    **/
    count<T extends portfolioCountArgs>(
      args?: Subset<T, portfolioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PortfolioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Portfolio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PortfolioAggregateArgs>(args: Subset<T, PortfolioAggregateArgs>): Prisma.PrismaPromise<GetPortfolioAggregateType<T>>

    /**
     * Group by Portfolio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends portfolioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: portfolioGroupByArgs['orderBy'] }
        : { orderBy?: portfolioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, portfolioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPortfolioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the portfolio model
   */
  readonly fields: portfolioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for portfolio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__portfolioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the portfolio model
   */ 
  interface portfolioFieldRefs {
    readonly id: FieldRef<"portfolio", 'Int'>
    readonly arquivo: FieldRef<"portfolio", 'String'>
  }
    

  // Custom InputTypes
  /**
   * portfolio findUnique
   */
  export type portfolioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * Filter, which portfolio to fetch.
     */
    where: portfolioWhereUniqueInput
  }

  /**
   * portfolio findUniqueOrThrow
   */
  export type portfolioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * Filter, which portfolio to fetch.
     */
    where: portfolioWhereUniqueInput
  }

  /**
   * portfolio findFirst
   */
  export type portfolioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * Filter, which portfolio to fetch.
     */
    where?: portfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of portfolios to fetch.
     */
    orderBy?: portfolioOrderByWithRelationInput | portfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for portfolios.
     */
    cursor?: portfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of portfolios.
     */
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * portfolio findFirstOrThrow
   */
  export type portfolioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * Filter, which portfolio to fetch.
     */
    where?: portfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of portfolios to fetch.
     */
    orderBy?: portfolioOrderByWithRelationInput | portfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for portfolios.
     */
    cursor?: portfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of portfolios.
     */
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * portfolio findMany
   */
  export type portfolioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * Filter, which portfolios to fetch.
     */
    where?: portfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of portfolios to fetch.
     */
    orderBy?: portfolioOrderByWithRelationInput | portfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing portfolios.
     */
    cursor?: portfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` portfolios.
     */
    skip?: number
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * portfolio create
   */
  export type portfolioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * The data needed to create a portfolio.
     */
    data: XOR<portfolioCreateInput, portfolioUncheckedCreateInput>
  }

  /**
   * portfolio createMany
   */
  export type portfolioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many portfolios.
     */
    data: portfolioCreateManyInput | portfolioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * portfolio update
   */
  export type portfolioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * The data needed to update a portfolio.
     */
    data: XOR<portfolioUpdateInput, portfolioUncheckedUpdateInput>
    /**
     * Choose, which portfolio to update.
     */
    where: portfolioWhereUniqueInput
  }

  /**
   * portfolio updateMany
   */
  export type portfolioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update portfolios.
     */
    data: XOR<portfolioUpdateManyMutationInput, portfolioUncheckedUpdateManyInput>
    /**
     * Filter which portfolios to update
     */
    where?: portfolioWhereInput
  }

  /**
   * portfolio upsert
   */
  export type portfolioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * The filter to search for the portfolio to update in case it exists.
     */
    where: portfolioWhereUniqueInput
    /**
     * In case the portfolio found by the `where` argument doesn't exist, create a new portfolio with this data.
     */
    create: XOR<portfolioCreateInput, portfolioUncheckedCreateInput>
    /**
     * In case the portfolio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<portfolioUpdateInput, portfolioUncheckedUpdateInput>
  }

  /**
   * portfolio delete
   */
  export type portfolioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
    /**
     * Filter which portfolio to delete.
     */
    where: portfolioWhereUniqueInput
  }

  /**
   * portfolio deleteMany
   */
  export type portfolioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which portfolios to delete
     */
    where?: portfolioWhereInput
  }

  /**
   * portfolio without action
   */
  export type portfolioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio
     */
    select?: portfolioSelect<ExtArgs> | null
  }


  /**
   * Model publicacao_projetos
   */

  export type AggregatePublicacao_projetos = {
    _count: Publicacao_projetosCountAggregateOutputType | null
    _avg: Publicacao_projetosAvgAggregateOutputType | null
    _sum: Publicacao_projetosSumAggregateOutputType | null
    _min: Publicacao_projetosMinAggregateOutputType | null
    _max: Publicacao_projetosMaxAggregateOutputType | null
  }

  export type Publicacao_projetosAvgAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    orcamento: number | null
    id_nivel_experiencia: number | null
  }

  export type Publicacao_projetosSumAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    orcamento: number | null
    id_nivel_experiencia: number | null
  }

  export type Publicacao_projetosMinAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    nome_projeto: string | null
    descricao_projeto: string | null
    orcamento: number | null
    id_nivel_experiencia: number | null
    is_premium: boolean | null
  }

  export type Publicacao_projetosMaxAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    nome_projeto: string | null
    descricao_projeto: string | null
    orcamento: number | null
    id_nivel_experiencia: number | null
    is_premium: boolean | null
  }

  export type Publicacao_projetosCountAggregateOutputType = {
    id: number
    id_cliente: number
    nome_projeto: number
    descricao_projeto: number
    orcamento: number
    id_nivel_experiencia: number
    is_premium: number
    _all: number
  }


  export type Publicacao_projetosAvgAggregateInputType = {
    id?: true
    id_cliente?: true
    orcamento?: true
    id_nivel_experiencia?: true
  }

  export type Publicacao_projetosSumAggregateInputType = {
    id?: true
    id_cliente?: true
    orcamento?: true
    id_nivel_experiencia?: true
  }

  export type Publicacao_projetosMinAggregateInputType = {
    id?: true
    id_cliente?: true
    nome_projeto?: true
    descricao_projeto?: true
    orcamento?: true
    id_nivel_experiencia?: true
    is_premium?: true
  }

  export type Publicacao_projetosMaxAggregateInputType = {
    id?: true
    id_cliente?: true
    nome_projeto?: true
    descricao_projeto?: true
    orcamento?: true
    id_nivel_experiencia?: true
    is_premium?: true
  }

  export type Publicacao_projetosCountAggregateInputType = {
    id?: true
    id_cliente?: true
    nome_projeto?: true
    descricao_projeto?: true
    orcamento?: true
    id_nivel_experiencia?: true
    is_premium?: true
    _all?: true
  }

  export type Publicacao_projetosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which publicacao_projetos to aggregate.
     */
    where?: publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of publicacao_projetos to fetch.
     */
    orderBy?: publicacao_projetosOrderByWithRelationInput | publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned publicacao_projetos
    **/
    _count?: true | Publicacao_projetosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Publicacao_projetosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Publicacao_projetosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Publicacao_projetosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Publicacao_projetosMaxAggregateInputType
  }

  export type GetPublicacao_projetosAggregateType<T extends Publicacao_projetosAggregateArgs> = {
        [P in keyof T & keyof AggregatePublicacao_projetos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublicacao_projetos[P]>
      : GetScalarType<T[P], AggregatePublicacao_projetos[P]>
  }




  export type publicacao_projetosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: publicacao_projetosWhereInput
    orderBy?: publicacao_projetosOrderByWithAggregationInput | publicacao_projetosOrderByWithAggregationInput[]
    by: Publicacao_projetosScalarFieldEnum[] | Publicacao_projetosScalarFieldEnum
    having?: publicacao_projetosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Publicacao_projetosCountAggregateInputType | true
    _avg?: Publicacao_projetosAvgAggregateInputType
    _sum?: Publicacao_projetosSumAggregateInputType
    _min?: Publicacao_projetosMinAggregateInputType
    _max?: Publicacao_projetosMaxAggregateInputType
  }

  export type Publicacao_projetosGroupByOutputType = {
    id: number
    id_cliente: number
    nome_projeto: string | null
    descricao_projeto: string | null
    orcamento: number
    id_nivel_experiencia: number
    is_premium: boolean
    _count: Publicacao_projetosCountAggregateOutputType | null
    _avg: Publicacao_projetosAvgAggregateOutputType | null
    _sum: Publicacao_projetosSumAggregateOutputType | null
    _min: Publicacao_projetosMinAggregateOutputType | null
    _max: Publicacao_projetosMaxAggregateOutputType | null
  }

  type GetPublicacao_projetosGroupByPayload<T extends publicacao_projetosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Publicacao_projetosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Publicacao_projetosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Publicacao_projetosGroupByOutputType[P]>
            : GetScalarType<T[P], Publicacao_projetosGroupByOutputType[P]>
        }
      >
    >


  export type publicacao_projetosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_cliente?: boolean
    nome_projeto?: boolean
    descricao_projeto?: boolean
    orcamento?: boolean
    id_nivel_experiencia?: boolean
    is_premium?: boolean
  }, ExtArgs["result"]["publicacao_projetos"]>


  export type publicacao_projetosSelectScalar = {
    id?: boolean
    id_cliente?: boolean
    nome_projeto?: boolean
    descricao_projeto?: boolean
    orcamento?: boolean
    id_nivel_experiencia?: boolean
    is_premium?: boolean
  }


  export type $publicacao_projetosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "publicacao_projetos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_cliente: number
      nome_projeto: string | null
      descricao_projeto: string | null
      orcamento: number
      id_nivel_experiencia: number
      is_premium: boolean
    }, ExtArgs["result"]["publicacao_projetos"]>
    composites: {}
  }

  type publicacao_projetosGetPayload<S extends boolean | null | undefined | publicacao_projetosDefaultArgs> = $Result.GetResult<Prisma.$publicacao_projetosPayload, S>

  type publicacao_projetosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<publicacao_projetosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Publicacao_projetosCountAggregateInputType | true
    }

  export interface publicacao_projetosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['publicacao_projetos'], meta: { name: 'publicacao_projetos' } }
    /**
     * Find zero or one Publicacao_projetos that matches the filter.
     * @param {publicacao_projetosFindUniqueArgs} args - Arguments to find a Publicacao_projetos
     * @example
     * // Get one Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends publicacao_projetosFindUniqueArgs>(args: SelectSubset<T, publicacao_projetosFindUniqueArgs<ExtArgs>>): Prisma__publicacao_projetosClient<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Publicacao_projetos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {publicacao_projetosFindUniqueOrThrowArgs} args - Arguments to find a Publicacao_projetos
     * @example
     * // Get one Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends publicacao_projetosFindUniqueOrThrowArgs>(args: SelectSubset<T, publicacao_projetosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__publicacao_projetosClient<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Publicacao_projetos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {publicacao_projetosFindFirstArgs} args - Arguments to find a Publicacao_projetos
     * @example
     * // Get one Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends publicacao_projetosFindFirstArgs>(args?: SelectSubset<T, publicacao_projetosFindFirstArgs<ExtArgs>>): Prisma__publicacao_projetosClient<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Publicacao_projetos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {publicacao_projetosFindFirstOrThrowArgs} args - Arguments to find a Publicacao_projetos
     * @example
     * // Get one Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends publicacao_projetosFindFirstOrThrowArgs>(args?: SelectSubset<T, publicacao_projetosFindFirstOrThrowArgs<ExtArgs>>): Prisma__publicacao_projetosClient<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Publicacao_projetos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {publicacao_projetosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.findMany()
     * 
     * // Get first 10 Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const publicacao_projetosWithIdOnly = await prisma.publicacao_projetos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends publicacao_projetosFindManyArgs>(args?: SelectSubset<T, publicacao_projetosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Publicacao_projetos.
     * @param {publicacao_projetosCreateArgs} args - Arguments to create a Publicacao_projetos.
     * @example
     * // Create one Publicacao_projetos
     * const Publicacao_projetos = await prisma.publicacao_projetos.create({
     *   data: {
     *     // ... data to create a Publicacao_projetos
     *   }
     * })
     * 
     */
    create<T extends publicacao_projetosCreateArgs>(args: SelectSubset<T, publicacao_projetosCreateArgs<ExtArgs>>): Prisma__publicacao_projetosClient<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Publicacao_projetos.
     * @param {publicacao_projetosCreateManyArgs} args - Arguments to create many Publicacao_projetos.
     * @example
     * // Create many Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends publicacao_projetosCreateManyArgs>(args?: SelectSubset<T, publicacao_projetosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Publicacao_projetos.
     * @param {publicacao_projetosDeleteArgs} args - Arguments to delete one Publicacao_projetos.
     * @example
     * // Delete one Publicacao_projetos
     * const Publicacao_projetos = await prisma.publicacao_projetos.delete({
     *   where: {
     *     // ... filter to delete one Publicacao_projetos
     *   }
     * })
     * 
     */
    delete<T extends publicacao_projetosDeleteArgs>(args: SelectSubset<T, publicacao_projetosDeleteArgs<ExtArgs>>): Prisma__publicacao_projetosClient<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Publicacao_projetos.
     * @param {publicacao_projetosUpdateArgs} args - Arguments to update one Publicacao_projetos.
     * @example
     * // Update one Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends publicacao_projetosUpdateArgs>(args: SelectSubset<T, publicacao_projetosUpdateArgs<ExtArgs>>): Prisma__publicacao_projetosClient<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Publicacao_projetos.
     * @param {publicacao_projetosDeleteManyArgs} args - Arguments to filter Publicacao_projetos to delete.
     * @example
     * // Delete a few Publicacao_projetos
     * const { count } = await prisma.publicacao_projetos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends publicacao_projetosDeleteManyArgs>(args?: SelectSubset<T, publicacao_projetosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {publicacao_projetosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends publicacao_projetosUpdateManyArgs>(args: SelectSubset<T, publicacao_projetosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Publicacao_projetos.
     * @param {publicacao_projetosUpsertArgs} args - Arguments to update or create a Publicacao_projetos.
     * @example
     * // Update or create a Publicacao_projetos
     * const publicacao_projetos = await prisma.publicacao_projetos.upsert({
     *   create: {
     *     // ... data to create a Publicacao_projetos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Publicacao_projetos we want to update
     *   }
     * })
     */
    upsert<T extends publicacao_projetosUpsertArgs>(args: SelectSubset<T, publicacao_projetosUpsertArgs<ExtArgs>>): Prisma__publicacao_projetosClient<$Result.GetResult<Prisma.$publicacao_projetosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {publicacao_projetosCountArgs} args - Arguments to filter Publicacao_projetos to count.
     * @example
     * // Count the number of Publicacao_projetos
     * const count = await prisma.publicacao_projetos.count({
     *   where: {
     *     // ... the filter for the Publicacao_projetos we want to count
     *   }
     * })
    **/
    count<T extends publicacao_projetosCountArgs>(
      args?: Subset<T, publicacao_projetosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Publicacao_projetosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Publicacao_projetosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Publicacao_projetosAggregateArgs>(args: Subset<T, Publicacao_projetosAggregateArgs>): Prisma.PrismaPromise<GetPublicacao_projetosAggregateType<T>>

    /**
     * Group by Publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {publicacao_projetosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends publicacao_projetosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: publicacao_projetosGroupByArgs['orderBy'] }
        : { orderBy?: publicacao_projetosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, publicacao_projetosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublicacao_projetosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the publicacao_projetos model
   */
  readonly fields: publicacao_projetosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for publicacao_projetos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__publicacao_projetosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the publicacao_projetos model
   */ 
  interface publicacao_projetosFieldRefs {
    readonly id: FieldRef<"publicacao_projetos", 'Int'>
    readonly id_cliente: FieldRef<"publicacao_projetos", 'Int'>
    readonly nome_projeto: FieldRef<"publicacao_projetos", 'String'>
    readonly descricao_projeto: FieldRef<"publicacao_projetos", 'String'>
    readonly orcamento: FieldRef<"publicacao_projetos", 'Float'>
    readonly id_nivel_experiencia: FieldRef<"publicacao_projetos", 'Int'>
    readonly is_premium: FieldRef<"publicacao_projetos", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * publicacao_projetos findUnique
   */
  export type publicacao_projetosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which publicacao_projetos to fetch.
     */
    where: publicacao_projetosWhereUniqueInput
  }

  /**
   * publicacao_projetos findUniqueOrThrow
   */
  export type publicacao_projetosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which publicacao_projetos to fetch.
     */
    where: publicacao_projetosWhereUniqueInput
  }

  /**
   * publicacao_projetos findFirst
   */
  export type publicacao_projetosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which publicacao_projetos to fetch.
     */
    where?: publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of publicacao_projetos to fetch.
     */
    orderBy?: publicacao_projetosOrderByWithRelationInput | publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for publicacao_projetos.
     */
    cursor?: publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of publicacao_projetos.
     */
    distinct?: Publicacao_projetosScalarFieldEnum | Publicacao_projetosScalarFieldEnum[]
  }

  /**
   * publicacao_projetos findFirstOrThrow
   */
  export type publicacao_projetosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which publicacao_projetos to fetch.
     */
    where?: publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of publicacao_projetos to fetch.
     */
    orderBy?: publicacao_projetosOrderByWithRelationInput | publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for publicacao_projetos.
     */
    cursor?: publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of publicacao_projetos.
     */
    distinct?: Publicacao_projetosScalarFieldEnum | Publicacao_projetosScalarFieldEnum[]
  }

  /**
   * publicacao_projetos findMany
   */
  export type publicacao_projetosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which publicacao_projetos to fetch.
     */
    where?: publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of publicacao_projetos to fetch.
     */
    orderBy?: publicacao_projetosOrderByWithRelationInput | publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing publicacao_projetos.
     */
    cursor?: publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` publicacao_projetos.
     */
    skip?: number
    distinct?: Publicacao_projetosScalarFieldEnum | Publicacao_projetosScalarFieldEnum[]
  }

  /**
   * publicacao_projetos create
   */
  export type publicacao_projetosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * The data needed to create a publicacao_projetos.
     */
    data: XOR<publicacao_projetosCreateInput, publicacao_projetosUncheckedCreateInput>
  }

  /**
   * publicacao_projetos createMany
   */
  export type publicacao_projetosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many publicacao_projetos.
     */
    data: publicacao_projetosCreateManyInput | publicacao_projetosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * publicacao_projetos update
   */
  export type publicacao_projetosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * The data needed to update a publicacao_projetos.
     */
    data: XOR<publicacao_projetosUpdateInput, publicacao_projetosUncheckedUpdateInput>
    /**
     * Choose, which publicacao_projetos to update.
     */
    where: publicacao_projetosWhereUniqueInput
  }

  /**
   * publicacao_projetos updateMany
   */
  export type publicacao_projetosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update publicacao_projetos.
     */
    data: XOR<publicacao_projetosUpdateManyMutationInput, publicacao_projetosUncheckedUpdateManyInput>
    /**
     * Filter which publicacao_projetos to update
     */
    where?: publicacao_projetosWhereInput
  }

  /**
   * publicacao_projetos upsert
   */
  export type publicacao_projetosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * The filter to search for the publicacao_projetos to update in case it exists.
     */
    where: publicacao_projetosWhereUniqueInput
    /**
     * In case the publicacao_projetos found by the `where` argument doesn't exist, create a new publicacao_projetos with this data.
     */
    create: XOR<publicacao_projetosCreateInput, publicacao_projetosUncheckedCreateInput>
    /**
     * In case the publicacao_projetos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<publicacao_projetosUpdateInput, publicacao_projetosUncheckedUpdateInput>
  }

  /**
   * publicacao_projetos delete
   */
  export type publicacao_projetosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter which publicacao_projetos to delete.
     */
    where: publicacao_projetosWhereUniqueInput
  }

  /**
   * publicacao_projetos deleteMany
   */
  export type publicacao_projetosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which publicacao_projetos to delete
     */
    where?: publicacao_projetosWhereInput
  }

  /**
   * publicacao_projetos without action
   */
  export type publicacao_projetosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the publicacao_projetos
     */
    select?: publicacao_projetosSelect<ExtArgs> | null
  }


  /**
   * Model categoria_publicacao_projetos
   */

  export type AggregateCategoria_publicacao_projetos = {
    _count: Categoria_publicacao_projetosCountAggregateOutputType | null
    _avg: Categoria_publicacao_projetosAvgAggregateOutputType | null
    _sum: Categoria_publicacao_projetosSumAggregateOutputType | null
    _min: Categoria_publicacao_projetosMinAggregateOutputType | null
    _max: Categoria_publicacao_projetosMaxAggregateOutputType | null
  }

  export type Categoria_publicacao_projetosAvgAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_categoria: number | null
  }

  export type Categoria_publicacao_projetosSumAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_categoria: number | null
  }

  export type Categoria_publicacao_projetosMinAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_categoria: number | null
  }

  export type Categoria_publicacao_projetosMaxAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_categoria: number | null
  }

  export type Categoria_publicacao_projetosCountAggregateOutputType = {
    id: number
    id_projeto: number
    id_categoria: number
    _all: number
  }


  export type Categoria_publicacao_projetosAvgAggregateInputType = {
    id?: true
    id_projeto?: true
    id_categoria?: true
  }

  export type Categoria_publicacao_projetosSumAggregateInputType = {
    id?: true
    id_projeto?: true
    id_categoria?: true
  }

  export type Categoria_publicacao_projetosMinAggregateInputType = {
    id?: true
    id_projeto?: true
    id_categoria?: true
  }

  export type Categoria_publicacao_projetosMaxAggregateInputType = {
    id?: true
    id_projeto?: true
    id_categoria?: true
  }

  export type Categoria_publicacao_projetosCountAggregateInputType = {
    id?: true
    id_projeto?: true
    id_categoria?: true
    _all?: true
  }

  export type Categoria_publicacao_projetosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categoria_publicacao_projetos to aggregate.
     */
    where?: categoria_publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_publicacao_projetos to fetch.
     */
    orderBy?: categoria_publicacao_projetosOrderByWithRelationInput | categoria_publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoria_publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categoria_publicacao_projetos
    **/
    _count?: true | Categoria_publicacao_projetosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Categoria_publicacao_projetosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Categoria_publicacao_projetosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Categoria_publicacao_projetosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Categoria_publicacao_projetosMaxAggregateInputType
  }

  export type GetCategoria_publicacao_projetosAggregateType<T extends Categoria_publicacao_projetosAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria_publicacao_projetos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria_publicacao_projetos[P]>
      : GetScalarType<T[P], AggregateCategoria_publicacao_projetos[P]>
  }




  export type categoria_publicacao_projetosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoria_publicacao_projetosWhereInput
    orderBy?: categoria_publicacao_projetosOrderByWithAggregationInput | categoria_publicacao_projetosOrderByWithAggregationInput[]
    by: Categoria_publicacao_projetosScalarFieldEnum[] | Categoria_publicacao_projetosScalarFieldEnum
    having?: categoria_publicacao_projetosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Categoria_publicacao_projetosCountAggregateInputType | true
    _avg?: Categoria_publicacao_projetosAvgAggregateInputType
    _sum?: Categoria_publicacao_projetosSumAggregateInputType
    _min?: Categoria_publicacao_projetosMinAggregateInputType
    _max?: Categoria_publicacao_projetosMaxAggregateInputType
  }

  export type Categoria_publicacao_projetosGroupByOutputType = {
    id: number
    id_projeto: number
    id_categoria: number
    _count: Categoria_publicacao_projetosCountAggregateOutputType | null
    _avg: Categoria_publicacao_projetosAvgAggregateOutputType | null
    _sum: Categoria_publicacao_projetosSumAggregateOutputType | null
    _min: Categoria_publicacao_projetosMinAggregateOutputType | null
    _max: Categoria_publicacao_projetosMaxAggregateOutputType | null
  }

  type GetCategoria_publicacao_projetosGroupByPayload<T extends categoria_publicacao_projetosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Categoria_publicacao_projetosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Categoria_publicacao_projetosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Categoria_publicacao_projetosGroupByOutputType[P]>
            : GetScalarType<T[P], Categoria_publicacao_projetosGroupByOutputType[P]>
        }
      >
    >


  export type categoria_publicacao_projetosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_projeto?: boolean
    id_categoria?: boolean
  }, ExtArgs["result"]["categoria_publicacao_projetos"]>


  export type categoria_publicacao_projetosSelectScalar = {
    id?: boolean
    id_projeto?: boolean
    id_categoria?: boolean
  }


  export type $categoria_publicacao_projetosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categoria_publicacao_projetos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_projeto: number
      id_categoria: number
    }, ExtArgs["result"]["categoria_publicacao_projetos"]>
    composites: {}
  }

  type categoria_publicacao_projetosGetPayload<S extends boolean | null | undefined | categoria_publicacao_projetosDefaultArgs> = $Result.GetResult<Prisma.$categoria_publicacao_projetosPayload, S>

  type categoria_publicacao_projetosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<categoria_publicacao_projetosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Categoria_publicacao_projetosCountAggregateInputType | true
    }

  export interface categoria_publicacao_projetosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categoria_publicacao_projetos'], meta: { name: 'categoria_publicacao_projetos' } }
    /**
     * Find zero or one Categoria_publicacao_projetos that matches the filter.
     * @param {categoria_publicacao_projetosFindUniqueArgs} args - Arguments to find a Categoria_publicacao_projetos
     * @example
     * // Get one Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoria_publicacao_projetosFindUniqueArgs>(args: SelectSubset<T, categoria_publicacao_projetosFindUniqueArgs<ExtArgs>>): Prisma__categoria_publicacao_projetosClient<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Categoria_publicacao_projetos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {categoria_publicacao_projetosFindUniqueOrThrowArgs} args - Arguments to find a Categoria_publicacao_projetos
     * @example
     * // Get one Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoria_publicacao_projetosFindUniqueOrThrowArgs>(args: SelectSubset<T, categoria_publicacao_projetosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoria_publicacao_projetosClient<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Categoria_publicacao_projetos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_publicacao_projetosFindFirstArgs} args - Arguments to find a Categoria_publicacao_projetos
     * @example
     * // Get one Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoria_publicacao_projetosFindFirstArgs>(args?: SelectSubset<T, categoria_publicacao_projetosFindFirstArgs<ExtArgs>>): Prisma__categoria_publicacao_projetosClient<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Categoria_publicacao_projetos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_publicacao_projetosFindFirstOrThrowArgs} args - Arguments to find a Categoria_publicacao_projetos
     * @example
     * // Get one Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoria_publicacao_projetosFindFirstOrThrowArgs>(args?: SelectSubset<T, categoria_publicacao_projetosFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoria_publicacao_projetosClient<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Categoria_publicacao_projetos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_publicacao_projetosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.findMany()
     * 
     * // Get first 10 Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoria_publicacao_projetosWithIdOnly = await prisma.categoria_publicacao_projetos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends categoria_publicacao_projetosFindManyArgs>(args?: SelectSubset<T, categoria_publicacao_projetosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Categoria_publicacao_projetos.
     * @param {categoria_publicacao_projetosCreateArgs} args - Arguments to create a Categoria_publicacao_projetos.
     * @example
     * // Create one Categoria_publicacao_projetos
     * const Categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.create({
     *   data: {
     *     // ... data to create a Categoria_publicacao_projetos
     *   }
     * })
     * 
     */
    create<T extends categoria_publicacao_projetosCreateArgs>(args: SelectSubset<T, categoria_publicacao_projetosCreateArgs<ExtArgs>>): Prisma__categoria_publicacao_projetosClient<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Categoria_publicacao_projetos.
     * @param {categoria_publicacao_projetosCreateManyArgs} args - Arguments to create many Categoria_publicacao_projetos.
     * @example
     * // Create many Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoria_publicacao_projetosCreateManyArgs>(args?: SelectSubset<T, categoria_publicacao_projetosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categoria_publicacao_projetos.
     * @param {categoria_publicacao_projetosDeleteArgs} args - Arguments to delete one Categoria_publicacao_projetos.
     * @example
     * // Delete one Categoria_publicacao_projetos
     * const Categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.delete({
     *   where: {
     *     // ... filter to delete one Categoria_publicacao_projetos
     *   }
     * })
     * 
     */
    delete<T extends categoria_publicacao_projetosDeleteArgs>(args: SelectSubset<T, categoria_publicacao_projetosDeleteArgs<ExtArgs>>): Prisma__categoria_publicacao_projetosClient<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Categoria_publicacao_projetos.
     * @param {categoria_publicacao_projetosUpdateArgs} args - Arguments to update one Categoria_publicacao_projetos.
     * @example
     * // Update one Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoria_publicacao_projetosUpdateArgs>(args: SelectSubset<T, categoria_publicacao_projetosUpdateArgs<ExtArgs>>): Prisma__categoria_publicacao_projetosClient<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Categoria_publicacao_projetos.
     * @param {categoria_publicacao_projetosDeleteManyArgs} args - Arguments to filter Categoria_publicacao_projetos to delete.
     * @example
     * // Delete a few Categoria_publicacao_projetos
     * const { count } = await prisma.categoria_publicacao_projetos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoria_publicacao_projetosDeleteManyArgs>(args?: SelectSubset<T, categoria_publicacao_projetosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoria_publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_publicacao_projetosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoria_publicacao_projetosUpdateManyArgs>(args: SelectSubset<T, categoria_publicacao_projetosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categoria_publicacao_projetos.
     * @param {categoria_publicacao_projetosUpsertArgs} args - Arguments to update or create a Categoria_publicacao_projetos.
     * @example
     * // Update or create a Categoria_publicacao_projetos
     * const categoria_publicacao_projetos = await prisma.categoria_publicacao_projetos.upsert({
     *   create: {
     *     // ... data to create a Categoria_publicacao_projetos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria_publicacao_projetos we want to update
     *   }
     * })
     */
    upsert<T extends categoria_publicacao_projetosUpsertArgs>(args: SelectSubset<T, categoria_publicacao_projetosUpsertArgs<ExtArgs>>): Prisma__categoria_publicacao_projetosClient<$Result.GetResult<Prisma.$categoria_publicacao_projetosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Categoria_publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_publicacao_projetosCountArgs} args - Arguments to filter Categoria_publicacao_projetos to count.
     * @example
     * // Count the number of Categoria_publicacao_projetos
     * const count = await prisma.categoria_publicacao_projetos.count({
     *   where: {
     *     // ... the filter for the Categoria_publicacao_projetos we want to count
     *   }
     * })
    **/
    count<T extends categoria_publicacao_projetosCountArgs>(
      args?: Subset<T, categoria_publicacao_projetosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Categoria_publicacao_projetosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria_publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_publicacao_projetosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Categoria_publicacao_projetosAggregateArgs>(args: Subset<T, Categoria_publicacao_projetosAggregateArgs>): Prisma.PrismaPromise<GetCategoria_publicacao_projetosAggregateType<T>>

    /**
     * Group by Categoria_publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_publicacao_projetosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoria_publicacao_projetosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoria_publicacao_projetosGroupByArgs['orderBy'] }
        : { orderBy?: categoria_publicacao_projetosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoria_publicacao_projetosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoria_publicacao_projetosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categoria_publicacao_projetos model
   */
  readonly fields: categoria_publicacao_projetosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categoria_publicacao_projetos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoria_publicacao_projetosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the categoria_publicacao_projetos model
   */ 
  interface categoria_publicacao_projetosFieldRefs {
    readonly id: FieldRef<"categoria_publicacao_projetos", 'Int'>
    readonly id_projeto: FieldRef<"categoria_publicacao_projetos", 'Int'>
    readonly id_categoria: FieldRef<"categoria_publicacao_projetos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * categoria_publicacao_projetos findUnique
   */
  export type categoria_publicacao_projetosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which categoria_publicacao_projetos to fetch.
     */
    where: categoria_publicacao_projetosWhereUniqueInput
  }

  /**
   * categoria_publicacao_projetos findUniqueOrThrow
   */
  export type categoria_publicacao_projetosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which categoria_publicacao_projetos to fetch.
     */
    where: categoria_publicacao_projetosWhereUniqueInput
  }

  /**
   * categoria_publicacao_projetos findFirst
   */
  export type categoria_publicacao_projetosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which categoria_publicacao_projetos to fetch.
     */
    where?: categoria_publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_publicacao_projetos to fetch.
     */
    orderBy?: categoria_publicacao_projetosOrderByWithRelationInput | categoria_publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoria_publicacao_projetos.
     */
    cursor?: categoria_publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoria_publicacao_projetos.
     */
    distinct?: Categoria_publicacao_projetosScalarFieldEnum | Categoria_publicacao_projetosScalarFieldEnum[]
  }

  /**
   * categoria_publicacao_projetos findFirstOrThrow
   */
  export type categoria_publicacao_projetosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which categoria_publicacao_projetos to fetch.
     */
    where?: categoria_publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_publicacao_projetos to fetch.
     */
    orderBy?: categoria_publicacao_projetosOrderByWithRelationInput | categoria_publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoria_publicacao_projetos.
     */
    cursor?: categoria_publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoria_publicacao_projetos.
     */
    distinct?: Categoria_publicacao_projetosScalarFieldEnum | Categoria_publicacao_projetosScalarFieldEnum[]
  }

  /**
   * categoria_publicacao_projetos findMany
   */
  export type categoria_publicacao_projetosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which categoria_publicacao_projetos to fetch.
     */
    where?: categoria_publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_publicacao_projetos to fetch.
     */
    orderBy?: categoria_publicacao_projetosOrderByWithRelationInput | categoria_publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categoria_publicacao_projetos.
     */
    cursor?: categoria_publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_publicacao_projetos.
     */
    skip?: number
    distinct?: Categoria_publicacao_projetosScalarFieldEnum | Categoria_publicacao_projetosScalarFieldEnum[]
  }

  /**
   * categoria_publicacao_projetos create
   */
  export type categoria_publicacao_projetosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * The data needed to create a categoria_publicacao_projetos.
     */
    data: XOR<categoria_publicacao_projetosCreateInput, categoria_publicacao_projetosUncheckedCreateInput>
  }

  /**
   * categoria_publicacao_projetos createMany
   */
  export type categoria_publicacao_projetosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categoria_publicacao_projetos.
     */
    data: categoria_publicacao_projetosCreateManyInput | categoria_publicacao_projetosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categoria_publicacao_projetos update
   */
  export type categoria_publicacao_projetosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * The data needed to update a categoria_publicacao_projetos.
     */
    data: XOR<categoria_publicacao_projetosUpdateInput, categoria_publicacao_projetosUncheckedUpdateInput>
    /**
     * Choose, which categoria_publicacao_projetos to update.
     */
    where: categoria_publicacao_projetosWhereUniqueInput
  }

  /**
   * categoria_publicacao_projetos updateMany
   */
  export type categoria_publicacao_projetosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categoria_publicacao_projetos.
     */
    data: XOR<categoria_publicacao_projetosUpdateManyMutationInput, categoria_publicacao_projetosUncheckedUpdateManyInput>
    /**
     * Filter which categoria_publicacao_projetos to update
     */
    where?: categoria_publicacao_projetosWhereInput
  }

  /**
   * categoria_publicacao_projetos upsert
   */
  export type categoria_publicacao_projetosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * The filter to search for the categoria_publicacao_projetos to update in case it exists.
     */
    where: categoria_publicacao_projetosWhereUniqueInput
    /**
     * In case the categoria_publicacao_projetos found by the `where` argument doesn't exist, create a new categoria_publicacao_projetos with this data.
     */
    create: XOR<categoria_publicacao_projetosCreateInput, categoria_publicacao_projetosUncheckedCreateInput>
    /**
     * In case the categoria_publicacao_projetos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoria_publicacao_projetosUpdateInput, categoria_publicacao_projetosUncheckedUpdateInput>
  }

  /**
   * categoria_publicacao_projetos delete
   */
  export type categoria_publicacao_projetosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter which categoria_publicacao_projetos to delete.
     */
    where: categoria_publicacao_projetosWhereUniqueInput
  }

  /**
   * categoria_publicacao_projetos deleteMany
   */
  export type categoria_publicacao_projetosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categoria_publicacao_projetos to delete
     */
    where?: categoria_publicacao_projetosWhereInput
  }

  /**
   * categoria_publicacao_projetos without action
   */
  export type categoria_publicacao_projetosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_publicacao_projetos
     */
    select?: categoria_publicacao_projetosSelect<ExtArgs> | null
  }


  /**
   * Model habilidade_publicacao_projetos
   */

  export type AggregateHabilidade_publicacao_projetos = {
    _count: Habilidade_publicacao_projetosCountAggregateOutputType | null
    _avg: Habilidade_publicacao_projetosAvgAggregateOutputType | null
    _sum: Habilidade_publicacao_projetosSumAggregateOutputType | null
    _min: Habilidade_publicacao_projetosMinAggregateOutputType | null
    _max: Habilidade_publicacao_projetosMaxAggregateOutputType | null
  }

  export type Habilidade_publicacao_projetosAvgAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_habilidade: number | null
  }

  export type Habilidade_publicacao_projetosSumAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_habilidade: number | null
  }

  export type Habilidade_publicacao_projetosMinAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_habilidade: number | null
  }

  export type Habilidade_publicacao_projetosMaxAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_habilidade: number | null
  }

  export type Habilidade_publicacao_projetosCountAggregateOutputType = {
    id: number
    id_projeto: number
    id_habilidade: number
    _all: number
  }


  export type Habilidade_publicacao_projetosAvgAggregateInputType = {
    id?: true
    id_projeto?: true
    id_habilidade?: true
  }

  export type Habilidade_publicacao_projetosSumAggregateInputType = {
    id?: true
    id_projeto?: true
    id_habilidade?: true
  }

  export type Habilidade_publicacao_projetosMinAggregateInputType = {
    id?: true
    id_projeto?: true
    id_habilidade?: true
  }

  export type Habilidade_publicacao_projetosMaxAggregateInputType = {
    id?: true
    id_projeto?: true
    id_habilidade?: true
  }

  export type Habilidade_publicacao_projetosCountAggregateInputType = {
    id?: true
    id_projeto?: true
    id_habilidade?: true
    _all?: true
  }

  export type Habilidade_publicacao_projetosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which habilidade_publicacao_projetos to aggregate.
     */
    where?: habilidade_publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidade_publicacao_projetos to fetch.
     */
    orderBy?: habilidade_publicacao_projetosOrderByWithRelationInput | habilidade_publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: habilidade_publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidade_publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidade_publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned habilidade_publicacao_projetos
    **/
    _count?: true | Habilidade_publicacao_projetosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Habilidade_publicacao_projetosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Habilidade_publicacao_projetosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Habilidade_publicacao_projetosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Habilidade_publicacao_projetosMaxAggregateInputType
  }

  export type GetHabilidade_publicacao_projetosAggregateType<T extends Habilidade_publicacao_projetosAggregateArgs> = {
        [P in keyof T & keyof AggregateHabilidade_publicacao_projetos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHabilidade_publicacao_projetos[P]>
      : GetScalarType<T[P], AggregateHabilidade_publicacao_projetos[P]>
  }




  export type habilidade_publicacao_projetosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: habilidade_publicacao_projetosWhereInput
    orderBy?: habilidade_publicacao_projetosOrderByWithAggregationInput | habilidade_publicacao_projetosOrderByWithAggregationInput[]
    by: Habilidade_publicacao_projetosScalarFieldEnum[] | Habilidade_publicacao_projetosScalarFieldEnum
    having?: habilidade_publicacao_projetosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Habilidade_publicacao_projetosCountAggregateInputType | true
    _avg?: Habilidade_publicacao_projetosAvgAggregateInputType
    _sum?: Habilidade_publicacao_projetosSumAggregateInputType
    _min?: Habilidade_publicacao_projetosMinAggregateInputType
    _max?: Habilidade_publicacao_projetosMaxAggregateInputType
  }

  export type Habilidade_publicacao_projetosGroupByOutputType = {
    id: number
    id_projeto: number
    id_habilidade: number
    _count: Habilidade_publicacao_projetosCountAggregateOutputType | null
    _avg: Habilidade_publicacao_projetosAvgAggregateOutputType | null
    _sum: Habilidade_publicacao_projetosSumAggregateOutputType | null
    _min: Habilidade_publicacao_projetosMinAggregateOutputType | null
    _max: Habilidade_publicacao_projetosMaxAggregateOutputType | null
  }

  type GetHabilidade_publicacao_projetosGroupByPayload<T extends habilidade_publicacao_projetosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Habilidade_publicacao_projetosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Habilidade_publicacao_projetosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Habilidade_publicacao_projetosGroupByOutputType[P]>
            : GetScalarType<T[P], Habilidade_publicacao_projetosGroupByOutputType[P]>
        }
      >
    >


  export type habilidade_publicacao_projetosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_projeto?: boolean
    id_habilidade?: boolean
  }, ExtArgs["result"]["habilidade_publicacao_projetos"]>


  export type habilidade_publicacao_projetosSelectScalar = {
    id?: boolean
    id_projeto?: boolean
    id_habilidade?: boolean
  }


  export type $habilidade_publicacao_projetosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "habilidade_publicacao_projetos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_projeto: number
      id_habilidade: number
    }, ExtArgs["result"]["habilidade_publicacao_projetos"]>
    composites: {}
  }

  type habilidade_publicacao_projetosGetPayload<S extends boolean | null | undefined | habilidade_publicacao_projetosDefaultArgs> = $Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload, S>

  type habilidade_publicacao_projetosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<habilidade_publicacao_projetosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Habilidade_publicacao_projetosCountAggregateInputType | true
    }

  export interface habilidade_publicacao_projetosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['habilidade_publicacao_projetos'], meta: { name: 'habilidade_publicacao_projetos' } }
    /**
     * Find zero or one Habilidade_publicacao_projetos that matches the filter.
     * @param {habilidade_publicacao_projetosFindUniqueArgs} args - Arguments to find a Habilidade_publicacao_projetos
     * @example
     * // Get one Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends habilidade_publicacao_projetosFindUniqueArgs>(args: SelectSubset<T, habilidade_publicacao_projetosFindUniqueArgs<ExtArgs>>): Prisma__habilidade_publicacao_projetosClient<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Habilidade_publicacao_projetos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {habilidade_publicacao_projetosFindUniqueOrThrowArgs} args - Arguments to find a Habilidade_publicacao_projetos
     * @example
     * // Get one Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends habilidade_publicacao_projetosFindUniqueOrThrowArgs>(args: SelectSubset<T, habilidade_publicacao_projetosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__habilidade_publicacao_projetosClient<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Habilidade_publicacao_projetos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidade_publicacao_projetosFindFirstArgs} args - Arguments to find a Habilidade_publicacao_projetos
     * @example
     * // Get one Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends habilidade_publicacao_projetosFindFirstArgs>(args?: SelectSubset<T, habilidade_publicacao_projetosFindFirstArgs<ExtArgs>>): Prisma__habilidade_publicacao_projetosClient<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Habilidade_publicacao_projetos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidade_publicacao_projetosFindFirstOrThrowArgs} args - Arguments to find a Habilidade_publicacao_projetos
     * @example
     * // Get one Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends habilidade_publicacao_projetosFindFirstOrThrowArgs>(args?: SelectSubset<T, habilidade_publicacao_projetosFindFirstOrThrowArgs<ExtArgs>>): Prisma__habilidade_publicacao_projetosClient<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Habilidade_publicacao_projetos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidade_publicacao_projetosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.findMany()
     * 
     * // Get first 10 Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const habilidade_publicacao_projetosWithIdOnly = await prisma.habilidade_publicacao_projetos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends habilidade_publicacao_projetosFindManyArgs>(args?: SelectSubset<T, habilidade_publicacao_projetosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Habilidade_publicacao_projetos.
     * @param {habilidade_publicacao_projetosCreateArgs} args - Arguments to create a Habilidade_publicacao_projetos.
     * @example
     * // Create one Habilidade_publicacao_projetos
     * const Habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.create({
     *   data: {
     *     // ... data to create a Habilidade_publicacao_projetos
     *   }
     * })
     * 
     */
    create<T extends habilidade_publicacao_projetosCreateArgs>(args: SelectSubset<T, habilidade_publicacao_projetosCreateArgs<ExtArgs>>): Prisma__habilidade_publicacao_projetosClient<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Habilidade_publicacao_projetos.
     * @param {habilidade_publicacao_projetosCreateManyArgs} args - Arguments to create many Habilidade_publicacao_projetos.
     * @example
     * // Create many Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends habilidade_publicacao_projetosCreateManyArgs>(args?: SelectSubset<T, habilidade_publicacao_projetosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Habilidade_publicacao_projetos.
     * @param {habilidade_publicacao_projetosDeleteArgs} args - Arguments to delete one Habilidade_publicacao_projetos.
     * @example
     * // Delete one Habilidade_publicacao_projetos
     * const Habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.delete({
     *   where: {
     *     // ... filter to delete one Habilidade_publicacao_projetos
     *   }
     * })
     * 
     */
    delete<T extends habilidade_publicacao_projetosDeleteArgs>(args: SelectSubset<T, habilidade_publicacao_projetosDeleteArgs<ExtArgs>>): Prisma__habilidade_publicacao_projetosClient<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Habilidade_publicacao_projetos.
     * @param {habilidade_publicacao_projetosUpdateArgs} args - Arguments to update one Habilidade_publicacao_projetos.
     * @example
     * // Update one Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends habilidade_publicacao_projetosUpdateArgs>(args: SelectSubset<T, habilidade_publicacao_projetosUpdateArgs<ExtArgs>>): Prisma__habilidade_publicacao_projetosClient<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Habilidade_publicacao_projetos.
     * @param {habilidade_publicacao_projetosDeleteManyArgs} args - Arguments to filter Habilidade_publicacao_projetos to delete.
     * @example
     * // Delete a few Habilidade_publicacao_projetos
     * const { count } = await prisma.habilidade_publicacao_projetos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends habilidade_publicacao_projetosDeleteManyArgs>(args?: SelectSubset<T, habilidade_publicacao_projetosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Habilidade_publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidade_publicacao_projetosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends habilidade_publicacao_projetosUpdateManyArgs>(args: SelectSubset<T, habilidade_publicacao_projetosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Habilidade_publicacao_projetos.
     * @param {habilidade_publicacao_projetosUpsertArgs} args - Arguments to update or create a Habilidade_publicacao_projetos.
     * @example
     * // Update or create a Habilidade_publicacao_projetos
     * const habilidade_publicacao_projetos = await prisma.habilidade_publicacao_projetos.upsert({
     *   create: {
     *     // ... data to create a Habilidade_publicacao_projetos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Habilidade_publicacao_projetos we want to update
     *   }
     * })
     */
    upsert<T extends habilidade_publicacao_projetosUpsertArgs>(args: SelectSubset<T, habilidade_publicacao_projetosUpsertArgs<ExtArgs>>): Prisma__habilidade_publicacao_projetosClient<$Result.GetResult<Prisma.$habilidade_publicacao_projetosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Habilidade_publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidade_publicacao_projetosCountArgs} args - Arguments to filter Habilidade_publicacao_projetos to count.
     * @example
     * // Count the number of Habilidade_publicacao_projetos
     * const count = await prisma.habilidade_publicacao_projetos.count({
     *   where: {
     *     // ... the filter for the Habilidade_publicacao_projetos we want to count
     *   }
     * })
    **/
    count<T extends habilidade_publicacao_projetosCountArgs>(
      args?: Subset<T, habilidade_publicacao_projetosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Habilidade_publicacao_projetosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Habilidade_publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Habilidade_publicacao_projetosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Habilidade_publicacao_projetosAggregateArgs>(args: Subset<T, Habilidade_publicacao_projetosAggregateArgs>): Prisma.PrismaPromise<GetHabilidade_publicacao_projetosAggregateType<T>>

    /**
     * Group by Habilidade_publicacao_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidade_publicacao_projetosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends habilidade_publicacao_projetosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: habilidade_publicacao_projetosGroupByArgs['orderBy'] }
        : { orderBy?: habilidade_publicacao_projetosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, habilidade_publicacao_projetosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHabilidade_publicacao_projetosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the habilidade_publicacao_projetos model
   */
  readonly fields: habilidade_publicacao_projetosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for habilidade_publicacao_projetos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__habilidade_publicacao_projetosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the habilidade_publicacao_projetos model
   */ 
  interface habilidade_publicacao_projetosFieldRefs {
    readonly id: FieldRef<"habilidade_publicacao_projetos", 'Int'>
    readonly id_projeto: FieldRef<"habilidade_publicacao_projetos", 'Int'>
    readonly id_habilidade: FieldRef<"habilidade_publicacao_projetos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * habilidade_publicacao_projetos findUnique
   */
  export type habilidade_publicacao_projetosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which habilidade_publicacao_projetos to fetch.
     */
    where: habilidade_publicacao_projetosWhereUniqueInput
  }

  /**
   * habilidade_publicacao_projetos findUniqueOrThrow
   */
  export type habilidade_publicacao_projetosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which habilidade_publicacao_projetos to fetch.
     */
    where: habilidade_publicacao_projetosWhereUniqueInput
  }

  /**
   * habilidade_publicacao_projetos findFirst
   */
  export type habilidade_publicacao_projetosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which habilidade_publicacao_projetos to fetch.
     */
    where?: habilidade_publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidade_publicacao_projetos to fetch.
     */
    orderBy?: habilidade_publicacao_projetosOrderByWithRelationInput | habilidade_publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for habilidade_publicacao_projetos.
     */
    cursor?: habilidade_publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidade_publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidade_publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of habilidade_publicacao_projetos.
     */
    distinct?: Habilidade_publicacao_projetosScalarFieldEnum | Habilidade_publicacao_projetosScalarFieldEnum[]
  }

  /**
   * habilidade_publicacao_projetos findFirstOrThrow
   */
  export type habilidade_publicacao_projetosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which habilidade_publicacao_projetos to fetch.
     */
    where?: habilidade_publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidade_publicacao_projetos to fetch.
     */
    orderBy?: habilidade_publicacao_projetosOrderByWithRelationInput | habilidade_publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for habilidade_publicacao_projetos.
     */
    cursor?: habilidade_publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidade_publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidade_publicacao_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of habilidade_publicacao_projetos.
     */
    distinct?: Habilidade_publicacao_projetosScalarFieldEnum | Habilidade_publicacao_projetosScalarFieldEnum[]
  }

  /**
   * habilidade_publicacao_projetos findMany
   */
  export type habilidade_publicacao_projetosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter, which habilidade_publicacao_projetos to fetch.
     */
    where?: habilidade_publicacao_projetosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidade_publicacao_projetos to fetch.
     */
    orderBy?: habilidade_publicacao_projetosOrderByWithRelationInput | habilidade_publicacao_projetosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing habilidade_publicacao_projetos.
     */
    cursor?: habilidade_publicacao_projetosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidade_publicacao_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidade_publicacao_projetos.
     */
    skip?: number
    distinct?: Habilidade_publicacao_projetosScalarFieldEnum | Habilidade_publicacao_projetosScalarFieldEnum[]
  }

  /**
   * habilidade_publicacao_projetos create
   */
  export type habilidade_publicacao_projetosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * The data needed to create a habilidade_publicacao_projetos.
     */
    data: XOR<habilidade_publicacao_projetosCreateInput, habilidade_publicacao_projetosUncheckedCreateInput>
  }

  /**
   * habilidade_publicacao_projetos createMany
   */
  export type habilidade_publicacao_projetosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many habilidade_publicacao_projetos.
     */
    data: habilidade_publicacao_projetosCreateManyInput | habilidade_publicacao_projetosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * habilidade_publicacao_projetos update
   */
  export type habilidade_publicacao_projetosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * The data needed to update a habilidade_publicacao_projetos.
     */
    data: XOR<habilidade_publicacao_projetosUpdateInput, habilidade_publicacao_projetosUncheckedUpdateInput>
    /**
     * Choose, which habilidade_publicacao_projetos to update.
     */
    where: habilidade_publicacao_projetosWhereUniqueInput
  }

  /**
   * habilidade_publicacao_projetos updateMany
   */
  export type habilidade_publicacao_projetosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update habilidade_publicacao_projetos.
     */
    data: XOR<habilidade_publicacao_projetosUpdateManyMutationInput, habilidade_publicacao_projetosUncheckedUpdateManyInput>
    /**
     * Filter which habilidade_publicacao_projetos to update
     */
    where?: habilidade_publicacao_projetosWhereInput
  }

  /**
   * habilidade_publicacao_projetos upsert
   */
  export type habilidade_publicacao_projetosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * The filter to search for the habilidade_publicacao_projetos to update in case it exists.
     */
    where: habilidade_publicacao_projetosWhereUniqueInput
    /**
     * In case the habilidade_publicacao_projetos found by the `where` argument doesn't exist, create a new habilidade_publicacao_projetos with this data.
     */
    create: XOR<habilidade_publicacao_projetosCreateInput, habilidade_publicacao_projetosUncheckedCreateInput>
    /**
     * In case the habilidade_publicacao_projetos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<habilidade_publicacao_projetosUpdateInput, habilidade_publicacao_projetosUncheckedUpdateInput>
  }

  /**
   * habilidade_publicacao_projetos delete
   */
  export type habilidade_publicacao_projetosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
    /**
     * Filter which habilidade_publicacao_projetos to delete.
     */
    where: habilidade_publicacao_projetosWhereUniqueInput
  }

  /**
   * habilidade_publicacao_projetos deleteMany
   */
  export type habilidade_publicacao_projetosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which habilidade_publicacao_projetos to delete
     */
    where?: habilidade_publicacao_projetosWhereInput
  }

  /**
   * habilidade_publicacao_projetos without action
   */
  export type habilidade_publicacao_projetosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidade_publicacao_projetos
     */
    select?: habilidade_publicacao_projetosSelect<ExtArgs> | null
  }


  /**
   * Model portfolio_freelancer
   */

  export type AggregatePortfolio_freelancer = {
    _count: Portfolio_freelancerCountAggregateOutputType | null
    _avg: Portfolio_freelancerAvgAggregateOutputType | null
    _sum: Portfolio_freelancerSumAggregateOutputType | null
    _min: Portfolio_freelancerMinAggregateOutputType | null
    _max: Portfolio_freelancerMaxAggregateOutputType | null
  }

  export type Portfolio_freelancerAvgAggregateOutputType = {
    id: number | null
    id_portfolio: number | null
    id_freelancer: number | null
  }

  export type Portfolio_freelancerSumAggregateOutputType = {
    id: number | null
    id_portfolio: number | null
    id_freelancer: number | null
  }

  export type Portfolio_freelancerMinAggregateOutputType = {
    id: number | null
    id_portfolio: number | null
    id_freelancer: number | null
  }

  export type Portfolio_freelancerMaxAggregateOutputType = {
    id: number | null
    id_portfolio: number | null
    id_freelancer: number | null
  }

  export type Portfolio_freelancerCountAggregateOutputType = {
    id: number
    id_portfolio: number
    id_freelancer: number
    _all: number
  }


  export type Portfolio_freelancerAvgAggregateInputType = {
    id?: true
    id_portfolio?: true
    id_freelancer?: true
  }

  export type Portfolio_freelancerSumAggregateInputType = {
    id?: true
    id_portfolio?: true
    id_freelancer?: true
  }

  export type Portfolio_freelancerMinAggregateInputType = {
    id?: true
    id_portfolio?: true
    id_freelancer?: true
  }

  export type Portfolio_freelancerMaxAggregateInputType = {
    id?: true
    id_portfolio?: true
    id_freelancer?: true
  }

  export type Portfolio_freelancerCountAggregateInputType = {
    id?: true
    id_portfolio?: true
    id_freelancer?: true
    _all?: true
  }

  export type Portfolio_freelancerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which portfolio_freelancer to aggregate.
     */
    where?: portfolio_freelancerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of portfolio_freelancers to fetch.
     */
    orderBy?: portfolio_freelancerOrderByWithRelationInput | portfolio_freelancerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: portfolio_freelancerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` portfolio_freelancers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` portfolio_freelancers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned portfolio_freelancers
    **/
    _count?: true | Portfolio_freelancerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Portfolio_freelancerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Portfolio_freelancerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Portfolio_freelancerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Portfolio_freelancerMaxAggregateInputType
  }

  export type GetPortfolio_freelancerAggregateType<T extends Portfolio_freelancerAggregateArgs> = {
        [P in keyof T & keyof AggregatePortfolio_freelancer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePortfolio_freelancer[P]>
      : GetScalarType<T[P], AggregatePortfolio_freelancer[P]>
  }




  export type portfolio_freelancerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: portfolio_freelancerWhereInput
    orderBy?: portfolio_freelancerOrderByWithAggregationInput | portfolio_freelancerOrderByWithAggregationInput[]
    by: Portfolio_freelancerScalarFieldEnum[] | Portfolio_freelancerScalarFieldEnum
    having?: portfolio_freelancerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Portfolio_freelancerCountAggregateInputType | true
    _avg?: Portfolio_freelancerAvgAggregateInputType
    _sum?: Portfolio_freelancerSumAggregateInputType
    _min?: Portfolio_freelancerMinAggregateInputType
    _max?: Portfolio_freelancerMaxAggregateInputType
  }

  export type Portfolio_freelancerGroupByOutputType = {
    id: number
    id_portfolio: number
    id_freelancer: number
    _count: Portfolio_freelancerCountAggregateOutputType | null
    _avg: Portfolio_freelancerAvgAggregateOutputType | null
    _sum: Portfolio_freelancerSumAggregateOutputType | null
    _min: Portfolio_freelancerMinAggregateOutputType | null
    _max: Portfolio_freelancerMaxAggregateOutputType | null
  }

  type GetPortfolio_freelancerGroupByPayload<T extends portfolio_freelancerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Portfolio_freelancerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Portfolio_freelancerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Portfolio_freelancerGroupByOutputType[P]>
            : GetScalarType<T[P], Portfolio_freelancerGroupByOutputType[P]>
        }
      >
    >


  export type portfolio_freelancerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_portfolio?: boolean
    id_freelancer?: boolean
  }, ExtArgs["result"]["portfolio_freelancer"]>


  export type portfolio_freelancerSelectScalar = {
    id?: boolean
    id_portfolio?: boolean
    id_freelancer?: boolean
  }


  export type $portfolio_freelancerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "portfolio_freelancer"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_portfolio: number
      id_freelancer: number
    }, ExtArgs["result"]["portfolio_freelancer"]>
    composites: {}
  }

  type portfolio_freelancerGetPayload<S extends boolean | null | undefined | portfolio_freelancerDefaultArgs> = $Result.GetResult<Prisma.$portfolio_freelancerPayload, S>

  type portfolio_freelancerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<portfolio_freelancerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Portfolio_freelancerCountAggregateInputType | true
    }

  export interface portfolio_freelancerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['portfolio_freelancer'], meta: { name: 'portfolio_freelancer' } }
    /**
     * Find zero or one Portfolio_freelancer that matches the filter.
     * @param {portfolio_freelancerFindUniqueArgs} args - Arguments to find a Portfolio_freelancer
     * @example
     * // Get one Portfolio_freelancer
     * const portfolio_freelancer = await prisma.portfolio_freelancer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends portfolio_freelancerFindUniqueArgs>(args: SelectSubset<T, portfolio_freelancerFindUniqueArgs<ExtArgs>>): Prisma__portfolio_freelancerClient<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Portfolio_freelancer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {portfolio_freelancerFindUniqueOrThrowArgs} args - Arguments to find a Portfolio_freelancer
     * @example
     * // Get one Portfolio_freelancer
     * const portfolio_freelancer = await prisma.portfolio_freelancer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends portfolio_freelancerFindUniqueOrThrowArgs>(args: SelectSubset<T, portfolio_freelancerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__portfolio_freelancerClient<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Portfolio_freelancer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolio_freelancerFindFirstArgs} args - Arguments to find a Portfolio_freelancer
     * @example
     * // Get one Portfolio_freelancer
     * const portfolio_freelancer = await prisma.portfolio_freelancer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends portfolio_freelancerFindFirstArgs>(args?: SelectSubset<T, portfolio_freelancerFindFirstArgs<ExtArgs>>): Prisma__portfolio_freelancerClient<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Portfolio_freelancer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolio_freelancerFindFirstOrThrowArgs} args - Arguments to find a Portfolio_freelancer
     * @example
     * // Get one Portfolio_freelancer
     * const portfolio_freelancer = await prisma.portfolio_freelancer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends portfolio_freelancerFindFirstOrThrowArgs>(args?: SelectSubset<T, portfolio_freelancerFindFirstOrThrowArgs<ExtArgs>>): Prisma__portfolio_freelancerClient<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Portfolio_freelancers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolio_freelancerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Portfolio_freelancers
     * const portfolio_freelancers = await prisma.portfolio_freelancer.findMany()
     * 
     * // Get first 10 Portfolio_freelancers
     * const portfolio_freelancers = await prisma.portfolio_freelancer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const portfolio_freelancerWithIdOnly = await prisma.portfolio_freelancer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends portfolio_freelancerFindManyArgs>(args?: SelectSubset<T, portfolio_freelancerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Portfolio_freelancer.
     * @param {portfolio_freelancerCreateArgs} args - Arguments to create a Portfolio_freelancer.
     * @example
     * // Create one Portfolio_freelancer
     * const Portfolio_freelancer = await prisma.portfolio_freelancer.create({
     *   data: {
     *     // ... data to create a Portfolio_freelancer
     *   }
     * })
     * 
     */
    create<T extends portfolio_freelancerCreateArgs>(args: SelectSubset<T, portfolio_freelancerCreateArgs<ExtArgs>>): Prisma__portfolio_freelancerClient<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Portfolio_freelancers.
     * @param {portfolio_freelancerCreateManyArgs} args - Arguments to create many Portfolio_freelancers.
     * @example
     * // Create many Portfolio_freelancers
     * const portfolio_freelancer = await prisma.portfolio_freelancer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends portfolio_freelancerCreateManyArgs>(args?: SelectSubset<T, portfolio_freelancerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Portfolio_freelancer.
     * @param {portfolio_freelancerDeleteArgs} args - Arguments to delete one Portfolio_freelancer.
     * @example
     * // Delete one Portfolio_freelancer
     * const Portfolio_freelancer = await prisma.portfolio_freelancer.delete({
     *   where: {
     *     // ... filter to delete one Portfolio_freelancer
     *   }
     * })
     * 
     */
    delete<T extends portfolio_freelancerDeleteArgs>(args: SelectSubset<T, portfolio_freelancerDeleteArgs<ExtArgs>>): Prisma__portfolio_freelancerClient<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Portfolio_freelancer.
     * @param {portfolio_freelancerUpdateArgs} args - Arguments to update one Portfolio_freelancer.
     * @example
     * // Update one Portfolio_freelancer
     * const portfolio_freelancer = await prisma.portfolio_freelancer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends portfolio_freelancerUpdateArgs>(args: SelectSubset<T, portfolio_freelancerUpdateArgs<ExtArgs>>): Prisma__portfolio_freelancerClient<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Portfolio_freelancers.
     * @param {portfolio_freelancerDeleteManyArgs} args - Arguments to filter Portfolio_freelancers to delete.
     * @example
     * // Delete a few Portfolio_freelancers
     * const { count } = await prisma.portfolio_freelancer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends portfolio_freelancerDeleteManyArgs>(args?: SelectSubset<T, portfolio_freelancerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Portfolio_freelancers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolio_freelancerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Portfolio_freelancers
     * const portfolio_freelancer = await prisma.portfolio_freelancer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends portfolio_freelancerUpdateManyArgs>(args: SelectSubset<T, portfolio_freelancerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Portfolio_freelancer.
     * @param {portfolio_freelancerUpsertArgs} args - Arguments to update or create a Portfolio_freelancer.
     * @example
     * // Update or create a Portfolio_freelancer
     * const portfolio_freelancer = await prisma.portfolio_freelancer.upsert({
     *   create: {
     *     // ... data to create a Portfolio_freelancer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Portfolio_freelancer we want to update
     *   }
     * })
     */
    upsert<T extends portfolio_freelancerUpsertArgs>(args: SelectSubset<T, portfolio_freelancerUpsertArgs<ExtArgs>>): Prisma__portfolio_freelancerClient<$Result.GetResult<Prisma.$portfolio_freelancerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Portfolio_freelancers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolio_freelancerCountArgs} args - Arguments to filter Portfolio_freelancers to count.
     * @example
     * // Count the number of Portfolio_freelancers
     * const count = await prisma.portfolio_freelancer.count({
     *   where: {
     *     // ... the filter for the Portfolio_freelancers we want to count
     *   }
     * })
    **/
    count<T extends portfolio_freelancerCountArgs>(
      args?: Subset<T, portfolio_freelancerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Portfolio_freelancerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Portfolio_freelancer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Portfolio_freelancerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Portfolio_freelancerAggregateArgs>(args: Subset<T, Portfolio_freelancerAggregateArgs>): Prisma.PrismaPromise<GetPortfolio_freelancerAggregateType<T>>

    /**
     * Group by Portfolio_freelancer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portfolio_freelancerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends portfolio_freelancerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: portfolio_freelancerGroupByArgs['orderBy'] }
        : { orderBy?: portfolio_freelancerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, portfolio_freelancerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPortfolio_freelancerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the portfolio_freelancer model
   */
  readonly fields: portfolio_freelancerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for portfolio_freelancer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__portfolio_freelancerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the portfolio_freelancer model
   */ 
  interface portfolio_freelancerFieldRefs {
    readonly id: FieldRef<"portfolio_freelancer", 'Int'>
    readonly id_portfolio: FieldRef<"portfolio_freelancer", 'Int'>
    readonly id_freelancer: FieldRef<"portfolio_freelancer", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * portfolio_freelancer findUnique
   */
  export type portfolio_freelancerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which portfolio_freelancer to fetch.
     */
    where: portfolio_freelancerWhereUniqueInput
  }

  /**
   * portfolio_freelancer findUniqueOrThrow
   */
  export type portfolio_freelancerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which portfolio_freelancer to fetch.
     */
    where: portfolio_freelancerWhereUniqueInput
  }

  /**
   * portfolio_freelancer findFirst
   */
  export type portfolio_freelancerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which portfolio_freelancer to fetch.
     */
    where?: portfolio_freelancerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of portfolio_freelancers to fetch.
     */
    orderBy?: portfolio_freelancerOrderByWithRelationInput | portfolio_freelancerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for portfolio_freelancers.
     */
    cursor?: portfolio_freelancerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` portfolio_freelancers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` portfolio_freelancers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of portfolio_freelancers.
     */
    distinct?: Portfolio_freelancerScalarFieldEnum | Portfolio_freelancerScalarFieldEnum[]
  }

  /**
   * portfolio_freelancer findFirstOrThrow
   */
  export type portfolio_freelancerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which portfolio_freelancer to fetch.
     */
    where?: portfolio_freelancerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of portfolio_freelancers to fetch.
     */
    orderBy?: portfolio_freelancerOrderByWithRelationInput | portfolio_freelancerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for portfolio_freelancers.
     */
    cursor?: portfolio_freelancerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` portfolio_freelancers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` portfolio_freelancers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of portfolio_freelancers.
     */
    distinct?: Portfolio_freelancerScalarFieldEnum | Portfolio_freelancerScalarFieldEnum[]
  }

  /**
   * portfolio_freelancer findMany
   */
  export type portfolio_freelancerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * Filter, which portfolio_freelancers to fetch.
     */
    where?: portfolio_freelancerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of portfolio_freelancers to fetch.
     */
    orderBy?: portfolio_freelancerOrderByWithRelationInput | portfolio_freelancerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing portfolio_freelancers.
     */
    cursor?: portfolio_freelancerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` portfolio_freelancers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` portfolio_freelancers.
     */
    skip?: number
    distinct?: Portfolio_freelancerScalarFieldEnum | Portfolio_freelancerScalarFieldEnum[]
  }

  /**
   * portfolio_freelancer create
   */
  export type portfolio_freelancerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * The data needed to create a portfolio_freelancer.
     */
    data: XOR<portfolio_freelancerCreateInput, portfolio_freelancerUncheckedCreateInput>
  }

  /**
   * portfolio_freelancer createMany
   */
  export type portfolio_freelancerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many portfolio_freelancers.
     */
    data: portfolio_freelancerCreateManyInput | portfolio_freelancerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * portfolio_freelancer update
   */
  export type portfolio_freelancerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * The data needed to update a portfolio_freelancer.
     */
    data: XOR<portfolio_freelancerUpdateInput, portfolio_freelancerUncheckedUpdateInput>
    /**
     * Choose, which portfolio_freelancer to update.
     */
    where: portfolio_freelancerWhereUniqueInput
  }

  /**
   * portfolio_freelancer updateMany
   */
  export type portfolio_freelancerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update portfolio_freelancers.
     */
    data: XOR<portfolio_freelancerUpdateManyMutationInput, portfolio_freelancerUncheckedUpdateManyInput>
    /**
     * Filter which portfolio_freelancers to update
     */
    where?: portfolio_freelancerWhereInput
  }

  /**
   * portfolio_freelancer upsert
   */
  export type portfolio_freelancerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * The filter to search for the portfolio_freelancer to update in case it exists.
     */
    where: portfolio_freelancerWhereUniqueInput
    /**
     * In case the portfolio_freelancer found by the `where` argument doesn't exist, create a new portfolio_freelancer with this data.
     */
    create: XOR<portfolio_freelancerCreateInput, portfolio_freelancerUncheckedCreateInput>
    /**
     * In case the portfolio_freelancer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<portfolio_freelancerUpdateInput, portfolio_freelancerUncheckedUpdateInput>
  }

  /**
   * portfolio_freelancer delete
   */
  export type portfolio_freelancerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
    /**
     * Filter which portfolio_freelancer to delete.
     */
    where: portfolio_freelancerWhereUniqueInput
  }

  /**
   * portfolio_freelancer deleteMany
   */
  export type portfolio_freelancerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which portfolio_freelancers to delete
     */
    where?: portfolio_freelancerWhereInput
  }

  /**
   * portfolio_freelancer without action
   */
  export type portfolio_freelancerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the portfolio_freelancer
     */
    select?: portfolio_freelancerSelect<ExtArgs> | null
  }


  /**
   * Model avaliacao
   */

  export type AggregateAvaliacao = {
    _count: AvaliacaoCountAggregateOutputType | null
    _avg: AvaliacaoAvgAggregateOutputType | null
    _sum: AvaliacaoSumAggregateOutputType | null
    _min: AvaliacaoMinAggregateOutputType | null
    _max: AvaliacaoMaxAggregateOutputType | null
  }

  export type AvaliacaoAvgAggregateOutputType = {
    id: number | null
    estrelas: number | null
  }

  export type AvaliacaoSumAggregateOutputType = {
    id: number | null
    estrelas: number | null
  }

  export type AvaliacaoMinAggregateOutputType = {
    id: number | null
    estrelas: number | null
    comentario: string | null
  }

  export type AvaliacaoMaxAggregateOutputType = {
    id: number | null
    estrelas: number | null
    comentario: string | null
  }

  export type AvaliacaoCountAggregateOutputType = {
    id: number
    estrelas: number
    comentario: number
    _all: number
  }


  export type AvaliacaoAvgAggregateInputType = {
    id?: true
    estrelas?: true
  }

  export type AvaliacaoSumAggregateInputType = {
    id?: true
    estrelas?: true
  }

  export type AvaliacaoMinAggregateInputType = {
    id?: true
    estrelas?: true
    comentario?: true
  }

  export type AvaliacaoMaxAggregateInputType = {
    id?: true
    estrelas?: true
    comentario?: true
  }

  export type AvaliacaoCountAggregateInputType = {
    id?: true
    estrelas?: true
    comentario?: true
    _all?: true
  }

  export type AvaliacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which avaliacao to aggregate.
     */
    where?: avaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of avaliacaos to fetch.
     */
    orderBy?: avaliacaoOrderByWithRelationInput | avaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: avaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned avaliacaos
    **/
    _count?: true | AvaliacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AvaliacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AvaliacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvaliacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvaliacaoMaxAggregateInputType
  }

  export type GetAvaliacaoAggregateType<T extends AvaliacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliacao[P]>
      : GetScalarType<T[P], AggregateAvaliacao[P]>
  }




  export type avaliacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: avaliacaoWhereInput
    orderBy?: avaliacaoOrderByWithAggregationInput | avaliacaoOrderByWithAggregationInput[]
    by: AvaliacaoScalarFieldEnum[] | AvaliacaoScalarFieldEnum
    having?: avaliacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvaliacaoCountAggregateInputType | true
    _avg?: AvaliacaoAvgAggregateInputType
    _sum?: AvaliacaoSumAggregateInputType
    _min?: AvaliacaoMinAggregateInputType
    _max?: AvaliacaoMaxAggregateInputType
  }

  export type AvaliacaoGroupByOutputType = {
    id: number
    estrelas: number
    comentario: string
    _count: AvaliacaoCountAggregateOutputType | null
    _avg: AvaliacaoAvgAggregateOutputType | null
    _sum: AvaliacaoSumAggregateOutputType | null
    _min: AvaliacaoMinAggregateOutputType | null
    _max: AvaliacaoMaxAggregateOutputType | null
  }

  type GetAvaliacaoGroupByPayload<T extends avaliacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvaliacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvaliacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvaliacaoGroupByOutputType[P]>
            : GetScalarType<T[P], AvaliacaoGroupByOutputType[P]>
        }
      >
    >


  export type avaliacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estrelas?: boolean
    comentario?: boolean
  }, ExtArgs["result"]["avaliacao"]>


  export type avaliacaoSelectScalar = {
    id?: boolean
    estrelas?: boolean
    comentario?: boolean
  }


  export type $avaliacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "avaliacao"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      estrelas: number
      comentario: string
    }, ExtArgs["result"]["avaliacao"]>
    composites: {}
  }

  type avaliacaoGetPayload<S extends boolean | null | undefined | avaliacaoDefaultArgs> = $Result.GetResult<Prisma.$avaliacaoPayload, S>

  type avaliacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<avaliacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AvaliacaoCountAggregateInputType | true
    }

  export interface avaliacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['avaliacao'], meta: { name: 'avaliacao' } }
    /**
     * Find zero or one Avaliacao that matches the filter.
     * @param {avaliacaoFindUniqueArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends avaliacaoFindUniqueArgs>(args: SelectSubset<T, avaliacaoFindUniqueArgs<ExtArgs>>): Prisma__avaliacaoClient<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Avaliacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {avaliacaoFindUniqueOrThrowArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends avaliacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, avaliacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__avaliacaoClient<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Avaliacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacaoFindFirstArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends avaliacaoFindFirstArgs>(args?: SelectSubset<T, avaliacaoFindFirstArgs<ExtArgs>>): Prisma__avaliacaoClient<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Avaliacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacaoFindFirstOrThrowArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends avaliacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, avaliacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__avaliacaoClient<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Avaliacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Avaliacaos
     * const avaliacaos = await prisma.avaliacao.findMany()
     * 
     * // Get first 10 Avaliacaos
     * const avaliacaos = await prisma.avaliacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avaliacaoWithIdOnly = await prisma.avaliacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends avaliacaoFindManyArgs>(args?: SelectSubset<T, avaliacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Avaliacao.
     * @param {avaliacaoCreateArgs} args - Arguments to create a Avaliacao.
     * @example
     * // Create one Avaliacao
     * const Avaliacao = await prisma.avaliacao.create({
     *   data: {
     *     // ... data to create a Avaliacao
     *   }
     * })
     * 
     */
    create<T extends avaliacaoCreateArgs>(args: SelectSubset<T, avaliacaoCreateArgs<ExtArgs>>): Prisma__avaliacaoClient<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Avaliacaos.
     * @param {avaliacaoCreateManyArgs} args - Arguments to create many Avaliacaos.
     * @example
     * // Create many Avaliacaos
     * const avaliacao = await prisma.avaliacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends avaliacaoCreateManyArgs>(args?: SelectSubset<T, avaliacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Avaliacao.
     * @param {avaliacaoDeleteArgs} args - Arguments to delete one Avaliacao.
     * @example
     * // Delete one Avaliacao
     * const Avaliacao = await prisma.avaliacao.delete({
     *   where: {
     *     // ... filter to delete one Avaliacao
     *   }
     * })
     * 
     */
    delete<T extends avaliacaoDeleteArgs>(args: SelectSubset<T, avaliacaoDeleteArgs<ExtArgs>>): Prisma__avaliacaoClient<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Avaliacao.
     * @param {avaliacaoUpdateArgs} args - Arguments to update one Avaliacao.
     * @example
     * // Update one Avaliacao
     * const avaliacao = await prisma.avaliacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends avaliacaoUpdateArgs>(args: SelectSubset<T, avaliacaoUpdateArgs<ExtArgs>>): Prisma__avaliacaoClient<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Avaliacaos.
     * @param {avaliacaoDeleteManyArgs} args - Arguments to filter Avaliacaos to delete.
     * @example
     * // Delete a few Avaliacaos
     * const { count } = await prisma.avaliacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends avaliacaoDeleteManyArgs>(args?: SelectSubset<T, avaliacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Avaliacaos
     * const avaliacao = await prisma.avaliacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends avaliacaoUpdateManyArgs>(args: SelectSubset<T, avaliacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Avaliacao.
     * @param {avaliacaoUpsertArgs} args - Arguments to update or create a Avaliacao.
     * @example
     * // Update or create a Avaliacao
     * const avaliacao = await prisma.avaliacao.upsert({
     *   create: {
     *     // ... data to create a Avaliacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Avaliacao we want to update
     *   }
     * })
     */
    upsert<T extends avaliacaoUpsertArgs>(args: SelectSubset<T, avaliacaoUpsertArgs<ExtArgs>>): Prisma__avaliacaoClient<$Result.GetResult<Prisma.$avaliacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Avaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacaoCountArgs} args - Arguments to filter Avaliacaos to count.
     * @example
     * // Count the number of Avaliacaos
     * const count = await prisma.avaliacao.count({
     *   where: {
     *     // ... the filter for the Avaliacaos we want to count
     *   }
     * })
    **/
    count<T extends avaliacaoCountArgs>(
      args?: Subset<T, avaliacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvaliacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Avaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvaliacaoAggregateArgs>(args: Subset<T, AvaliacaoAggregateArgs>): Prisma.PrismaPromise<GetAvaliacaoAggregateType<T>>

    /**
     * Group by Avaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends avaliacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: avaliacaoGroupByArgs['orderBy'] }
        : { orderBy?: avaliacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, avaliacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the avaliacao model
   */
  readonly fields: avaliacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for avaliacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__avaliacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the avaliacao model
   */ 
  interface avaliacaoFieldRefs {
    readonly id: FieldRef<"avaliacao", 'Int'>
    readonly estrelas: FieldRef<"avaliacao", 'Int'>
    readonly comentario: FieldRef<"avaliacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * avaliacao findUnique
   */
  export type avaliacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao to fetch.
     */
    where: avaliacaoWhereUniqueInput
  }

  /**
   * avaliacao findUniqueOrThrow
   */
  export type avaliacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao to fetch.
     */
    where: avaliacaoWhereUniqueInput
  }

  /**
   * avaliacao findFirst
   */
  export type avaliacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao to fetch.
     */
    where?: avaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of avaliacaos to fetch.
     */
    orderBy?: avaliacaoOrderByWithRelationInput | avaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for avaliacaos.
     */
    cursor?: avaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of avaliacaos.
     */
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * avaliacao findFirstOrThrow
   */
  export type avaliacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao to fetch.
     */
    where?: avaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of avaliacaos to fetch.
     */
    orderBy?: avaliacaoOrderByWithRelationInput | avaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for avaliacaos.
     */
    cursor?: avaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of avaliacaos.
     */
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * avaliacao findMany
   */
  export type avaliacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * Filter, which avaliacaos to fetch.
     */
    where?: avaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of avaliacaos to fetch.
     */
    orderBy?: avaliacaoOrderByWithRelationInput | avaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing avaliacaos.
     */
    cursor?: avaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` avaliacaos.
     */
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * avaliacao create
   */
  export type avaliacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * The data needed to create a avaliacao.
     */
    data: XOR<avaliacaoCreateInput, avaliacaoUncheckedCreateInput>
  }

  /**
   * avaliacao createMany
   */
  export type avaliacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many avaliacaos.
     */
    data: avaliacaoCreateManyInput | avaliacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * avaliacao update
   */
  export type avaliacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * The data needed to update a avaliacao.
     */
    data: XOR<avaliacaoUpdateInput, avaliacaoUncheckedUpdateInput>
    /**
     * Choose, which avaliacao to update.
     */
    where: avaliacaoWhereUniqueInput
  }

  /**
   * avaliacao updateMany
   */
  export type avaliacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update avaliacaos.
     */
    data: XOR<avaliacaoUpdateManyMutationInput, avaliacaoUncheckedUpdateManyInput>
    /**
     * Filter which avaliacaos to update
     */
    where?: avaliacaoWhereInput
  }

  /**
   * avaliacao upsert
   */
  export type avaliacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * The filter to search for the avaliacao to update in case it exists.
     */
    where: avaliacaoWhereUniqueInput
    /**
     * In case the avaliacao found by the `where` argument doesn't exist, create a new avaliacao with this data.
     */
    create: XOR<avaliacaoCreateInput, avaliacaoUncheckedCreateInput>
    /**
     * In case the avaliacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<avaliacaoUpdateInput, avaliacaoUncheckedUpdateInput>
  }

  /**
   * avaliacao delete
   */
  export type avaliacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
    /**
     * Filter which avaliacao to delete.
     */
    where: avaliacaoWhereUniqueInput
  }

  /**
   * avaliacao deleteMany
   */
  export type avaliacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which avaliacaos to delete
     */
    where?: avaliacaoWhereInput
  }

  /**
   * avaliacao without action
   */
  export type avaliacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao
     */
    select?: avaliacaoSelect<ExtArgs> | null
  }


  /**
   * Model avaliacao_usuario
   */

  export type AggregateAvaliacao_usuario = {
    _count: Avaliacao_usuarioCountAggregateOutputType | null
    _avg: Avaliacao_usuarioAvgAggregateOutputType | null
    _sum: Avaliacao_usuarioSumAggregateOutputType | null
    _min: Avaliacao_usuarioMinAggregateOutputType | null
    _max: Avaliacao_usuarioMaxAggregateOutputType | null
  }

  export type Avaliacao_usuarioAvgAggregateOutputType = {
    id: number | null
    id_avaliacao: number | null
    id_avaliador: number | null
    id_avaliado: number | null
  }

  export type Avaliacao_usuarioSumAggregateOutputType = {
    id: number | null
    id_avaliacao: number | null
    id_avaliador: number | null
    id_avaliado: number | null
  }

  export type Avaliacao_usuarioMinAggregateOutputType = {
    id: number | null
    id_avaliacao: number | null
    id_avaliador: number | null
    tipo_avaliador: $Enums.avaliacao_usuario_tipo_avaliador | null
    id_avaliado: number | null
    tipo_avaliado: $Enums.avaliacao_usuario_tipo_avaliado | null
  }

  export type Avaliacao_usuarioMaxAggregateOutputType = {
    id: number | null
    id_avaliacao: number | null
    id_avaliador: number | null
    tipo_avaliador: $Enums.avaliacao_usuario_tipo_avaliador | null
    id_avaliado: number | null
    tipo_avaliado: $Enums.avaliacao_usuario_tipo_avaliado | null
  }

  export type Avaliacao_usuarioCountAggregateOutputType = {
    id: number
    id_avaliacao: number
    id_avaliador: number
    tipo_avaliador: number
    id_avaliado: number
    tipo_avaliado: number
    _all: number
  }


  export type Avaliacao_usuarioAvgAggregateInputType = {
    id?: true
    id_avaliacao?: true
    id_avaliador?: true
    id_avaliado?: true
  }

  export type Avaliacao_usuarioSumAggregateInputType = {
    id?: true
    id_avaliacao?: true
    id_avaliador?: true
    id_avaliado?: true
  }

  export type Avaliacao_usuarioMinAggregateInputType = {
    id?: true
    id_avaliacao?: true
    id_avaliador?: true
    tipo_avaliador?: true
    id_avaliado?: true
    tipo_avaliado?: true
  }

  export type Avaliacao_usuarioMaxAggregateInputType = {
    id?: true
    id_avaliacao?: true
    id_avaliador?: true
    tipo_avaliador?: true
    id_avaliado?: true
    tipo_avaliado?: true
  }

  export type Avaliacao_usuarioCountAggregateInputType = {
    id?: true
    id_avaliacao?: true
    id_avaliador?: true
    tipo_avaliador?: true
    id_avaliado?: true
    tipo_avaliado?: true
    _all?: true
  }

  export type Avaliacao_usuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which avaliacao_usuario to aggregate.
     */
    where?: avaliacao_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of avaliacao_usuarios to fetch.
     */
    orderBy?: avaliacao_usuarioOrderByWithRelationInput | avaliacao_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: avaliacao_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` avaliacao_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` avaliacao_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned avaliacao_usuarios
    **/
    _count?: true | Avaliacao_usuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Avaliacao_usuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Avaliacao_usuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Avaliacao_usuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Avaliacao_usuarioMaxAggregateInputType
  }

  export type GetAvaliacao_usuarioAggregateType<T extends Avaliacao_usuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliacao_usuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliacao_usuario[P]>
      : GetScalarType<T[P], AggregateAvaliacao_usuario[P]>
  }




  export type avaliacao_usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: avaliacao_usuarioWhereInput
    orderBy?: avaliacao_usuarioOrderByWithAggregationInput | avaliacao_usuarioOrderByWithAggregationInput[]
    by: Avaliacao_usuarioScalarFieldEnum[] | Avaliacao_usuarioScalarFieldEnum
    having?: avaliacao_usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Avaliacao_usuarioCountAggregateInputType | true
    _avg?: Avaliacao_usuarioAvgAggregateInputType
    _sum?: Avaliacao_usuarioSumAggregateInputType
    _min?: Avaliacao_usuarioMinAggregateInputType
    _max?: Avaliacao_usuarioMaxAggregateInputType
  }

  export type Avaliacao_usuarioGroupByOutputType = {
    id: number
    id_avaliacao: number
    id_avaliador: number
    tipo_avaliador: $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado: number
    tipo_avaliado: $Enums.avaliacao_usuario_tipo_avaliado
    _count: Avaliacao_usuarioCountAggregateOutputType | null
    _avg: Avaliacao_usuarioAvgAggregateOutputType | null
    _sum: Avaliacao_usuarioSumAggregateOutputType | null
    _min: Avaliacao_usuarioMinAggregateOutputType | null
    _max: Avaliacao_usuarioMaxAggregateOutputType | null
  }

  type GetAvaliacao_usuarioGroupByPayload<T extends avaliacao_usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Avaliacao_usuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Avaliacao_usuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Avaliacao_usuarioGroupByOutputType[P]>
            : GetScalarType<T[P], Avaliacao_usuarioGroupByOutputType[P]>
        }
      >
    >


  export type avaliacao_usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_avaliacao?: boolean
    id_avaliador?: boolean
    tipo_avaliador?: boolean
    id_avaliado?: boolean
    tipo_avaliado?: boolean
  }, ExtArgs["result"]["avaliacao_usuario"]>


  export type avaliacao_usuarioSelectScalar = {
    id?: boolean
    id_avaliacao?: boolean
    id_avaliador?: boolean
    tipo_avaliador?: boolean
    id_avaliado?: boolean
    tipo_avaliado?: boolean
  }


  export type $avaliacao_usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "avaliacao_usuario"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_avaliacao: number
      id_avaliador: number
      tipo_avaliador: $Enums.avaliacao_usuario_tipo_avaliador
      id_avaliado: number
      tipo_avaliado: $Enums.avaliacao_usuario_tipo_avaliado
    }, ExtArgs["result"]["avaliacao_usuario"]>
    composites: {}
  }

  type avaliacao_usuarioGetPayload<S extends boolean | null | undefined | avaliacao_usuarioDefaultArgs> = $Result.GetResult<Prisma.$avaliacao_usuarioPayload, S>

  type avaliacao_usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<avaliacao_usuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Avaliacao_usuarioCountAggregateInputType | true
    }

  export interface avaliacao_usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['avaliacao_usuario'], meta: { name: 'avaliacao_usuario' } }
    /**
     * Find zero or one Avaliacao_usuario that matches the filter.
     * @param {avaliacao_usuarioFindUniqueArgs} args - Arguments to find a Avaliacao_usuario
     * @example
     * // Get one Avaliacao_usuario
     * const avaliacao_usuario = await prisma.avaliacao_usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends avaliacao_usuarioFindUniqueArgs>(args: SelectSubset<T, avaliacao_usuarioFindUniqueArgs<ExtArgs>>): Prisma__avaliacao_usuarioClient<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Avaliacao_usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {avaliacao_usuarioFindUniqueOrThrowArgs} args - Arguments to find a Avaliacao_usuario
     * @example
     * // Get one Avaliacao_usuario
     * const avaliacao_usuario = await prisma.avaliacao_usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends avaliacao_usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, avaliacao_usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__avaliacao_usuarioClient<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Avaliacao_usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacao_usuarioFindFirstArgs} args - Arguments to find a Avaliacao_usuario
     * @example
     * // Get one Avaliacao_usuario
     * const avaliacao_usuario = await prisma.avaliacao_usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends avaliacao_usuarioFindFirstArgs>(args?: SelectSubset<T, avaliacao_usuarioFindFirstArgs<ExtArgs>>): Prisma__avaliacao_usuarioClient<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Avaliacao_usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacao_usuarioFindFirstOrThrowArgs} args - Arguments to find a Avaliacao_usuario
     * @example
     * // Get one Avaliacao_usuario
     * const avaliacao_usuario = await prisma.avaliacao_usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends avaliacao_usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, avaliacao_usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__avaliacao_usuarioClient<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Avaliacao_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacao_usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Avaliacao_usuarios
     * const avaliacao_usuarios = await prisma.avaliacao_usuario.findMany()
     * 
     * // Get first 10 Avaliacao_usuarios
     * const avaliacao_usuarios = await prisma.avaliacao_usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avaliacao_usuarioWithIdOnly = await prisma.avaliacao_usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends avaliacao_usuarioFindManyArgs>(args?: SelectSubset<T, avaliacao_usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Avaliacao_usuario.
     * @param {avaliacao_usuarioCreateArgs} args - Arguments to create a Avaliacao_usuario.
     * @example
     * // Create one Avaliacao_usuario
     * const Avaliacao_usuario = await prisma.avaliacao_usuario.create({
     *   data: {
     *     // ... data to create a Avaliacao_usuario
     *   }
     * })
     * 
     */
    create<T extends avaliacao_usuarioCreateArgs>(args: SelectSubset<T, avaliacao_usuarioCreateArgs<ExtArgs>>): Prisma__avaliacao_usuarioClient<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Avaliacao_usuarios.
     * @param {avaliacao_usuarioCreateManyArgs} args - Arguments to create many Avaliacao_usuarios.
     * @example
     * // Create many Avaliacao_usuarios
     * const avaliacao_usuario = await prisma.avaliacao_usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends avaliacao_usuarioCreateManyArgs>(args?: SelectSubset<T, avaliacao_usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Avaliacao_usuario.
     * @param {avaliacao_usuarioDeleteArgs} args - Arguments to delete one Avaliacao_usuario.
     * @example
     * // Delete one Avaliacao_usuario
     * const Avaliacao_usuario = await prisma.avaliacao_usuario.delete({
     *   where: {
     *     // ... filter to delete one Avaliacao_usuario
     *   }
     * })
     * 
     */
    delete<T extends avaliacao_usuarioDeleteArgs>(args: SelectSubset<T, avaliacao_usuarioDeleteArgs<ExtArgs>>): Prisma__avaliacao_usuarioClient<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Avaliacao_usuario.
     * @param {avaliacao_usuarioUpdateArgs} args - Arguments to update one Avaliacao_usuario.
     * @example
     * // Update one Avaliacao_usuario
     * const avaliacao_usuario = await prisma.avaliacao_usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends avaliacao_usuarioUpdateArgs>(args: SelectSubset<T, avaliacao_usuarioUpdateArgs<ExtArgs>>): Prisma__avaliacao_usuarioClient<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Avaliacao_usuarios.
     * @param {avaliacao_usuarioDeleteManyArgs} args - Arguments to filter Avaliacao_usuarios to delete.
     * @example
     * // Delete a few Avaliacao_usuarios
     * const { count } = await prisma.avaliacao_usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends avaliacao_usuarioDeleteManyArgs>(args?: SelectSubset<T, avaliacao_usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avaliacao_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacao_usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Avaliacao_usuarios
     * const avaliacao_usuario = await prisma.avaliacao_usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends avaliacao_usuarioUpdateManyArgs>(args: SelectSubset<T, avaliacao_usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Avaliacao_usuario.
     * @param {avaliacao_usuarioUpsertArgs} args - Arguments to update or create a Avaliacao_usuario.
     * @example
     * // Update or create a Avaliacao_usuario
     * const avaliacao_usuario = await prisma.avaliacao_usuario.upsert({
     *   create: {
     *     // ... data to create a Avaliacao_usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Avaliacao_usuario we want to update
     *   }
     * })
     */
    upsert<T extends avaliacao_usuarioUpsertArgs>(args: SelectSubset<T, avaliacao_usuarioUpsertArgs<ExtArgs>>): Prisma__avaliacao_usuarioClient<$Result.GetResult<Prisma.$avaliacao_usuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Avaliacao_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacao_usuarioCountArgs} args - Arguments to filter Avaliacao_usuarios to count.
     * @example
     * // Count the number of Avaliacao_usuarios
     * const count = await prisma.avaliacao_usuario.count({
     *   where: {
     *     // ... the filter for the Avaliacao_usuarios we want to count
     *   }
     * })
    **/
    count<T extends avaliacao_usuarioCountArgs>(
      args?: Subset<T, avaliacao_usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Avaliacao_usuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Avaliacao_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Avaliacao_usuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Avaliacao_usuarioAggregateArgs>(args: Subset<T, Avaliacao_usuarioAggregateArgs>): Prisma.PrismaPromise<GetAvaliacao_usuarioAggregateType<T>>

    /**
     * Group by Avaliacao_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {avaliacao_usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends avaliacao_usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: avaliacao_usuarioGroupByArgs['orderBy'] }
        : { orderBy?: avaliacao_usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, avaliacao_usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliacao_usuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the avaliacao_usuario model
   */
  readonly fields: avaliacao_usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for avaliacao_usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__avaliacao_usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the avaliacao_usuario model
   */ 
  interface avaliacao_usuarioFieldRefs {
    readonly id: FieldRef<"avaliacao_usuario", 'Int'>
    readonly id_avaliacao: FieldRef<"avaliacao_usuario", 'Int'>
    readonly id_avaliador: FieldRef<"avaliacao_usuario", 'Int'>
    readonly tipo_avaliador: FieldRef<"avaliacao_usuario", 'avaliacao_usuario_tipo_avaliador'>
    readonly id_avaliado: FieldRef<"avaliacao_usuario", 'Int'>
    readonly tipo_avaliado: FieldRef<"avaliacao_usuario", 'avaliacao_usuario_tipo_avaliado'>
  }
    

  // Custom InputTypes
  /**
   * avaliacao_usuario findUnique
   */
  export type avaliacao_usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao_usuario to fetch.
     */
    where: avaliacao_usuarioWhereUniqueInput
  }

  /**
   * avaliacao_usuario findUniqueOrThrow
   */
  export type avaliacao_usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao_usuario to fetch.
     */
    where: avaliacao_usuarioWhereUniqueInput
  }

  /**
   * avaliacao_usuario findFirst
   */
  export type avaliacao_usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao_usuario to fetch.
     */
    where?: avaliacao_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of avaliacao_usuarios to fetch.
     */
    orderBy?: avaliacao_usuarioOrderByWithRelationInput | avaliacao_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for avaliacao_usuarios.
     */
    cursor?: avaliacao_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` avaliacao_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` avaliacao_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of avaliacao_usuarios.
     */
    distinct?: Avaliacao_usuarioScalarFieldEnum | Avaliacao_usuarioScalarFieldEnum[]
  }

  /**
   * avaliacao_usuario findFirstOrThrow
   */
  export type avaliacao_usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao_usuario to fetch.
     */
    where?: avaliacao_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of avaliacao_usuarios to fetch.
     */
    orderBy?: avaliacao_usuarioOrderByWithRelationInput | avaliacao_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for avaliacao_usuarios.
     */
    cursor?: avaliacao_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` avaliacao_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` avaliacao_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of avaliacao_usuarios.
     */
    distinct?: Avaliacao_usuarioScalarFieldEnum | Avaliacao_usuarioScalarFieldEnum[]
  }

  /**
   * avaliacao_usuario findMany
   */
  export type avaliacao_usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * Filter, which avaliacao_usuarios to fetch.
     */
    where?: avaliacao_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of avaliacao_usuarios to fetch.
     */
    orderBy?: avaliacao_usuarioOrderByWithRelationInput | avaliacao_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing avaliacao_usuarios.
     */
    cursor?: avaliacao_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` avaliacao_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` avaliacao_usuarios.
     */
    skip?: number
    distinct?: Avaliacao_usuarioScalarFieldEnum | Avaliacao_usuarioScalarFieldEnum[]
  }

  /**
   * avaliacao_usuario create
   */
  export type avaliacao_usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * The data needed to create a avaliacao_usuario.
     */
    data: XOR<avaliacao_usuarioCreateInput, avaliacao_usuarioUncheckedCreateInput>
  }

  /**
   * avaliacao_usuario createMany
   */
  export type avaliacao_usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many avaliacao_usuarios.
     */
    data: avaliacao_usuarioCreateManyInput | avaliacao_usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * avaliacao_usuario update
   */
  export type avaliacao_usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * The data needed to update a avaliacao_usuario.
     */
    data: XOR<avaliacao_usuarioUpdateInput, avaliacao_usuarioUncheckedUpdateInput>
    /**
     * Choose, which avaliacao_usuario to update.
     */
    where: avaliacao_usuarioWhereUniqueInput
  }

  /**
   * avaliacao_usuario updateMany
   */
  export type avaliacao_usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update avaliacao_usuarios.
     */
    data: XOR<avaliacao_usuarioUpdateManyMutationInput, avaliacao_usuarioUncheckedUpdateManyInput>
    /**
     * Filter which avaliacao_usuarios to update
     */
    where?: avaliacao_usuarioWhereInput
  }

  /**
   * avaliacao_usuario upsert
   */
  export type avaliacao_usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * The filter to search for the avaliacao_usuario to update in case it exists.
     */
    where: avaliacao_usuarioWhereUniqueInput
    /**
     * In case the avaliacao_usuario found by the `where` argument doesn't exist, create a new avaliacao_usuario with this data.
     */
    create: XOR<avaliacao_usuarioCreateInput, avaliacao_usuarioUncheckedCreateInput>
    /**
     * In case the avaliacao_usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<avaliacao_usuarioUpdateInput, avaliacao_usuarioUncheckedUpdateInput>
  }

  /**
   * avaliacao_usuario delete
   */
  export type avaliacao_usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
    /**
     * Filter which avaliacao_usuario to delete.
     */
    where: avaliacao_usuarioWhereUniqueInput
  }

  /**
   * avaliacao_usuario deleteMany
   */
  export type avaliacao_usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which avaliacao_usuarios to delete
     */
    where?: avaliacao_usuarioWhereInput
  }

  /**
   * avaliacao_usuario without action
   */
  export type avaliacao_usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the avaliacao_usuario
     */
    select?: avaliacao_usuarioSelect<ExtArgs> | null
  }


  /**
   * Model pagamentos
   */

  export type AggregatePagamentos = {
    _count: PagamentosCountAggregateOutputType | null
    _avg: PagamentosAvgAggregateOutputType | null
    _sum: PagamentosSumAggregateOutputType | null
    _min: PagamentosMinAggregateOutputType | null
    _max: PagamentosMaxAggregateOutputType | null
  }

  export type PagamentosAvgAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    id_freelancer: number | null
    valor: Decimal | null
  }

  export type PagamentosSumAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    id_freelancer: number | null
    valor: Decimal | null
  }

  export type PagamentosMinAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    id_freelancer: number | null
    valor: Decimal | null
    metodo_pagamento: $Enums.pagamentos_metodo_pagamento | null
    status_pagamento: $Enums.pagamentos_status_pagamento | null
    descricao: string | null
    link_pagamento: string | null
  }

  export type PagamentosMaxAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    id_freelancer: number | null
    valor: Decimal | null
    metodo_pagamento: $Enums.pagamentos_metodo_pagamento | null
    status_pagamento: $Enums.pagamentos_status_pagamento | null
    descricao: string | null
    link_pagamento: string | null
  }

  export type PagamentosCountAggregateOutputType = {
    id: number
    id_cliente: number
    id_freelancer: number
    valor: number
    metodo_pagamento: number
    status_pagamento: number
    descricao: number
    link_pagamento: number
    _all: number
  }


  export type PagamentosAvgAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
    valor?: true
  }

  export type PagamentosSumAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
    valor?: true
  }

  export type PagamentosMinAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
    valor?: true
    metodo_pagamento?: true
    status_pagamento?: true
    descricao?: true
    link_pagamento?: true
  }

  export type PagamentosMaxAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
    valor?: true
    metodo_pagamento?: true
    status_pagamento?: true
    descricao?: true
    link_pagamento?: true
  }

  export type PagamentosCountAggregateInputType = {
    id?: true
    id_cliente?: true
    id_freelancer?: true
    valor?: true
    metodo_pagamento?: true
    status_pagamento?: true
    descricao?: true
    link_pagamento?: true
    _all?: true
  }

  export type PagamentosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pagamentos to aggregate.
     */
    where?: pagamentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagamentos to fetch.
     */
    orderBy?: pagamentosOrderByWithRelationInput | pagamentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pagamentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pagamentos
    **/
    _count?: true | PagamentosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagamentosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagamentosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagamentosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagamentosMaxAggregateInputType
  }

  export type GetPagamentosAggregateType<T extends PagamentosAggregateArgs> = {
        [P in keyof T & keyof AggregatePagamentos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagamentos[P]>
      : GetScalarType<T[P], AggregatePagamentos[P]>
  }




  export type pagamentosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagamentosWhereInput
    orderBy?: pagamentosOrderByWithAggregationInput | pagamentosOrderByWithAggregationInput[]
    by: PagamentosScalarFieldEnum[] | PagamentosScalarFieldEnum
    having?: pagamentosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagamentosCountAggregateInputType | true
    _avg?: PagamentosAvgAggregateInputType
    _sum?: PagamentosSumAggregateInputType
    _min?: PagamentosMinAggregateInputType
    _max?: PagamentosMaxAggregateInputType
  }

  export type PagamentosGroupByOutputType = {
    id: number
    id_cliente: number
    id_freelancer: number
    valor: Decimal
    metodo_pagamento: $Enums.pagamentos_metodo_pagamento
    status_pagamento: $Enums.pagamentos_status_pagamento
    descricao: string | null
    link_pagamento: string | null
    _count: PagamentosCountAggregateOutputType | null
    _avg: PagamentosAvgAggregateOutputType | null
    _sum: PagamentosSumAggregateOutputType | null
    _min: PagamentosMinAggregateOutputType | null
    _max: PagamentosMaxAggregateOutputType | null
  }

  type GetPagamentosGroupByPayload<T extends pagamentosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagamentosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagamentosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagamentosGroupByOutputType[P]>
            : GetScalarType<T[P], PagamentosGroupByOutputType[P]>
        }
      >
    >


  export type pagamentosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_cliente?: boolean
    id_freelancer?: boolean
    valor?: boolean
    metodo_pagamento?: boolean
    status_pagamento?: boolean
    descricao?: boolean
    link_pagamento?: boolean
  }, ExtArgs["result"]["pagamentos"]>


  export type pagamentosSelectScalar = {
    id?: boolean
    id_cliente?: boolean
    id_freelancer?: boolean
    valor?: boolean
    metodo_pagamento?: boolean
    status_pagamento?: boolean
    descricao?: boolean
    link_pagamento?: boolean
  }


  export type $pagamentosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pagamentos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_cliente: number
      id_freelancer: number
      valor: Prisma.Decimal
      metodo_pagamento: $Enums.pagamentos_metodo_pagamento
      status_pagamento: $Enums.pagamentos_status_pagamento
      descricao: string | null
      link_pagamento: string | null
    }, ExtArgs["result"]["pagamentos"]>
    composites: {}
  }

  type pagamentosGetPayload<S extends boolean | null | undefined | pagamentosDefaultArgs> = $Result.GetResult<Prisma.$pagamentosPayload, S>

  type pagamentosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<pagamentosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PagamentosCountAggregateInputType | true
    }

  export interface pagamentosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pagamentos'], meta: { name: 'pagamentos' } }
    /**
     * Find zero or one Pagamentos that matches the filter.
     * @param {pagamentosFindUniqueArgs} args - Arguments to find a Pagamentos
     * @example
     * // Get one Pagamentos
     * const pagamentos = await prisma.pagamentos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pagamentosFindUniqueArgs>(args: SelectSubset<T, pagamentosFindUniqueArgs<ExtArgs>>): Prisma__pagamentosClient<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pagamentos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {pagamentosFindUniqueOrThrowArgs} args - Arguments to find a Pagamentos
     * @example
     * // Get one Pagamentos
     * const pagamentos = await prisma.pagamentos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pagamentosFindUniqueOrThrowArgs>(args: SelectSubset<T, pagamentosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pagamentosClient<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pagamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagamentosFindFirstArgs} args - Arguments to find a Pagamentos
     * @example
     * // Get one Pagamentos
     * const pagamentos = await prisma.pagamentos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pagamentosFindFirstArgs>(args?: SelectSubset<T, pagamentosFindFirstArgs<ExtArgs>>): Prisma__pagamentosClient<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pagamentos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagamentosFindFirstOrThrowArgs} args - Arguments to find a Pagamentos
     * @example
     * // Get one Pagamentos
     * const pagamentos = await prisma.pagamentos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pagamentosFindFirstOrThrowArgs>(args?: SelectSubset<T, pagamentosFindFirstOrThrowArgs<ExtArgs>>): Prisma__pagamentosClient<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pagamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagamentosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagamentos
     * const pagamentos = await prisma.pagamentos.findMany()
     * 
     * // Get first 10 Pagamentos
     * const pagamentos = await prisma.pagamentos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pagamentosWithIdOnly = await prisma.pagamentos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pagamentosFindManyArgs>(args?: SelectSubset<T, pagamentosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pagamentos.
     * @param {pagamentosCreateArgs} args - Arguments to create a Pagamentos.
     * @example
     * // Create one Pagamentos
     * const Pagamentos = await prisma.pagamentos.create({
     *   data: {
     *     // ... data to create a Pagamentos
     *   }
     * })
     * 
     */
    create<T extends pagamentosCreateArgs>(args: SelectSubset<T, pagamentosCreateArgs<ExtArgs>>): Prisma__pagamentosClient<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pagamentos.
     * @param {pagamentosCreateManyArgs} args - Arguments to create many Pagamentos.
     * @example
     * // Create many Pagamentos
     * const pagamentos = await prisma.pagamentos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pagamentosCreateManyArgs>(args?: SelectSubset<T, pagamentosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pagamentos.
     * @param {pagamentosDeleteArgs} args - Arguments to delete one Pagamentos.
     * @example
     * // Delete one Pagamentos
     * const Pagamentos = await prisma.pagamentos.delete({
     *   where: {
     *     // ... filter to delete one Pagamentos
     *   }
     * })
     * 
     */
    delete<T extends pagamentosDeleteArgs>(args: SelectSubset<T, pagamentosDeleteArgs<ExtArgs>>): Prisma__pagamentosClient<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pagamentos.
     * @param {pagamentosUpdateArgs} args - Arguments to update one Pagamentos.
     * @example
     * // Update one Pagamentos
     * const pagamentos = await prisma.pagamentos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pagamentosUpdateArgs>(args: SelectSubset<T, pagamentosUpdateArgs<ExtArgs>>): Prisma__pagamentosClient<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pagamentos.
     * @param {pagamentosDeleteManyArgs} args - Arguments to filter Pagamentos to delete.
     * @example
     * // Delete a few Pagamentos
     * const { count } = await prisma.pagamentos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pagamentosDeleteManyArgs>(args?: SelectSubset<T, pagamentosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagamentosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagamentos
     * const pagamentos = await prisma.pagamentos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pagamentosUpdateManyArgs>(args: SelectSubset<T, pagamentosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pagamentos.
     * @param {pagamentosUpsertArgs} args - Arguments to update or create a Pagamentos.
     * @example
     * // Update or create a Pagamentos
     * const pagamentos = await prisma.pagamentos.upsert({
     *   create: {
     *     // ... data to create a Pagamentos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pagamentos we want to update
     *   }
     * })
     */
    upsert<T extends pagamentosUpsertArgs>(args: SelectSubset<T, pagamentosUpsertArgs<ExtArgs>>): Prisma__pagamentosClient<$Result.GetResult<Prisma.$pagamentosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagamentosCountArgs} args - Arguments to filter Pagamentos to count.
     * @example
     * // Count the number of Pagamentos
     * const count = await prisma.pagamentos.count({
     *   where: {
     *     // ... the filter for the Pagamentos we want to count
     *   }
     * })
    **/
    count<T extends pagamentosCountArgs>(
      args?: Subset<T, pagamentosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagamentosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagamentosAggregateArgs>(args: Subset<T, PagamentosAggregateArgs>): Prisma.PrismaPromise<GetPagamentosAggregateType<T>>

    /**
     * Group by Pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagamentosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pagamentosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pagamentosGroupByArgs['orderBy'] }
        : { orderBy?: pagamentosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pagamentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagamentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pagamentos model
   */
  readonly fields: pagamentosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pagamentos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pagamentosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pagamentos model
   */ 
  interface pagamentosFieldRefs {
    readonly id: FieldRef<"pagamentos", 'Int'>
    readonly id_cliente: FieldRef<"pagamentos", 'Int'>
    readonly id_freelancer: FieldRef<"pagamentos", 'Int'>
    readonly valor: FieldRef<"pagamentos", 'Decimal'>
    readonly metodo_pagamento: FieldRef<"pagamentos", 'pagamentos_metodo_pagamento'>
    readonly status_pagamento: FieldRef<"pagamentos", 'pagamentos_status_pagamento'>
    readonly descricao: FieldRef<"pagamentos", 'String'>
    readonly link_pagamento: FieldRef<"pagamentos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * pagamentos findUnique
   */
  export type pagamentosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * Filter, which pagamentos to fetch.
     */
    where: pagamentosWhereUniqueInput
  }

  /**
   * pagamentos findUniqueOrThrow
   */
  export type pagamentosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * Filter, which pagamentos to fetch.
     */
    where: pagamentosWhereUniqueInput
  }

  /**
   * pagamentos findFirst
   */
  export type pagamentosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * Filter, which pagamentos to fetch.
     */
    where?: pagamentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagamentos to fetch.
     */
    orderBy?: pagamentosOrderByWithRelationInput | pagamentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pagamentos.
     */
    cursor?: pagamentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pagamentos.
     */
    distinct?: PagamentosScalarFieldEnum | PagamentosScalarFieldEnum[]
  }

  /**
   * pagamentos findFirstOrThrow
   */
  export type pagamentosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * Filter, which pagamentos to fetch.
     */
    where?: pagamentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagamentos to fetch.
     */
    orderBy?: pagamentosOrderByWithRelationInput | pagamentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pagamentos.
     */
    cursor?: pagamentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pagamentos.
     */
    distinct?: PagamentosScalarFieldEnum | PagamentosScalarFieldEnum[]
  }

  /**
   * pagamentos findMany
   */
  export type pagamentosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * Filter, which pagamentos to fetch.
     */
    where?: pagamentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagamentos to fetch.
     */
    orderBy?: pagamentosOrderByWithRelationInput | pagamentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pagamentos.
     */
    cursor?: pagamentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagamentos.
     */
    skip?: number
    distinct?: PagamentosScalarFieldEnum | PagamentosScalarFieldEnum[]
  }

  /**
   * pagamentos create
   */
  export type pagamentosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * The data needed to create a pagamentos.
     */
    data: XOR<pagamentosCreateInput, pagamentosUncheckedCreateInput>
  }

  /**
   * pagamentos createMany
   */
  export type pagamentosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pagamentos.
     */
    data: pagamentosCreateManyInput | pagamentosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pagamentos update
   */
  export type pagamentosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * The data needed to update a pagamentos.
     */
    data: XOR<pagamentosUpdateInput, pagamentosUncheckedUpdateInput>
    /**
     * Choose, which pagamentos to update.
     */
    where: pagamentosWhereUniqueInput
  }

  /**
   * pagamentos updateMany
   */
  export type pagamentosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pagamentos.
     */
    data: XOR<pagamentosUpdateManyMutationInput, pagamentosUncheckedUpdateManyInput>
    /**
     * Filter which pagamentos to update
     */
    where?: pagamentosWhereInput
  }

  /**
   * pagamentos upsert
   */
  export type pagamentosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * The filter to search for the pagamentos to update in case it exists.
     */
    where: pagamentosWhereUniqueInput
    /**
     * In case the pagamentos found by the `where` argument doesn't exist, create a new pagamentos with this data.
     */
    create: XOR<pagamentosCreateInput, pagamentosUncheckedCreateInput>
    /**
     * In case the pagamentos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pagamentosUpdateInput, pagamentosUncheckedUpdateInput>
  }

  /**
   * pagamentos delete
   */
  export type pagamentosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
    /**
     * Filter which pagamentos to delete.
     */
    where: pagamentosWhereUniqueInput
  }

  /**
   * pagamentos deleteMany
   */
  export type pagamentosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pagamentos to delete
     */
    where?: pagamentosWhereInput
  }

  /**
   * pagamentos without action
   */
  export type pagamentosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagamentos
     */
    select?: pagamentosSelect<ExtArgs> | null
  }


  /**
   * Model freelancer_projeto
   */

  export type AggregateFreelancer_projeto = {
    _count: Freelancer_projetoCountAggregateOutputType | null
    _avg: Freelancer_projetoAvgAggregateOutputType | null
    _sum: Freelancer_projetoSumAggregateOutputType | null
    _min: Freelancer_projetoMinAggregateOutputType | null
    _max: Freelancer_projetoMaxAggregateOutputType | null
  }

  export type Freelancer_projetoAvgAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_freelancer: number | null
  }

  export type Freelancer_projetoSumAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_freelancer: number | null
  }

  export type Freelancer_projetoMinAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_freelancer: number | null
    status: boolean | null
  }

  export type Freelancer_projetoMaxAggregateOutputType = {
    id: number | null
    id_projeto: number | null
    id_freelancer: number | null
    status: boolean | null
  }

  export type Freelancer_projetoCountAggregateOutputType = {
    id: number
    id_projeto: number
    id_freelancer: number
    status: number
    _all: number
  }


  export type Freelancer_projetoAvgAggregateInputType = {
    id?: true
    id_projeto?: true
    id_freelancer?: true
  }

  export type Freelancer_projetoSumAggregateInputType = {
    id?: true
    id_projeto?: true
    id_freelancer?: true
  }

  export type Freelancer_projetoMinAggregateInputType = {
    id?: true
    id_projeto?: true
    id_freelancer?: true
    status?: true
  }

  export type Freelancer_projetoMaxAggregateInputType = {
    id?: true
    id_projeto?: true
    id_freelancer?: true
    status?: true
  }

  export type Freelancer_projetoCountAggregateInputType = {
    id?: true
    id_projeto?: true
    id_freelancer?: true
    status?: true
    _all?: true
  }

  export type Freelancer_projetoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which freelancer_projeto to aggregate.
     */
    where?: freelancer_projetoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_projetos to fetch.
     */
    orderBy?: freelancer_projetoOrderByWithRelationInput | freelancer_projetoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: freelancer_projetoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned freelancer_projetos
    **/
    _count?: true | Freelancer_projetoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Freelancer_projetoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Freelancer_projetoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Freelancer_projetoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Freelancer_projetoMaxAggregateInputType
  }

  export type GetFreelancer_projetoAggregateType<T extends Freelancer_projetoAggregateArgs> = {
        [P in keyof T & keyof AggregateFreelancer_projeto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFreelancer_projeto[P]>
      : GetScalarType<T[P], AggregateFreelancer_projeto[P]>
  }




  export type freelancer_projetoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: freelancer_projetoWhereInput
    orderBy?: freelancer_projetoOrderByWithAggregationInput | freelancer_projetoOrderByWithAggregationInput[]
    by: Freelancer_projetoScalarFieldEnum[] | Freelancer_projetoScalarFieldEnum
    having?: freelancer_projetoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Freelancer_projetoCountAggregateInputType | true
    _avg?: Freelancer_projetoAvgAggregateInputType
    _sum?: Freelancer_projetoSumAggregateInputType
    _min?: Freelancer_projetoMinAggregateInputType
    _max?: Freelancer_projetoMaxAggregateInputType
  }

  export type Freelancer_projetoGroupByOutputType = {
    id: number
    id_projeto: number
    id_freelancer: number
    status: boolean
    _count: Freelancer_projetoCountAggregateOutputType | null
    _avg: Freelancer_projetoAvgAggregateOutputType | null
    _sum: Freelancer_projetoSumAggregateOutputType | null
    _min: Freelancer_projetoMinAggregateOutputType | null
    _max: Freelancer_projetoMaxAggregateOutputType | null
  }

  type GetFreelancer_projetoGroupByPayload<T extends freelancer_projetoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Freelancer_projetoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Freelancer_projetoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Freelancer_projetoGroupByOutputType[P]>
            : GetScalarType<T[P], Freelancer_projetoGroupByOutputType[P]>
        }
      >
    >


  export type freelancer_projetoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_projeto?: boolean
    id_freelancer?: boolean
    status?: boolean
  }, ExtArgs["result"]["freelancer_projeto"]>


  export type freelancer_projetoSelectScalar = {
    id?: boolean
    id_projeto?: boolean
    id_freelancer?: boolean
    status?: boolean
  }


  export type $freelancer_projetoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "freelancer_projeto"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_projeto: number
      id_freelancer: number
      status: boolean
    }, ExtArgs["result"]["freelancer_projeto"]>
    composites: {}
  }

  type freelancer_projetoGetPayload<S extends boolean | null | undefined | freelancer_projetoDefaultArgs> = $Result.GetResult<Prisma.$freelancer_projetoPayload, S>

  type freelancer_projetoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<freelancer_projetoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Freelancer_projetoCountAggregateInputType | true
    }

  export interface freelancer_projetoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['freelancer_projeto'], meta: { name: 'freelancer_projeto' } }
    /**
     * Find zero or one Freelancer_projeto that matches the filter.
     * @param {freelancer_projetoFindUniqueArgs} args - Arguments to find a Freelancer_projeto
     * @example
     * // Get one Freelancer_projeto
     * const freelancer_projeto = await prisma.freelancer_projeto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends freelancer_projetoFindUniqueArgs>(args: SelectSubset<T, freelancer_projetoFindUniqueArgs<ExtArgs>>): Prisma__freelancer_projetoClient<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Freelancer_projeto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {freelancer_projetoFindUniqueOrThrowArgs} args - Arguments to find a Freelancer_projeto
     * @example
     * // Get one Freelancer_projeto
     * const freelancer_projeto = await prisma.freelancer_projeto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends freelancer_projetoFindUniqueOrThrowArgs>(args: SelectSubset<T, freelancer_projetoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__freelancer_projetoClient<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Freelancer_projeto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_projetoFindFirstArgs} args - Arguments to find a Freelancer_projeto
     * @example
     * // Get one Freelancer_projeto
     * const freelancer_projeto = await prisma.freelancer_projeto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends freelancer_projetoFindFirstArgs>(args?: SelectSubset<T, freelancer_projetoFindFirstArgs<ExtArgs>>): Prisma__freelancer_projetoClient<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Freelancer_projeto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_projetoFindFirstOrThrowArgs} args - Arguments to find a Freelancer_projeto
     * @example
     * // Get one Freelancer_projeto
     * const freelancer_projeto = await prisma.freelancer_projeto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends freelancer_projetoFindFirstOrThrowArgs>(args?: SelectSubset<T, freelancer_projetoFindFirstOrThrowArgs<ExtArgs>>): Prisma__freelancer_projetoClient<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Freelancer_projetos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_projetoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Freelancer_projetos
     * const freelancer_projetos = await prisma.freelancer_projeto.findMany()
     * 
     * // Get first 10 Freelancer_projetos
     * const freelancer_projetos = await prisma.freelancer_projeto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const freelancer_projetoWithIdOnly = await prisma.freelancer_projeto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends freelancer_projetoFindManyArgs>(args?: SelectSubset<T, freelancer_projetoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Freelancer_projeto.
     * @param {freelancer_projetoCreateArgs} args - Arguments to create a Freelancer_projeto.
     * @example
     * // Create one Freelancer_projeto
     * const Freelancer_projeto = await prisma.freelancer_projeto.create({
     *   data: {
     *     // ... data to create a Freelancer_projeto
     *   }
     * })
     * 
     */
    create<T extends freelancer_projetoCreateArgs>(args: SelectSubset<T, freelancer_projetoCreateArgs<ExtArgs>>): Prisma__freelancer_projetoClient<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Freelancer_projetos.
     * @param {freelancer_projetoCreateManyArgs} args - Arguments to create many Freelancer_projetos.
     * @example
     * // Create many Freelancer_projetos
     * const freelancer_projeto = await prisma.freelancer_projeto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends freelancer_projetoCreateManyArgs>(args?: SelectSubset<T, freelancer_projetoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Freelancer_projeto.
     * @param {freelancer_projetoDeleteArgs} args - Arguments to delete one Freelancer_projeto.
     * @example
     * // Delete one Freelancer_projeto
     * const Freelancer_projeto = await prisma.freelancer_projeto.delete({
     *   where: {
     *     // ... filter to delete one Freelancer_projeto
     *   }
     * })
     * 
     */
    delete<T extends freelancer_projetoDeleteArgs>(args: SelectSubset<T, freelancer_projetoDeleteArgs<ExtArgs>>): Prisma__freelancer_projetoClient<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Freelancer_projeto.
     * @param {freelancer_projetoUpdateArgs} args - Arguments to update one Freelancer_projeto.
     * @example
     * // Update one Freelancer_projeto
     * const freelancer_projeto = await prisma.freelancer_projeto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends freelancer_projetoUpdateArgs>(args: SelectSubset<T, freelancer_projetoUpdateArgs<ExtArgs>>): Prisma__freelancer_projetoClient<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Freelancer_projetos.
     * @param {freelancer_projetoDeleteManyArgs} args - Arguments to filter Freelancer_projetos to delete.
     * @example
     * // Delete a few Freelancer_projetos
     * const { count } = await prisma.freelancer_projeto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends freelancer_projetoDeleteManyArgs>(args?: SelectSubset<T, freelancer_projetoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Freelancer_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_projetoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Freelancer_projetos
     * const freelancer_projeto = await prisma.freelancer_projeto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends freelancer_projetoUpdateManyArgs>(args: SelectSubset<T, freelancer_projetoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Freelancer_projeto.
     * @param {freelancer_projetoUpsertArgs} args - Arguments to update or create a Freelancer_projeto.
     * @example
     * // Update or create a Freelancer_projeto
     * const freelancer_projeto = await prisma.freelancer_projeto.upsert({
     *   create: {
     *     // ... data to create a Freelancer_projeto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Freelancer_projeto we want to update
     *   }
     * })
     */
    upsert<T extends freelancer_projetoUpsertArgs>(args: SelectSubset<T, freelancer_projetoUpsertArgs<ExtArgs>>): Prisma__freelancer_projetoClient<$Result.GetResult<Prisma.$freelancer_projetoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Freelancer_projetos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_projetoCountArgs} args - Arguments to filter Freelancer_projetos to count.
     * @example
     * // Count the number of Freelancer_projetos
     * const count = await prisma.freelancer_projeto.count({
     *   where: {
     *     // ... the filter for the Freelancer_projetos we want to count
     *   }
     * })
    **/
    count<T extends freelancer_projetoCountArgs>(
      args?: Subset<T, freelancer_projetoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Freelancer_projetoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Freelancer_projeto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Freelancer_projetoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Freelancer_projetoAggregateArgs>(args: Subset<T, Freelancer_projetoAggregateArgs>): Prisma.PrismaPromise<GetFreelancer_projetoAggregateType<T>>

    /**
     * Group by Freelancer_projeto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {freelancer_projetoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends freelancer_projetoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: freelancer_projetoGroupByArgs['orderBy'] }
        : { orderBy?: freelancer_projetoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, freelancer_projetoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFreelancer_projetoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the freelancer_projeto model
   */
  readonly fields: freelancer_projetoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for freelancer_projeto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__freelancer_projetoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the freelancer_projeto model
   */ 
  interface freelancer_projetoFieldRefs {
    readonly id: FieldRef<"freelancer_projeto", 'Int'>
    readonly id_projeto: FieldRef<"freelancer_projeto", 'Int'>
    readonly id_freelancer: FieldRef<"freelancer_projeto", 'Int'>
    readonly status: FieldRef<"freelancer_projeto", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * freelancer_projeto findUnique
   */
  export type freelancer_projetoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_projeto to fetch.
     */
    where: freelancer_projetoWhereUniqueInput
  }

  /**
   * freelancer_projeto findUniqueOrThrow
   */
  export type freelancer_projetoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_projeto to fetch.
     */
    where: freelancer_projetoWhereUniqueInput
  }

  /**
   * freelancer_projeto findFirst
   */
  export type freelancer_projetoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_projeto to fetch.
     */
    where?: freelancer_projetoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_projetos to fetch.
     */
    orderBy?: freelancer_projetoOrderByWithRelationInput | freelancer_projetoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for freelancer_projetos.
     */
    cursor?: freelancer_projetoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of freelancer_projetos.
     */
    distinct?: Freelancer_projetoScalarFieldEnum | Freelancer_projetoScalarFieldEnum[]
  }

  /**
   * freelancer_projeto findFirstOrThrow
   */
  export type freelancer_projetoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_projeto to fetch.
     */
    where?: freelancer_projetoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_projetos to fetch.
     */
    orderBy?: freelancer_projetoOrderByWithRelationInput | freelancer_projetoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for freelancer_projetos.
     */
    cursor?: freelancer_projetoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_projetos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of freelancer_projetos.
     */
    distinct?: Freelancer_projetoScalarFieldEnum | Freelancer_projetoScalarFieldEnum[]
  }

  /**
   * freelancer_projeto findMany
   */
  export type freelancer_projetoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * Filter, which freelancer_projetos to fetch.
     */
    where?: freelancer_projetoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of freelancer_projetos to fetch.
     */
    orderBy?: freelancer_projetoOrderByWithRelationInput | freelancer_projetoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing freelancer_projetos.
     */
    cursor?: freelancer_projetoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` freelancer_projetos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` freelancer_projetos.
     */
    skip?: number
    distinct?: Freelancer_projetoScalarFieldEnum | Freelancer_projetoScalarFieldEnum[]
  }

  /**
   * freelancer_projeto create
   */
  export type freelancer_projetoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * The data needed to create a freelancer_projeto.
     */
    data: XOR<freelancer_projetoCreateInput, freelancer_projetoUncheckedCreateInput>
  }

  /**
   * freelancer_projeto createMany
   */
  export type freelancer_projetoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many freelancer_projetos.
     */
    data: freelancer_projetoCreateManyInput | freelancer_projetoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * freelancer_projeto update
   */
  export type freelancer_projetoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * The data needed to update a freelancer_projeto.
     */
    data: XOR<freelancer_projetoUpdateInput, freelancer_projetoUncheckedUpdateInput>
    /**
     * Choose, which freelancer_projeto to update.
     */
    where: freelancer_projetoWhereUniqueInput
  }

  /**
   * freelancer_projeto updateMany
   */
  export type freelancer_projetoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update freelancer_projetos.
     */
    data: XOR<freelancer_projetoUpdateManyMutationInput, freelancer_projetoUncheckedUpdateManyInput>
    /**
     * Filter which freelancer_projetos to update
     */
    where?: freelancer_projetoWhereInput
  }

  /**
   * freelancer_projeto upsert
   */
  export type freelancer_projetoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * The filter to search for the freelancer_projeto to update in case it exists.
     */
    where: freelancer_projetoWhereUniqueInput
    /**
     * In case the freelancer_projeto found by the `where` argument doesn't exist, create a new freelancer_projeto with this data.
     */
    create: XOR<freelancer_projetoCreateInput, freelancer_projetoUncheckedCreateInput>
    /**
     * In case the freelancer_projeto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<freelancer_projetoUpdateInput, freelancer_projetoUncheckedUpdateInput>
  }

  /**
   * freelancer_projeto delete
   */
  export type freelancer_projetoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
    /**
     * Filter which freelancer_projeto to delete.
     */
    where: freelancer_projetoWhereUniqueInput
  }

  /**
   * freelancer_projeto deleteMany
   */
  export type freelancer_projetoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which freelancer_projetos to delete
     */
    where?: freelancer_projetoWhereInput
  }

  /**
   * freelancer_projeto without action
   */
  export type freelancer_projetoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the freelancer_projeto
     */
    select?: freelancer_projetoSelect<ExtArgs> | null
  }


  /**
   * Model denuncia
   */

  export type AggregateDenuncia = {
    _count: DenunciaCountAggregateOutputType | null
    _avg: DenunciaAvgAggregateOutputType | null
    _sum: DenunciaSumAggregateOutputType | null
    _min: DenunciaMinAggregateOutputType | null
    _max: DenunciaMaxAggregateOutputType | null
  }

  export type DenunciaAvgAggregateOutputType = {
    id: number | null
  }

  export type DenunciaSumAggregateOutputType = {
    id: number | null
  }

  export type DenunciaMinAggregateOutputType = {
    id: number | null
    arquivo: string | null
    descricao: string | null
  }

  export type DenunciaMaxAggregateOutputType = {
    id: number | null
    arquivo: string | null
    descricao: string | null
  }

  export type DenunciaCountAggregateOutputType = {
    id: number
    arquivo: number
    descricao: number
    _all: number
  }


  export type DenunciaAvgAggregateInputType = {
    id?: true
  }

  export type DenunciaSumAggregateInputType = {
    id?: true
  }

  export type DenunciaMinAggregateInputType = {
    id?: true
    arquivo?: true
    descricao?: true
  }

  export type DenunciaMaxAggregateInputType = {
    id?: true
    arquivo?: true
    descricao?: true
  }

  export type DenunciaCountAggregateInputType = {
    id?: true
    arquivo?: true
    descricao?: true
    _all?: true
  }

  export type DenunciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which denuncia to aggregate.
     */
    where?: denunciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of denuncias to fetch.
     */
    orderBy?: denunciaOrderByWithRelationInput | denunciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: denunciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` denuncias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` denuncias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned denuncias
    **/
    _count?: true | DenunciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DenunciaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DenunciaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DenunciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DenunciaMaxAggregateInputType
  }

  export type GetDenunciaAggregateType<T extends DenunciaAggregateArgs> = {
        [P in keyof T & keyof AggregateDenuncia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDenuncia[P]>
      : GetScalarType<T[P], AggregateDenuncia[P]>
  }




  export type denunciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: denunciaWhereInput
    orderBy?: denunciaOrderByWithAggregationInput | denunciaOrderByWithAggregationInput[]
    by: DenunciaScalarFieldEnum[] | DenunciaScalarFieldEnum
    having?: denunciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DenunciaCountAggregateInputType | true
    _avg?: DenunciaAvgAggregateInputType
    _sum?: DenunciaSumAggregateInputType
    _min?: DenunciaMinAggregateInputType
    _max?: DenunciaMaxAggregateInputType
  }

  export type DenunciaGroupByOutputType = {
    id: number
    arquivo: string
    descricao: string
    _count: DenunciaCountAggregateOutputType | null
    _avg: DenunciaAvgAggregateOutputType | null
    _sum: DenunciaSumAggregateOutputType | null
    _min: DenunciaMinAggregateOutputType | null
    _max: DenunciaMaxAggregateOutputType | null
  }

  type GetDenunciaGroupByPayload<T extends denunciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DenunciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DenunciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DenunciaGroupByOutputType[P]>
            : GetScalarType<T[P], DenunciaGroupByOutputType[P]>
        }
      >
    >


  export type denunciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    arquivo?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["denuncia"]>


  export type denunciaSelectScalar = {
    id?: boolean
    arquivo?: boolean
    descricao?: boolean
  }


  export type $denunciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "denuncia"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      arquivo: string
      descricao: string
    }, ExtArgs["result"]["denuncia"]>
    composites: {}
  }

  type denunciaGetPayload<S extends boolean | null | undefined | denunciaDefaultArgs> = $Result.GetResult<Prisma.$denunciaPayload, S>

  type denunciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<denunciaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DenunciaCountAggregateInputType | true
    }

  export interface denunciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['denuncia'], meta: { name: 'denuncia' } }
    /**
     * Find zero or one Denuncia that matches the filter.
     * @param {denunciaFindUniqueArgs} args - Arguments to find a Denuncia
     * @example
     * // Get one Denuncia
     * const denuncia = await prisma.denuncia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends denunciaFindUniqueArgs>(args: SelectSubset<T, denunciaFindUniqueArgs<ExtArgs>>): Prisma__denunciaClient<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Denuncia that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {denunciaFindUniqueOrThrowArgs} args - Arguments to find a Denuncia
     * @example
     * // Get one Denuncia
     * const denuncia = await prisma.denuncia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends denunciaFindUniqueOrThrowArgs>(args: SelectSubset<T, denunciaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__denunciaClient<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Denuncia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {denunciaFindFirstArgs} args - Arguments to find a Denuncia
     * @example
     * // Get one Denuncia
     * const denuncia = await prisma.denuncia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends denunciaFindFirstArgs>(args?: SelectSubset<T, denunciaFindFirstArgs<ExtArgs>>): Prisma__denunciaClient<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Denuncia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {denunciaFindFirstOrThrowArgs} args - Arguments to find a Denuncia
     * @example
     * // Get one Denuncia
     * const denuncia = await prisma.denuncia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends denunciaFindFirstOrThrowArgs>(args?: SelectSubset<T, denunciaFindFirstOrThrowArgs<ExtArgs>>): Prisma__denunciaClient<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Denuncias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {denunciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Denuncias
     * const denuncias = await prisma.denuncia.findMany()
     * 
     * // Get first 10 Denuncias
     * const denuncias = await prisma.denuncia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const denunciaWithIdOnly = await prisma.denuncia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends denunciaFindManyArgs>(args?: SelectSubset<T, denunciaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Denuncia.
     * @param {denunciaCreateArgs} args - Arguments to create a Denuncia.
     * @example
     * // Create one Denuncia
     * const Denuncia = await prisma.denuncia.create({
     *   data: {
     *     // ... data to create a Denuncia
     *   }
     * })
     * 
     */
    create<T extends denunciaCreateArgs>(args: SelectSubset<T, denunciaCreateArgs<ExtArgs>>): Prisma__denunciaClient<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Denuncias.
     * @param {denunciaCreateManyArgs} args - Arguments to create many Denuncias.
     * @example
     * // Create many Denuncias
     * const denuncia = await prisma.denuncia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends denunciaCreateManyArgs>(args?: SelectSubset<T, denunciaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Denuncia.
     * @param {denunciaDeleteArgs} args - Arguments to delete one Denuncia.
     * @example
     * // Delete one Denuncia
     * const Denuncia = await prisma.denuncia.delete({
     *   where: {
     *     // ... filter to delete one Denuncia
     *   }
     * })
     * 
     */
    delete<T extends denunciaDeleteArgs>(args: SelectSubset<T, denunciaDeleteArgs<ExtArgs>>): Prisma__denunciaClient<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Denuncia.
     * @param {denunciaUpdateArgs} args - Arguments to update one Denuncia.
     * @example
     * // Update one Denuncia
     * const denuncia = await prisma.denuncia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends denunciaUpdateArgs>(args: SelectSubset<T, denunciaUpdateArgs<ExtArgs>>): Prisma__denunciaClient<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Denuncias.
     * @param {denunciaDeleteManyArgs} args - Arguments to filter Denuncias to delete.
     * @example
     * // Delete a few Denuncias
     * const { count } = await prisma.denuncia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends denunciaDeleteManyArgs>(args?: SelectSubset<T, denunciaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Denuncias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {denunciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Denuncias
     * const denuncia = await prisma.denuncia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends denunciaUpdateManyArgs>(args: SelectSubset<T, denunciaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Denuncia.
     * @param {denunciaUpsertArgs} args - Arguments to update or create a Denuncia.
     * @example
     * // Update or create a Denuncia
     * const denuncia = await prisma.denuncia.upsert({
     *   create: {
     *     // ... data to create a Denuncia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Denuncia we want to update
     *   }
     * })
     */
    upsert<T extends denunciaUpsertArgs>(args: SelectSubset<T, denunciaUpsertArgs<ExtArgs>>): Prisma__denunciaClient<$Result.GetResult<Prisma.$denunciaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Denuncias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {denunciaCountArgs} args - Arguments to filter Denuncias to count.
     * @example
     * // Count the number of Denuncias
     * const count = await prisma.denuncia.count({
     *   where: {
     *     // ... the filter for the Denuncias we want to count
     *   }
     * })
    **/
    count<T extends denunciaCountArgs>(
      args?: Subset<T, denunciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DenunciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Denuncia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DenunciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DenunciaAggregateArgs>(args: Subset<T, DenunciaAggregateArgs>): Prisma.PrismaPromise<GetDenunciaAggregateType<T>>

    /**
     * Group by Denuncia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {denunciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends denunciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: denunciaGroupByArgs['orderBy'] }
        : { orderBy?: denunciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, denunciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDenunciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the denuncia model
   */
  readonly fields: denunciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for denuncia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__denunciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the denuncia model
   */ 
  interface denunciaFieldRefs {
    readonly id: FieldRef<"denuncia", 'Int'>
    readonly arquivo: FieldRef<"denuncia", 'String'>
    readonly descricao: FieldRef<"denuncia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * denuncia findUnique
   */
  export type denunciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * Filter, which denuncia to fetch.
     */
    where: denunciaWhereUniqueInput
  }

  /**
   * denuncia findUniqueOrThrow
   */
  export type denunciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * Filter, which denuncia to fetch.
     */
    where: denunciaWhereUniqueInput
  }

  /**
   * denuncia findFirst
   */
  export type denunciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * Filter, which denuncia to fetch.
     */
    where?: denunciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of denuncias to fetch.
     */
    orderBy?: denunciaOrderByWithRelationInput | denunciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for denuncias.
     */
    cursor?: denunciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` denuncias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` denuncias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of denuncias.
     */
    distinct?: DenunciaScalarFieldEnum | DenunciaScalarFieldEnum[]
  }

  /**
   * denuncia findFirstOrThrow
   */
  export type denunciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * Filter, which denuncia to fetch.
     */
    where?: denunciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of denuncias to fetch.
     */
    orderBy?: denunciaOrderByWithRelationInput | denunciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for denuncias.
     */
    cursor?: denunciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` denuncias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` denuncias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of denuncias.
     */
    distinct?: DenunciaScalarFieldEnum | DenunciaScalarFieldEnum[]
  }

  /**
   * denuncia findMany
   */
  export type denunciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * Filter, which denuncias to fetch.
     */
    where?: denunciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of denuncias to fetch.
     */
    orderBy?: denunciaOrderByWithRelationInput | denunciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing denuncias.
     */
    cursor?: denunciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` denuncias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` denuncias.
     */
    skip?: number
    distinct?: DenunciaScalarFieldEnum | DenunciaScalarFieldEnum[]
  }

  /**
   * denuncia create
   */
  export type denunciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * The data needed to create a denuncia.
     */
    data: XOR<denunciaCreateInput, denunciaUncheckedCreateInput>
  }

  /**
   * denuncia createMany
   */
  export type denunciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many denuncias.
     */
    data: denunciaCreateManyInput | denunciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * denuncia update
   */
  export type denunciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * The data needed to update a denuncia.
     */
    data: XOR<denunciaUpdateInput, denunciaUncheckedUpdateInput>
    /**
     * Choose, which denuncia to update.
     */
    where: denunciaWhereUniqueInput
  }

  /**
   * denuncia updateMany
   */
  export type denunciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update denuncias.
     */
    data: XOR<denunciaUpdateManyMutationInput, denunciaUncheckedUpdateManyInput>
    /**
     * Filter which denuncias to update
     */
    where?: denunciaWhereInput
  }

  /**
   * denuncia upsert
   */
  export type denunciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * The filter to search for the denuncia to update in case it exists.
     */
    where: denunciaWhereUniqueInput
    /**
     * In case the denuncia found by the `where` argument doesn't exist, create a new denuncia with this data.
     */
    create: XOR<denunciaCreateInput, denunciaUncheckedCreateInput>
    /**
     * In case the denuncia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<denunciaUpdateInput, denunciaUncheckedUpdateInput>
  }

  /**
   * denuncia delete
   */
  export type denunciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
    /**
     * Filter which denuncia to delete.
     */
    where: denunciaWhereUniqueInput
  }

  /**
   * denuncia deleteMany
   */
  export type denunciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which denuncias to delete
     */
    where?: denunciaWhereInput
  }

  /**
   * denuncia without action
   */
  export type denunciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the denuncia
     */
    select?: denunciaSelect<ExtArgs> | null
  }


  /**
   * Model disputa
   */

  export type AggregateDisputa = {
    _count: DisputaCountAggregateOutputType | null
    _avg: DisputaAvgAggregateOutputType | null
    _sum: DisputaSumAggregateOutputType | null
    _min: DisputaMinAggregateOutputType | null
    _max: DisputaMaxAggregateOutputType | null
  }

  export type DisputaAvgAggregateOutputType = {
    id: number | null
    id_denuncia: number | null
    id_denunciante: number | null
    id_denunciado: number | null
  }

  export type DisputaSumAggregateOutputType = {
    id: number | null
    id_denuncia: number | null
    id_denunciante: number | null
    id_denunciado: number | null
  }

  export type DisputaMinAggregateOutputType = {
    id: number | null
    id_denuncia: number | null
    id_denunciante: number | null
    tipo_denunciante: $Enums.disputa_tipo_denunciante | null
    id_denunciado: number | null
    tipo_denunciado: $Enums.disputa_tipo_denunciado | null
    situacao: $Enums.disputa_situacao | null
  }

  export type DisputaMaxAggregateOutputType = {
    id: number | null
    id_denuncia: number | null
    id_denunciante: number | null
    tipo_denunciante: $Enums.disputa_tipo_denunciante | null
    id_denunciado: number | null
    tipo_denunciado: $Enums.disputa_tipo_denunciado | null
    situacao: $Enums.disputa_situacao | null
  }

  export type DisputaCountAggregateOutputType = {
    id: number
    id_denuncia: number
    id_denunciante: number
    tipo_denunciante: number
    id_denunciado: number
    tipo_denunciado: number
    situacao: number
    _all: number
  }


  export type DisputaAvgAggregateInputType = {
    id?: true
    id_denuncia?: true
    id_denunciante?: true
    id_denunciado?: true
  }

  export type DisputaSumAggregateInputType = {
    id?: true
    id_denuncia?: true
    id_denunciante?: true
    id_denunciado?: true
  }

  export type DisputaMinAggregateInputType = {
    id?: true
    id_denuncia?: true
    id_denunciante?: true
    tipo_denunciante?: true
    id_denunciado?: true
    tipo_denunciado?: true
    situacao?: true
  }

  export type DisputaMaxAggregateInputType = {
    id?: true
    id_denuncia?: true
    id_denunciante?: true
    tipo_denunciante?: true
    id_denunciado?: true
    tipo_denunciado?: true
    situacao?: true
  }

  export type DisputaCountAggregateInputType = {
    id?: true
    id_denuncia?: true
    id_denunciante?: true
    tipo_denunciante?: true
    id_denunciado?: true
    tipo_denunciado?: true
    situacao?: true
    _all?: true
  }

  export type DisputaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disputa to aggregate.
     */
    where?: disputaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disputas to fetch.
     */
    orderBy?: disputaOrderByWithRelationInput | disputaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disputaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disputas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disputas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disputas
    **/
    _count?: true | DisputaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DisputaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DisputaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DisputaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DisputaMaxAggregateInputType
  }

  export type GetDisputaAggregateType<T extends DisputaAggregateArgs> = {
        [P in keyof T & keyof AggregateDisputa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisputa[P]>
      : GetScalarType<T[P], AggregateDisputa[P]>
  }




  export type disputaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disputaWhereInput
    orderBy?: disputaOrderByWithAggregationInput | disputaOrderByWithAggregationInput[]
    by: DisputaScalarFieldEnum[] | DisputaScalarFieldEnum
    having?: disputaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DisputaCountAggregateInputType | true
    _avg?: DisputaAvgAggregateInputType
    _sum?: DisputaSumAggregateInputType
    _min?: DisputaMinAggregateInputType
    _max?: DisputaMaxAggregateInputType
  }

  export type DisputaGroupByOutputType = {
    id: number
    id_denuncia: number
    id_denunciante: number
    tipo_denunciante: $Enums.disputa_tipo_denunciante
    id_denunciado: number
    tipo_denunciado: $Enums.disputa_tipo_denunciado
    situacao: $Enums.disputa_situacao
    _count: DisputaCountAggregateOutputType | null
    _avg: DisputaAvgAggregateOutputType | null
    _sum: DisputaSumAggregateOutputType | null
    _min: DisputaMinAggregateOutputType | null
    _max: DisputaMaxAggregateOutputType | null
  }

  type GetDisputaGroupByPayload<T extends disputaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DisputaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DisputaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DisputaGroupByOutputType[P]>
            : GetScalarType<T[P], DisputaGroupByOutputType[P]>
        }
      >
    >


  export type disputaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_denuncia?: boolean
    id_denunciante?: boolean
    tipo_denunciante?: boolean
    id_denunciado?: boolean
    tipo_denunciado?: boolean
    situacao?: boolean
  }, ExtArgs["result"]["disputa"]>


  export type disputaSelectScalar = {
    id?: boolean
    id_denuncia?: boolean
    id_denunciante?: boolean
    tipo_denunciante?: boolean
    id_denunciado?: boolean
    tipo_denunciado?: boolean
    situacao?: boolean
  }


  export type $disputaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disputa"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_denuncia: number
      id_denunciante: number
      tipo_denunciante: $Enums.disputa_tipo_denunciante
      id_denunciado: number
      tipo_denunciado: $Enums.disputa_tipo_denunciado
      situacao: $Enums.disputa_situacao
    }, ExtArgs["result"]["disputa"]>
    composites: {}
  }

  type disputaGetPayload<S extends boolean | null | undefined | disputaDefaultArgs> = $Result.GetResult<Prisma.$disputaPayload, S>

  type disputaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<disputaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DisputaCountAggregateInputType | true
    }

  export interface disputaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disputa'], meta: { name: 'disputa' } }
    /**
     * Find zero or one Disputa that matches the filter.
     * @param {disputaFindUniqueArgs} args - Arguments to find a Disputa
     * @example
     * // Get one Disputa
     * const disputa = await prisma.disputa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends disputaFindUniqueArgs>(args: SelectSubset<T, disputaFindUniqueArgs<ExtArgs>>): Prisma__disputaClient<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Disputa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {disputaFindUniqueOrThrowArgs} args - Arguments to find a Disputa
     * @example
     * // Get one Disputa
     * const disputa = await prisma.disputa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends disputaFindUniqueOrThrowArgs>(args: SelectSubset<T, disputaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__disputaClient<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Disputa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disputaFindFirstArgs} args - Arguments to find a Disputa
     * @example
     * // Get one Disputa
     * const disputa = await prisma.disputa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends disputaFindFirstArgs>(args?: SelectSubset<T, disputaFindFirstArgs<ExtArgs>>): Prisma__disputaClient<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Disputa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disputaFindFirstOrThrowArgs} args - Arguments to find a Disputa
     * @example
     * // Get one Disputa
     * const disputa = await prisma.disputa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends disputaFindFirstOrThrowArgs>(args?: SelectSubset<T, disputaFindFirstOrThrowArgs<ExtArgs>>): Prisma__disputaClient<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Disputas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disputaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disputas
     * const disputas = await prisma.disputa.findMany()
     * 
     * // Get first 10 Disputas
     * const disputas = await prisma.disputa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const disputaWithIdOnly = await prisma.disputa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends disputaFindManyArgs>(args?: SelectSubset<T, disputaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Disputa.
     * @param {disputaCreateArgs} args - Arguments to create a Disputa.
     * @example
     * // Create one Disputa
     * const Disputa = await prisma.disputa.create({
     *   data: {
     *     // ... data to create a Disputa
     *   }
     * })
     * 
     */
    create<T extends disputaCreateArgs>(args: SelectSubset<T, disputaCreateArgs<ExtArgs>>): Prisma__disputaClient<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Disputas.
     * @param {disputaCreateManyArgs} args - Arguments to create many Disputas.
     * @example
     * // Create many Disputas
     * const disputa = await prisma.disputa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends disputaCreateManyArgs>(args?: SelectSubset<T, disputaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Disputa.
     * @param {disputaDeleteArgs} args - Arguments to delete one Disputa.
     * @example
     * // Delete one Disputa
     * const Disputa = await prisma.disputa.delete({
     *   where: {
     *     // ... filter to delete one Disputa
     *   }
     * })
     * 
     */
    delete<T extends disputaDeleteArgs>(args: SelectSubset<T, disputaDeleteArgs<ExtArgs>>): Prisma__disputaClient<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Disputa.
     * @param {disputaUpdateArgs} args - Arguments to update one Disputa.
     * @example
     * // Update one Disputa
     * const disputa = await prisma.disputa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends disputaUpdateArgs>(args: SelectSubset<T, disputaUpdateArgs<ExtArgs>>): Prisma__disputaClient<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Disputas.
     * @param {disputaDeleteManyArgs} args - Arguments to filter Disputas to delete.
     * @example
     * // Delete a few Disputas
     * const { count } = await prisma.disputa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends disputaDeleteManyArgs>(args?: SelectSubset<T, disputaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disputas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disputaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disputas
     * const disputa = await prisma.disputa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends disputaUpdateManyArgs>(args: SelectSubset<T, disputaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Disputa.
     * @param {disputaUpsertArgs} args - Arguments to update or create a Disputa.
     * @example
     * // Update or create a Disputa
     * const disputa = await prisma.disputa.upsert({
     *   create: {
     *     // ... data to create a Disputa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disputa we want to update
     *   }
     * })
     */
    upsert<T extends disputaUpsertArgs>(args: SelectSubset<T, disputaUpsertArgs<ExtArgs>>): Prisma__disputaClient<$Result.GetResult<Prisma.$disputaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Disputas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disputaCountArgs} args - Arguments to filter Disputas to count.
     * @example
     * // Count the number of Disputas
     * const count = await prisma.disputa.count({
     *   where: {
     *     // ... the filter for the Disputas we want to count
     *   }
     * })
    **/
    count<T extends disputaCountArgs>(
      args?: Subset<T, disputaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DisputaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disputa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisputaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DisputaAggregateArgs>(args: Subset<T, DisputaAggregateArgs>): Prisma.PrismaPromise<GetDisputaAggregateType<T>>

    /**
     * Group by Disputa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disputaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disputaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disputaGroupByArgs['orderBy'] }
        : { orderBy?: disputaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disputaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisputaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disputa model
   */
  readonly fields: disputaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disputa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disputaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the disputa model
   */ 
  interface disputaFieldRefs {
    readonly id: FieldRef<"disputa", 'Int'>
    readonly id_denuncia: FieldRef<"disputa", 'Int'>
    readonly id_denunciante: FieldRef<"disputa", 'Int'>
    readonly tipo_denunciante: FieldRef<"disputa", 'disputa_tipo_denunciante'>
    readonly id_denunciado: FieldRef<"disputa", 'Int'>
    readonly tipo_denunciado: FieldRef<"disputa", 'disputa_tipo_denunciado'>
    readonly situacao: FieldRef<"disputa", 'disputa_situacao'>
  }
    

  // Custom InputTypes
  /**
   * disputa findUnique
   */
  export type disputaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * Filter, which disputa to fetch.
     */
    where: disputaWhereUniqueInput
  }

  /**
   * disputa findUniqueOrThrow
   */
  export type disputaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * Filter, which disputa to fetch.
     */
    where: disputaWhereUniqueInput
  }

  /**
   * disputa findFirst
   */
  export type disputaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * Filter, which disputa to fetch.
     */
    where?: disputaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disputas to fetch.
     */
    orderBy?: disputaOrderByWithRelationInput | disputaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disputas.
     */
    cursor?: disputaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disputas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disputas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disputas.
     */
    distinct?: DisputaScalarFieldEnum | DisputaScalarFieldEnum[]
  }

  /**
   * disputa findFirstOrThrow
   */
  export type disputaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * Filter, which disputa to fetch.
     */
    where?: disputaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disputas to fetch.
     */
    orderBy?: disputaOrderByWithRelationInput | disputaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disputas.
     */
    cursor?: disputaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disputas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disputas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disputas.
     */
    distinct?: DisputaScalarFieldEnum | DisputaScalarFieldEnum[]
  }

  /**
   * disputa findMany
   */
  export type disputaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * Filter, which disputas to fetch.
     */
    where?: disputaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disputas to fetch.
     */
    orderBy?: disputaOrderByWithRelationInput | disputaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disputas.
     */
    cursor?: disputaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disputas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disputas.
     */
    skip?: number
    distinct?: DisputaScalarFieldEnum | DisputaScalarFieldEnum[]
  }

  /**
   * disputa create
   */
  export type disputaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * The data needed to create a disputa.
     */
    data: XOR<disputaCreateInput, disputaUncheckedCreateInput>
  }

  /**
   * disputa createMany
   */
  export type disputaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disputas.
     */
    data: disputaCreateManyInput | disputaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * disputa update
   */
  export type disputaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * The data needed to update a disputa.
     */
    data: XOR<disputaUpdateInput, disputaUncheckedUpdateInput>
    /**
     * Choose, which disputa to update.
     */
    where: disputaWhereUniqueInput
  }

  /**
   * disputa updateMany
   */
  export type disputaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disputas.
     */
    data: XOR<disputaUpdateManyMutationInput, disputaUncheckedUpdateManyInput>
    /**
     * Filter which disputas to update
     */
    where?: disputaWhereInput
  }

  /**
   * disputa upsert
   */
  export type disputaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * The filter to search for the disputa to update in case it exists.
     */
    where: disputaWhereUniqueInput
    /**
     * In case the disputa found by the `where` argument doesn't exist, create a new disputa with this data.
     */
    create: XOR<disputaCreateInput, disputaUncheckedCreateInput>
    /**
     * In case the disputa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disputaUpdateInput, disputaUncheckedUpdateInput>
  }

  /**
   * disputa delete
   */
  export type disputaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
    /**
     * Filter which disputa to delete.
     */
    where: disputaWhereUniqueInput
  }

  /**
   * disputa deleteMany
   */
  export type disputaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disputas to delete
     */
    where?: disputaWhereInput
  }

  /**
   * disputa without action
   */
  export type disputaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disputa
     */
    select?: disputaSelect<ExtArgs> | null
  }


  /**
   * Model solicitacao_pagamento
   */

  export type AggregateSolicitacao_pagamento = {
    _count: Solicitacao_pagamentoCountAggregateOutputType | null
    _avg: Solicitacao_pagamentoAvgAggregateOutputType | null
    _sum: Solicitacao_pagamentoSumAggregateOutputType | null
    _min: Solicitacao_pagamentoMinAggregateOutputType | null
    _max: Solicitacao_pagamentoMaxAggregateOutputType | null
  }

  export type Solicitacao_pagamentoAvgAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    valor_solicitado: Decimal | null
  }

  export type Solicitacao_pagamentoSumAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    valor_solicitado: Decimal | null
  }

  export type Solicitacao_pagamentoMinAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    valor_solicitado: Decimal | null
    banco: string | null
    agencia: string | null
    numero_conta: string | null
    tipo_conta: string | null
    nome_completo_titular: string | null
    cpf: string | null
    status_pago: boolean | null
  }

  export type Solicitacao_pagamentoMaxAggregateOutputType = {
    id: number | null
    id_freelancer: number | null
    valor_solicitado: Decimal | null
    banco: string | null
    agencia: string | null
    numero_conta: string | null
    tipo_conta: string | null
    nome_completo_titular: string | null
    cpf: string | null
    status_pago: boolean | null
  }

  export type Solicitacao_pagamentoCountAggregateOutputType = {
    id: number
    id_freelancer: number
    valor_solicitado: number
    banco: number
    agencia: number
    numero_conta: number
    tipo_conta: number
    nome_completo_titular: number
    cpf: number
    status_pago: number
    _all: number
  }


  export type Solicitacao_pagamentoAvgAggregateInputType = {
    id?: true
    id_freelancer?: true
    valor_solicitado?: true
  }

  export type Solicitacao_pagamentoSumAggregateInputType = {
    id?: true
    id_freelancer?: true
    valor_solicitado?: true
  }

  export type Solicitacao_pagamentoMinAggregateInputType = {
    id?: true
    id_freelancer?: true
    valor_solicitado?: true
    banco?: true
    agencia?: true
    numero_conta?: true
    tipo_conta?: true
    nome_completo_titular?: true
    cpf?: true
    status_pago?: true
  }

  export type Solicitacao_pagamentoMaxAggregateInputType = {
    id?: true
    id_freelancer?: true
    valor_solicitado?: true
    banco?: true
    agencia?: true
    numero_conta?: true
    tipo_conta?: true
    nome_completo_titular?: true
    cpf?: true
    status_pago?: true
  }

  export type Solicitacao_pagamentoCountAggregateInputType = {
    id?: true
    id_freelancer?: true
    valor_solicitado?: true
    banco?: true
    agencia?: true
    numero_conta?: true
    tipo_conta?: true
    nome_completo_titular?: true
    cpf?: true
    status_pago?: true
    _all?: true
  }

  export type Solicitacao_pagamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which solicitacao_pagamento to aggregate.
     */
    where?: solicitacao_pagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacao_pagamentos to fetch.
     */
    orderBy?: solicitacao_pagamentoOrderByWithRelationInput | solicitacao_pagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: solicitacao_pagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacao_pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacao_pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned solicitacao_pagamentos
    **/
    _count?: true | Solicitacao_pagamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Solicitacao_pagamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Solicitacao_pagamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Solicitacao_pagamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Solicitacao_pagamentoMaxAggregateInputType
  }

  export type GetSolicitacao_pagamentoAggregateType<T extends Solicitacao_pagamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateSolicitacao_pagamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSolicitacao_pagamento[P]>
      : GetScalarType<T[P], AggregateSolicitacao_pagamento[P]>
  }




  export type solicitacao_pagamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: solicitacao_pagamentoWhereInput
    orderBy?: solicitacao_pagamentoOrderByWithAggregationInput | solicitacao_pagamentoOrderByWithAggregationInput[]
    by: Solicitacao_pagamentoScalarFieldEnum[] | Solicitacao_pagamentoScalarFieldEnum
    having?: solicitacao_pagamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Solicitacao_pagamentoCountAggregateInputType | true
    _avg?: Solicitacao_pagamentoAvgAggregateInputType
    _sum?: Solicitacao_pagamentoSumAggregateInputType
    _min?: Solicitacao_pagamentoMinAggregateInputType
    _max?: Solicitacao_pagamentoMaxAggregateInputType
  }

  export type Solicitacao_pagamentoGroupByOutputType = {
    id: number
    id_freelancer: number
    valor_solicitado: Decimal
    banco: string
    agencia: string
    numero_conta: string
    tipo_conta: string
    nome_completo_titular: string
    cpf: string
    status_pago: boolean
    _count: Solicitacao_pagamentoCountAggregateOutputType | null
    _avg: Solicitacao_pagamentoAvgAggregateOutputType | null
    _sum: Solicitacao_pagamentoSumAggregateOutputType | null
    _min: Solicitacao_pagamentoMinAggregateOutputType | null
    _max: Solicitacao_pagamentoMaxAggregateOutputType | null
  }

  type GetSolicitacao_pagamentoGroupByPayload<T extends solicitacao_pagamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Solicitacao_pagamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Solicitacao_pagamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Solicitacao_pagamentoGroupByOutputType[P]>
            : GetScalarType<T[P], Solicitacao_pagamentoGroupByOutputType[P]>
        }
      >
    >


  export type solicitacao_pagamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_freelancer?: boolean
    valor_solicitado?: boolean
    banco?: boolean
    agencia?: boolean
    numero_conta?: boolean
    tipo_conta?: boolean
    nome_completo_titular?: boolean
    cpf?: boolean
    status_pago?: boolean
  }, ExtArgs["result"]["solicitacao_pagamento"]>


  export type solicitacao_pagamentoSelectScalar = {
    id?: boolean
    id_freelancer?: boolean
    valor_solicitado?: boolean
    banco?: boolean
    agencia?: boolean
    numero_conta?: boolean
    tipo_conta?: boolean
    nome_completo_titular?: boolean
    cpf?: boolean
    status_pago?: boolean
  }


  export type $solicitacao_pagamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "solicitacao_pagamento"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_freelancer: number
      valor_solicitado: Prisma.Decimal
      banco: string
      agencia: string
      numero_conta: string
      tipo_conta: string
      nome_completo_titular: string
      cpf: string
      status_pago: boolean
    }, ExtArgs["result"]["solicitacao_pagamento"]>
    composites: {}
  }

  type solicitacao_pagamentoGetPayload<S extends boolean | null | undefined | solicitacao_pagamentoDefaultArgs> = $Result.GetResult<Prisma.$solicitacao_pagamentoPayload, S>

  type solicitacao_pagamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<solicitacao_pagamentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Solicitacao_pagamentoCountAggregateInputType | true
    }

  export interface solicitacao_pagamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['solicitacao_pagamento'], meta: { name: 'solicitacao_pagamento' } }
    /**
     * Find zero or one Solicitacao_pagamento that matches the filter.
     * @param {solicitacao_pagamentoFindUniqueArgs} args - Arguments to find a Solicitacao_pagamento
     * @example
     * // Get one Solicitacao_pagamento
     * const solicitacao_pagamento = await prisma.solicitacao_pagamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends solicitacao_pagamentoFindUniqueArgs>(args: SelectSubset<T, solicitacao_pagamentoFindUniqueArgs<ExtArgs>>): Prisma__solicitacao_pagamentoClient<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Solicitacao_pagamento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {solicitacao_pagamentoFindUniqueOrThrowArgs} args - Arguments to find a Solicitacao_pagamento
     * @example
     * // Get one Solicitacao_pagamento
     * const solicitacao_pagamento = await prisma.solicitacao_pagamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends solicitacao_pagamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, solicitacao_pagamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__solicitacao_pagamentoClient<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Solicitacao_pagamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacao_pagamentoFindFirstArgs} args - Arguments to find a Solicitacao_pagamento
     * @example
     * // Get one Solicitacao_pagamento
     * const solicitacao_pagamento = await prisma.solicitacao_pagamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends solicitacao_pagamentoFindFirstArgs>(args?: SelectSubset<T, solicitacao_pagamentoFindFirstArgs<ExtArgs>>): Prisma__solicitacao_pagamentoClient<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Solicitacao_pagamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacao_pagamentoFindFirstOrThrowArgs} args - Arguments to find a Solicitacao_pagamento
     * @example
     * // Get one Solicitacao_pagamento
     * const solicitacao_pagamento = await prisma.solicitacao_pagamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends solicitacao_pagamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, solicitacao_pagamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__solicitacao_pagamentoClient<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Solicitacao_pagamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacao_pagamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Solicitacao_pagamentos
     * const solicitacao_pagamentos = await prisma.solicitacao_pagamento.findMany()
     * 
     * // Get first 10 Solicitacao_pagamentos
     * const solicitacao_pagamentos = await prisma.solicitacao_pagamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const solicitacao_pagamentoWithIdOnly = await prisma.solicitacao_pagamento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends solicitacao_pagamentoFindManyArgs>(args?: SelectSubset<T, solicitacao_pagamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Solicitacao_pagamento.
     * @param {solicitacao_pagamentoCreateArgs} args - Arguments to create a Solicitacao_pagamento.
     * @example
     * // Create one Solicitacao_pagamento
     * const Solicitacao_pagamento = await prisma.solicitacao_pagamento.create({
     *   data: {
     *     // ... data to create a Solicitacao_pagamento
     *   }
     * })
     * 
     */
    create<T extends solicitacao_pagamentoCreateArgs>(args: SelectSubset<T, solicitacao_pagamentoCreateArgs<ExtArgs>>): Prisma__solicitacao_pagamentoClient<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Solicitacao_pagamentos.
     * @param {solicitacao_pagamentoCreateManyArgs} args - Arguments to create many Solicitacao_pagamentos.
     * @example
     * // Create many Solicitacao_pagamentos
     * const solicitacao_pagamento = await prisma.solicitacao_pagamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends solicitacao_pagamentoCreateManyArgs>(args?: SelectSubset<T, solicitacao_pagamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Solicitacao_pagamento.
     * @param {solicitacao_pagamentoDeleteArgs} args - Arguments to delete one Solicitacao_pagamento.
     * @example
     * // Delete one Solicitacao_pagamento
     * const Solicitacao_pagamento = await prisma.solicitacao_pagamento.delete({
     *   where: {
     *     // ... filter to delete one Solicitacao_pagamento
     *   }
     * })
     * 
     */
    delete<T extends solicitacao_pagamentoDeleteArgs>(args: SelectSubset<T, solicitacao_pagamentoDeleteArgs<ExtArgs>>): Prisma__solicitacao_pagamentoClient<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Solicitacao_pagamento.
     * @param {solicitacao_pagamentoUpdateArgs} args - Arguments to update one Solicitacao_pagamento.
     * @example
     * // Update one Solicitacao_pagamento
     * const solicitacao_pagamento = await prisma.solicitacao_pagamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends solicitacao_pagamentoUpdateArgs>(args: SelectSubset<T, solicitacao_pagamentoUpdateArgs<ExtArgs>>): Prisma__solicitacao_pagamentoClient<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Solicitacao_pagamentos.
     * @param {solicitacao_pagamentoDeleteManyArgs} args - Arguments to filter Solicitacao_pagamentos to delete.
     * @example
     * // Delete a few Solicitacao_pagamentos
     * const { count } = await prisma.solicitacao_pagamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends solicitacao_pagamentoDeleteManyArgs>(args?: SelectSubset<T, solicitacao_pagamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Solicitacao_pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacao_pagamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Solicitacao_pagamentos
     * const solicitacao_pagamento = await prisma.solicitacao_pagamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends solicitacao_pagamentoUpdateManyArgs>(args: SelectSubset<T, solicitacao_pagamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Solicitacao_pagamento.
     * @param {solicitacao_pagamentoUpsertArgs} args - Arguments to update or create a Solicitacao_pagamento.
     * @example
     * // Update or create a Solicitacao_pagamento
     * const solicitacao_pagamento = await prisma.solicitacao_pagamento.upsert({
     *   create: {
     *     // ... data to create a Solicitacao_pagamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Solicitacao_pagamento we want to update
     *   }
     * })
     */
    upsert<T extends solicitacao_pagamentoUpsertArgs>(args: SelectSubset<T, solicitacao_pagamentoUpsertArgs<ExtArgs>>): Prisma__solicitacao_pagamentoClient<$Result.GetResult<Prisma.$solicitacao_pagamentoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Solicitacao_pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacao_pagamentoCountArgs} args - Arguments to filter Solicitacao_pagamentos to count.
     * @example
     * // Count the number of Solicitacao_pagamentos
     * const count = await prisma.solicitacao_pagamento.count({
     *   where: {
     *     // ... the filter for the Solicitacao_pagamentos we want to count
     *   }
     * })
    **/
    count<T extends solicitacao_pagamentoCountArgs>(
      args?: Subset<T, solicitacao_pagamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Solicitacao_pagamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Solicitacao_pagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Solicitacao_pagamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Solicitacao_pagamentoAggregateArgs>(args: Subset<T, Solicitacao_pagamentoAggregateArgs>): Prisma.PrismaPromise<GetSolicitacao_pagamentoAggregateType<T>>

    /**
     * Group by Solicitacao_pagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacao_pagamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends solicitacao_pagamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: solicitacao_pagamentoGroupByArgs['orderBy'] }
        : { orderBy?: solicitacao_pagamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, solicitacao_pagamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSolicitacao_pagamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the solicitacao_pagamento model
   */
  readonly fields: solicitacao_pagamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for solicitacao_pagamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__solicitacao_pagamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the solicitacao_pagamento model
   */ 
  interface solicitacao_pagamentoFieldRefs {
    readonly id: FieldRef<"solicitacao_pagamento", 'Int'>
    readonly id_freelancer: FieldRef<"solicitacao_pagamento", 'Int'>
    readonly valor_solicitado: FieldRef<"solicitacao_pagamento", 'Decimal'>
    readonly banco: FieldRef<"solicitacao_pagamento", 'String'>
    readonly agencia: FieldRef<"solicitacao_pagamento", 'String'>
    readonly numero_conta: FieldRef<"solicitacao_pagamento", 'String'>
    readonly tipo_conta: FieldRef<"solicitacao_pagamento", 'String'>
    readonly nome_completo_titular: FieldRef<"solicitacao_pagamento", 'String'>
    readonly cpf: FieldRef<"solicitacao_pagamento", 'String'>
    readonly status_pago: FieldRef<"solicitacao_pagamento", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * solicitacao_pagamento findUnique
   */
  export type solicitacao_pagamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * Filter, which solicitacao_pagamento to fetch.
     */
    where: solicitacao_pagamentoWhereUniqueInput
  }

  /**
   * solicitacao_pagamento findUniqueOrThrow
   */
  export type solicitacao_pagamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * Filter, which solicitacao_pagamento to fetch.
     */
    where: solicitacao_pagamentoWhereUniqueInput
  }

  /**
   * solicitacao_pagamento findFirst
   */
  export type solicitacao_pagamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * Filter, which solicitacao_pagamento to fetch.
     */
    where?: solicitacao_pagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacao_pagamentos to fetch.
     */
    orderBy?: solicitacao_pagamentoOrderByWithRelationInput | solicitacao_pagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for solicitacao_pagamentos.
     */
    cursor?: solicitacao_pagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacao_pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacao_pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of solicitacao_pagamentos.
     */
    distinct?: Solicitacao_pagamentoScalarFieldEnum | Solicitacao_pagamentoScalarFieldEnum[]
  }

  /**
   * solicitacao_pagamento findFirstOrThrow
   */
  export type solicitacao_pagamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * Filter, which solicitacao_pagamento to fetch.
     */
    where?: solicitacao_pagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacao_pagamentos to fetch.
     */
    orderBy?: solicitacao_pagamentoOrderByWithRelationInput | solicitacao_pagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for solicitacao_pagamentos.
     */
    cursor?: solicitacao_pagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacao_pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacao_pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of solicitacao_pagamentos.
     */
    distinct?: Solicitacao_pagamentoScalarFieldEnum | Solicitacao_pagamentoScalarFieldEnum[]
  }

  /**
   * solicitacao_pagamento findMany
   */
  export type solicitacao_pagamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * Filter, which solicitacao_pagamentos to fetch.
     */
    where?: solicitacao_pagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacao_pagamentos to fetch.
     */
    orderBy?: solicitacao_pagamentoOrderByWithRelationInput | solicitacao_pagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing solicitacao_pagamentos.
     */
    cursor?: solicitacao_pagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacao_pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacao_pagamentos.
     */
    skip?: number
    distinct?: Solicitacao_pagamentoScalarFieldEnum | Solicitacao_pagamentoScalarFieldEnum[]
  }

  /**
   * solicitacao_pagamento create
   */
  export type solicitacao_pagamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * The data needed to create a solicitacao_pagamento.
     */
    data: XOR<solicitacao_pagamentoCreateInput, solicitacao_pagamentoUncheckedCreateInput>
  }

  /**
   * solicitacao_pagamento createMany
   */
  export type solicitacao_pagamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many solicitacao_pagamentos.
     */
    data: solicitacao_pagamentoCreateManyInput | solicitacao_pagamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * solicitacao_pagamento update
   */
  export type solicitacao_pagamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * The data needed to update a solicitacao_pagamento.
     */
    data: XOR<solicitacao_pagamentoUpdateInput, solicitacao_pagamentoUncheckedUpdateInput>
    /**
     * Choose, which solicitacao_pagamento to update.
     */
    where: solicitacao_pagamentoWhereUniqueInput
  }

  /**
   * solicitacao_pagamento updateMany
   */
  export type solicitacao_pagamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update solicitacao_pagamentos.
     */
    data: XOR<solicitacao_pagamentoUpdateManyMutationInput, solicitacao_pagamentoUncheckedUpdateManyInput>
    /**
     * Filter which solicitacao_pagamentos to update
     */
    where?: solicitacao_pagamentoWhereInput
  }

  /**
   * solicitacao_pagamento upsert
   */
  export type solicitacao_pagamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * The filter to search for the solicitacao_pagamento to update in case it exists.
     */
    where: solicitacao_pagamentoWhereUniqueInput
    /**
     * In case the solicitacao_pagamento found by the `where` argument doesn't exist, create a new solicitacao_pagamento with this data.
     */
    create: XOR<solicitacao_pagamentoCreateInput, solicitacao_pagamentoUncheckedCreateInput>
    /**
     * In case the solicitacao_pagamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<solicitacao_pagamentoUpdateInput, solicitacao_pagamentoUncheckedUpdateInput>
  }

  /**
   * solicitacao_pagamento delete
   */
  export type solicitacao_pagamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
    /**
     * Filter which solicitacao_pagamento to delete.
     */
    where: solicitacao_pagamentoWhereUniqueInput
  }

  /**
   * solicitacao_pagamento deleteMany
   */
  export type solicitacao_pagamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which solicitacao_pagamentos to delete
     */
    where?: solicitacao_pagamentoWhereInput
  }

  /**
   * solicitacao_pagamento without action
   */
  export type solicitacao_pagamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao_pagamento
     */
    select?: solicitacao_pagamentoSelect<ExtArgs> | null
  }


  /**
   * Model total_a_receber
   */

  export type AggregateTotal_a_receber = {
    _count: Total_a_receberCountAggregateOutputType | null
    _avg: Total_a_receberAvgAggregateOutputType | null
    _sum: Total_a_receberSumAggregateOutputType | null
    _min: Total_a_receberMinAggregateOutputType | null
    _max: Total_a_receberMaxAggregateOutputType | null
  }

  export type Total_a_receberAvgAggregateOutputType = {
    id_freelancer: number | null
    total: Decimal | null
  }

  export type Total_a_receberSumAggregateOutputType = {
    id_freelancer: number | null
    total: Decimal | null
  }

  export type Total_a_receberMinAggregateOutputType = {
    id_freelancer: number | null
    total: Decimal | null
  }

  export type Total_a_receberMaxAggregateOutputType = {
    id_freelancer: number | null
    total: Decimal | null
  }

  export type Total_a_receberCountAggregateOutputType = {
    id_freelancer: number
    total: number
    _all: number
  }


  export type Total_a_receberAvgAggregateInputType = {
    id_freelancer?: true
    total?: true
  }

  export type Total_a_receberSumAggregateInputType = {
    id_freelancer?: true
    total?: true
  }

  export type Total_a_receberMinAggregateInputType = {
    id_freelancer?: true
    total?: true
  }

  export type Total_a_receberMaxAggregateInputType = {
    id_freelancer?: true
    total?: true
  }

  export type Total_a_receberCountAggregateInputType = {
    id_freelancer?: true
    total?: true
    _all?: true
  }

  export type Total_a_receberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which total_a_receber to aggregate.
     */
    where?: total_a_receberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of total_a_recebers to fetch.
     */
    orderBy?: total_a_receberOrderByWithRelationInput | total_a_receberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: total_a_receberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` total_a_recebers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` total_a_recebers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned total_a_recebers
    **/
    _count?: true | Total_a_receberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Total_a_receberAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Total_a_receberSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Total_a_receberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Total_a_receberMaxAggregateInputType
  }

  export type GetTotal_a_receberAggregateType<T extends Total_a_receberAggregateArgs> = {
        [P in keyof T & keyof AggregateTotal_a_receber]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTotal_a_receber[P]>
      : GetScalarType<T[P], AggregateTotal_a_receber[P]>
  }




  export type total_a_receberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: total_a_receberWhereInput
    orderBy?: total_a_receberOrderByWithAggregationInput | total_a_receberOrderByWithAggregationInput[]
    by: Total_a_receberScalarFieldEnum[] | Total_a_receberScalarFieldEnum
    having?: total_a_receberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Total_a_receberCountAggregateInputType | true
    _avg?: Total_a_receberAvgAggregateInputType
    _sum?: Total_a_receberSumAggregateInputType
    _min?: Total_a_receberMinAggregateInputType
    _max?: Total_a_receberMaxAggregateInputType
  }

  export type Total_a_receberGroupByOutputType = {
    id_freelancer: number
    total: Decimal
    _count: Total_a_receberCountAggregateOutputType | null
    _avg: Total_a_receberAvgAggregateOutputType | null
    _sum: Total_a_receberSumAggregateOutputType | null
    _min: Total_a_receberMinAggregateOutputType | null
    _max: Total_a_receberMaxAggregateOutputType | null
  }

  type GetTotal_a_receberGroupByPayload<T extends total_a_receberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Total_a_receberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Total_a_receberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Total_a_receberGroupByOutputType[P]>
            : GetScalarType<T[P], Total_a_receberGroupByOutputType[P]>
        }
      >
    >


  export type total_a_receberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_freelancer?: boolean
    total?: boolean
  }, ExtArgs["result"]["total_a_receber"]>


  export type total_a_receberSelectScalar = {
    id_freelancer?: boolean
    total?: boolean
  }


  export type $total_a_receberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "total_a_receber"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_freelancer: number
      total: Prisma.Decimal
    }, ExtArgs["result"]["total_a_receber"]>
    composites: {}
  }

  type total_a_receberGetPayload<S extends boolean | null | undefined | total_a_receberDefaultArgs> = $Result.GetResult<Prisma.$total_a_receberPayload, S>

  type total_a_receberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<total_a_receberFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Total_a_receberCountAggregateInputType | true
    }

  export interface total_a_receberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['total_a_receber'], meta: { name: 'total_a_receber' } }
    /**
     * Find zero or one Total_a_receber that matches the filter.
     * @param {total_a_receberFindUniqueArgs} args - Arguments to find a Total_a_receber
     * @example
     * // Get one Total_a_receber
     * const total_a_receber = await prisma.total_a_receber.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends total_a_receberFindUniqueArgs>(args: SelectSubset<T, total_a_receberFindUniqueArgs<ExtArgs>>): Prisma__total_a_receberClient<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Total_a_receber that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {total_a_receberFindUniqueOrThrowArgs} args - Arguments to find a Total_a_receber
     * @example
     * // Get one Total_a_receber
     * const total_a_receber = await prisma.total_a_receber.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends total_a_receberFindUniqueOrThrowArgs>(args: SelectSubset<T, total_a_receberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__total_a_receberClient<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Total_a_receber that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {total_a_receberFindFirstArgs} args - Arguments to find a Total_a_receber
     * @example
     * // Get one Total_a_receber
     * const total_a_receber = await prisma.total_a_receber.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends total_a_receberFindFirstArgs>(args?: SelectSubset<T, total_a_receberFindFirstArgs<ExtArgs>>): Prisma__total_a_receberClient<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Total_a_receber that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {total_a_receberFindFirstOrThrowArgs} args - Arguments to find a Total_a_receber
     * @example
     * // Get one Total_a_receber
     * const total_a_receber = await prisma.total_a_receber.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends total_a_receberFindFirstOrThrowArgs>(args?: SelectSubset<T, total_a_receberFindFirstOrThrowArgs<ExtArgs>>): Prisma__total_a_receberClient<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Total_a_recebers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {total_a_receberFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Total_a_recebers
     * const total_a_recebers = await prisma.total_a_receber.findMany()
     * 
     * // Get first 10 Total_a_recebers
     * const total_a_recebers = await prisma.total_a_receber.findMany({ take: 10 })
     * 
     * // Only select the `id_freelancer`
     * const total_a_receberWithId_freelancerOnly = await prisma.total_a_receber.findMany({ select: { id_freelancer: true } })
     * 
     */
    findMany<T extends total_a_receberFindManyArgs>(args?: SelectSubset<T, total_a_receberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Total_a_receber.
     * @param {total_a_receberCreateArgs} args - Arguments to create a Total_a_receber.
     * @example
     * // Create one Total_a_receber
     * const Total_a_receber = await prisma.total_a_receber.create({
     *   data: {
     *     // ... data to create a Total_a_receber
     *   }
     * })
     * 
     */
    create<T extends total_a_receberCreateArgs>(args: SelectSubset<T, total_a_receberCreateArgs<ExtArgs>>): Prisma__total_a_receberClient<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Total_a_recebers.
     * @param {total_a_receberCreateManyArgs} args - Arguments to create many Total_a_recebers.
     * @example
     * // Create many Total_a_recebers
     * const total_a_receber = await prisma.total_a_receber.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends total_a_receberCreateManyArgs>(args?: SelectSubset<T, total_a_receberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Total_a_receber.
     * @param {total_a_receberDeleteArgs} args - Arguments to delete one Total_a_receber.
     * @example
     * // Delete one Total_a_receber
     * const Total_a_receber = await prisma.total_a_receber.delete({
     *   where: {
     *     // ... filter to delete one Total_a_receber
     *   }
     * })
     * 
     */
    delete<T extends total_a_receberDeleteArgs>(args: SelectSubset<T, total_a_receberDeleteArgs<ExtArgs>>): Prisma__total_a_receberClient<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Total_a_receber.
     * @param {total_a_receberUpdateArgs} args - Arguments to update one Total_a_receber.
     * @example
     * // Update one Total_a_receber
     * const total_a_receber = await prisma.total_a_receber.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends total_a_receberUpdateArgs>(args: SelectSubset<T, total_a_receberUpdateArgs<ExtArgs>>): Prisma__total_a_receberClient<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Total_a_recebers.
     * @param {total_a_receberDeleteManyArgs} args - Arguments to filter Total_a_recebers to delete.
     * @example
     * // Delete a few Total_a_recebers
     * const { count } = await prisma.total_a_receber.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends total_a_receberDeleteManyArgs>(args?: SelectSubset<T, total_a_receberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Total_a_recebers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {total_a_receberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Total_a_recebers
     * const total_a_receber = await prisma.total_a_receber.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends total_a_receberUpdateManyArgs>(args: SelectSubset<T, total_a_receberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Total_a_receber.
     * @param {total_a_receberUpsertArgs} args - Arguments to update or create a Total_a_receber.
     * @example
     * // Update or create a Total_a_receber
     * const total_a_receber = await prisma.total_a_receber.upsert({
     *   create: {
     *     // ... data to create a Total_a_receber
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Total_a_receber we want to update
     *   }
     * })
     */
    upsert<T extends total_a_receberUpsertArgs>(args: SelectSubset<T, total_a_receberUpsertArgs<ExtArgs>>): Prisma__total_a_receberClient<$Result.GetResult<Prisma.$total_a_receberPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Total_a_recebers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {total_a_receberCountArgs} args - Arguments to filter Total_a_recebers to count.
     * @example
     * // Count the number of Total_a_recebers
     * const count = await prisma.total_a_receber.count({
     *   where: {
     *     // ... the filter for the Total_a_recebers we want to count
     *   }
     * })
    **/
    count<T extends total_a_receberCountArgs>(
      args?: Subset<T, total_a_receberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Total_a_receberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Total_a_receber.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Total_a_receberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Total_a_receberAggregateArgs>(args: Subset<T, Total_a_receberAggregateArgs>): Prisma.PrismaPromise<GetTotal_a_receberAggregateType<T>>

    /**
     * Group by Total_a_receber.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {total_a_receberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends total_a_receberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: total_a_receberGroupByArgs['orderBy'] }
        : { orderBy?: total_a_receberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, total_a_receberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTotal_a_receberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the total_a_receber model
   */
  readonly fields: total_a_receberFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for total_a_receber.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__total_a_receberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the total_a_receber model
   */ 
  interface total_a_receberFieldRefs {
    readonly id_freelancer: FieldRef<"total_a_receber", 'Int'>
    readonly total: FieldRef<"total_a_receber", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * total_a_receber findUnique
   */
  export type total_a_receberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * Filter, which total_a_receber to fetch.
     */
    where: total_a_receberWhereUniqueInput
  }

  /**
   * total_a_receber findUniqueOrThrow
   */
  export type total_a_receberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * Filter, which total_a_receber to fetch.
     */
    where: total_a_receberWhereUniqueInput
  }

  /**
   * total_a_receber findFirst
   */
  export type total_a_receberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * Filter, which total_a_receber to fetch.
     */
    where?: total_a_receberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of total_a_recebers to fetch.
     */
    orderBy?: total_a_receberOrderByWithRelationInput | total_a_receberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for total_a_recebers.
     */
    cursor?: total_a_receberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` total_a_recebers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` total_a_recebers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of total_a_recebers.
     */
    distinct?: Total_a_receberScalarFieldEnum | Total_a_receberScalarFieldEnum[]
  }

  /**
   * total_a_receber findFirstOrThrow
   */
  export type total_a_receberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * Filter, which total_a_receber to fetch.
     */
    where?: total_a_receberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of total_a_recebers to fetch.
     */
    orderBy?: total_a_receberOrderByWithRelationInput | total_a_receberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for total_a_recebers.
     */
    cursor?: total_a_receberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` total_a_recebers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` total_a_recebers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of total_a_recebers.
     */
    distinct?: Total_a_receberScalarFieldEnum | Total_a_receberScalarFieldEnum[]
  }

  /**
   * total_a_receber findMany
   */
  export type total_a_receberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * Filter, which total_a_recebers to fetch.
     */
    where?: total_a_receberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of total_a_recebers to fetch.
     */
    orderBy?: total_a_receberOrderByWithRelationInput | total_a_receberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing total_a_recebers.
     */
    cursor?: total_a_receberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` total_a_recebers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` total_a_recebers.
     */
    skip?: number
    distinct?: Total_a_receberScalarFieldEnum | Total_a_receberScalarFieldEnum[]
  }

  /**
   * total_a_receber create
   */
  export type total_a_receberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * The data needed to create a total_a_receber.
     */
    data: XOR<total_a_receberCreateInput, total_a_receberUncheckedCreateInput>
  }

  /**
   * total_a_receber createMany
   */
  export type total_a_receberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many total_a_recebers.
     */
    data: total_a_receberCreateManyInput | total_a_receberCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * total_a_receber update
   */
  export type total_a_receberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * The data needed to update a total_a_receber.
     */
    data: XOR<total_a_receberUpdateInput, total_a_receberUncheckedUpdateInput>
    /**
     * Choose, which total_a_receber to update.
     */
    where: total_a_receberWhereUniqueInput
  }

  /**
   * total_a_receber updateMany
   */
  export type total_a_receberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update total_a_recebers.
     */
    data: XOR<total_a_receberUpdateManyMutationInput, total_a_receberUncheckedUpdateManyInput>
    /**
     * Filter which total_a_recebers to update
     */
    where?: total_a_receberWhereInput
  }

  /**
   * total_a_receber upsert
   */
  export type total_a_receberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * The filter to search for the total_a_receber to update in case it exists.
     */
    where: total_a_receberWhereUniqueInput
    /**
     * In case the total_a_receber found by the `where` argument doesn't exist, create a new total_a_receber with this data.
     */
    create: XOR<total_a_receberCreateInput, total_a_receberUncheckedCreateInput>
    /**
     * In case the total_a_receber was found with the provided `where` argument, update it with this data.
     */
    update: XOR<total_a_receberUpdateInput, total_a_receberUncheckedUpdateInput>
  }

  /**
   * total_a_receber delete
   */
  export type total_a_receberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
    /**
     * Filter which total_a_receber to delete.
     */
    where: total_a_receberWhereUniqueInput
  }

  /**
   * total_a_receber deleteMany
   */
  export type total_a_receberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which total_a_recebers to delete
     */
    where?: total_a_receberWhereInput
  }

  /**
   * total_a_receber without action
   */
  export type total_a_receberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the total_a_receber
     */
    select?: total_a_receberSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Cadastro_clienteScalarFieldEnum: {
    id: 'id',
    nome_cliente: 'nome_cliente',
    cnpj_cliente: 'cnpj_cliente',
    email_cliente: 'email_cliente',
    senha_cliente: 'senha_cliente',
    is_premium: 'is_premium'
  };

  export type Cadastro_clienteScalarFieldEnum = (typeof Cadastro_clienteScalarFieldEnum)[keyof typeof Cadastro_clienteScalarFieldEnum]


  export const Cadastro_freelancerScalarFieldEnum: {
    id: 'id',
    nome_freelancer: 'nome_freelancer',
    data_nascimento: 'data_nascimento',
    cpf_freelancer: 'cpf_freelancer',
    email_freelancer: 'email_freelancer',
    senha_freelancer: 'senha_freelancer',
    is_premium: 'is_premium'
  };

  export type Cadastro_freelancerScalarFieldEnum = (typeof Cadastro_freelancerScalarFieldEnum)[keyof typeof Cadastro_freelancerScalarFieldEnum]


  export const CategoriasScalarFieldEnum: {
    id: 'id',
    nome_categoria: 'nome_categoria',
    icon_categoria: 'icon_categoria'
  };

  export type CategoriasScalarFieldEnum = (typeof CategoriasScalarFieldEnum)[keyof typeof CategoriasScalarFieldEnum]


  export const Descricao_perfilScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao',
    id_cliente: 'id_cliente',
    id_freelancer: 'id_freelancer'
  };

  export type Descricao_perfilScalarFieldEnum = (typeof Descricao_perfilScalarFieldEnum)[keyof typeof Descricao_perfilScalarFieldEnum]


  export const Foto_perfilScalarFieldEnum: {
    id: 'id',
    foto_perfil: 'foto_perfil',
    id_cliente: 'id_cliente',
    id_freelancer: 'id_freelancer'
  };

  export type Foto_perfilScalarFieldEnum = (typeof Foto_perfilScalarFieldEnum)[keyof typeof Foto_perfilScalarFieldEnum]


  export const Freelancer_categoriaScalarFieldEnum: {
    id: 'id',
    id_freelancer: 'id_freelancer',
    id_categoria: 'id_categoria'
  };

  export type Freelancer_categoriaScalarFieldEnum = (typeof Freelancer_categoriaScalarFieldEnum)[keyof typeof Freelancer_categoriaScalarFieldEnum]


  export const Freelancer_habilidadeScalarFieldEnum: {
    id: 'id',
    id_freelancer: 'id_freelancer',
    id_habilidade: 'id_habilidade'
  };

  export type Freelancer_habilidadeScalarFieldEnum = (typeof Freelancer_habilidadeScalarFieldEnum)[keyof typeof Freelancer_habilidadeScalarFieldEnum]


  export const HabilidadesScalarFieldEnum: {
    id: 'id',
    nome_habilidade: 'nome_habilidade',
    icon_habilidade: 'icon_habilidade'
  };

  export type HabilidadesScalarFieldEnum = (typeof HabilidadesScalarFieldEnum)[keyof typeof HabilidadesScalarFieldEnum]


  export const Nivel_experienciaScalarFieldEnum: {
    id: 'id',
    nivel_experiencia: 'nivel_experiencia'
  };

  export type Nivel_experienciaScalarFieldEnum = (typeof Nivel_experienciaScalarFieldEnum)[keyof typeof Nivel_experienciaScalarFieldEnum]


  export const PortfolioScalarFieldEnum: {
    id: 'id',
    arquivo: 'arquivo'
  };

  export type PortfolioScalarFieldEnum = (typeof PortfolioScalarFieldEnum)[keyof typeof PortfolioScalarFieldEnum]


  export const Publicacao_projetosScalarFieldEnum: {
    id: 'id',
    id_cliente: 'id_cliente',
    nome_projeto: 'nome_projeto',
    descricao_projeto: 'descricao_projeto',
    orcamento: 'orcamento',
    id_nivel_experiencia: 'id_nivel_experiencia',
    is_premium: 'is_premium'
  };

  export type Publicacao_projetosScalarFieldEnum = (typeof Publicacao_projetosScalarFieldEnum)[keyof typeof Publicacao_projetosScalarFieldEnum]


  export const Categoria_publicacao_projetosScalarFieldEnum: {
    id: 'id',
    id_projeto: 'id_projeto',
    id_categoria: 'id_categoria'
  };

  export type Categoria_publicacao_projetosScalarFieldEnum = (typeof Categoria_publicacao_projetosScalarFieldEnum)[keyof typeof Categoria_publicacao_projetosScalarFieldEnum]


  export const Habilidade_publicacao_projetosScalarFieldEnum: {
    id: 'id',
    id_projeto: 'id_projeto',
    id_habilidade: 'id_habilidade'
  };

  export type Habilidade_publicacao_projetosScalarFieldEnum = (typeof Habilidade_publicacao_projetosScalarFieldEnum)[keyof typeof Habilidade_publicacao_projetosScalarFieldEnum]


  export const Portfolio_freelancerScalarFieldEnum: {
    id: 'id',
    id_portfolio: 'id_portfolio',
    id_freelancer: 'id_freelancer'
  };

  export type Portfolio_freelancerScalarFieldEnum = (typeof Portfolio_freelancerScalarFieldEnum)[keyof typeof Portfolio_freelancerScalarFieldEnum]


  export const AvaliacaoScalarFieldEnum: {
    id: 'id',
    estrelas: 'estrelas',
    comentario: 'comentario'
  };

  export type AvaliacaoScalarFieldEnum = (typeof AvaliacaoScalarFieldEnum)[keyof typeof AvaliacaoScalarFieldEnum]


  export const Avaliacao_usuarioScalarFieldEnum: {
    id: 'id',
    id_avaliacao: 'id_avaliacao',
    id_avaliador: 'id_avaliador',
    tipo_avaliador: 'tipo_avaliador',
    id_avaliado: 'id_avaliado',
    tipo_avaliado: 'tipo_avaliado'
  };

  export type Avaliacao_usuarioScalarFieldEnum = (typeof Avaliacao_usuarioScalarFieldEnum)[keyof typeof Avaliacao_usuarioScalarFieldEnum]


  export const PagamentosScalarFieldEnum: {
    id: 'id',
    id_cliente: 'id_cliente',
    id_freelancer: 'id_freelancer',
    valor: 'valor',
    metodo_pagamento: 'metodo_pagamento',
    status_pagamento: 'status_pagamento',
    descricao: 'descricao',
    link_pagamento: 'link_pagamento'
  };

  export type PagamentosScalarFieldEnum = (typeof PagamentosScalarFieldEnum)[keyof typeof PagamentosScalarFieldEnum]


  export const Freelancer_projetoScalarFieldEnum: {
    id: 'id',
    id_projeto: 'id_projeto',
    id_freelancer: 'id_freelancer',
    status: 'status'
  };

  export type Freelancer_projetoScalarFieldEnum = (typeof Freelancer_projetoScalarFieldEnum)[keyof typeof Freelancer_projetoScalarFieldEnum]


  export const DenunciaScalarFieldEnum: {
    id: 'id',
    arquivo: 'arquivo',
    descricao: 'descricao'
  };

  export type DenunciaScalarFieldEnum = (typeof DenunciaScalarFieldEnum)[keyof typeof DenunciaScalarFieldEnum]


  export const DisputaScalarFieldEnum: {
    id: 'id',
    id_denuncia: 'id_denuncia',
    id_denunciante: 'id_denunciante',
    tipo_denunciante: 'tipo_denunciante',
    id_denunciado: 'id_denunciado',
    tipo_denunciado: 'tipo_denunciado',
    situacao: 'situacao'
  };

  export type DisputaScalarFieldEnum = (typeof DisputaScalarFieldEnum)[keyof typeof DisputaScalarFieldEnum]


  export const Solicitacao_pagamentoScalarFieldEnum: {
    id: 'id',
    id_freelancer: 'id_freelancer',
    valor_solicitado: 'valor_solicitado',
    banco: 'banco',
    agencia: 'agencia',
    numero_conta: 'numero_conta',
    tipo_conta: 'tipo_conta',
    nome_completo_titular: 'nome_completo_titular',
    cpf: 'cpf',
    status_pago: 'status_pago'
  };

  export type Solicitacao_pagamentoScalarFieldEnum = (typeof Solicitacao_pagamentoScalarFieldEnum)[keyof typeof Solicitacao_pagamentoScalarFieldEnum]


  export const Total_a_receberScalarFieldEnum: {
    id_freelancer: 'id_freelancer',
    total: 'total'
  };

  export type Total_a_receberScalarFieldEnum = (typeof Total_a_receberScalarFieldEnum)[keyof typeof Total_a_receberScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'avaliacao_usuario_tipo_avaliador'
   */
  export type Enumavaliacao_usuario_tipo_avaliadorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'avaliacao_usuario_tipo_avaliador'>
    


  /**
   * Reference to a field of type 'avaliacao_usuario_tipo_avaliado'
   */
  export type Enumavaliacao_usuario_tipo_avaliadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'avaliacao_usuario_tipo_avaliado'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'pagamentos_metodo_pagamento'
   */
  export type Enumpagamentos_metodo_pagamentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'pagamentos_metodo_pagamento'>
    


  /**
   * Reference to a field of type 'pagamentos_status_pagamento'
   */
  export type Enumpagamentos_status_pagamentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'pagamentos_status_pagamento'>
    


  /**
   * Reference to a field of type 'disputa_tipo_denunciante'
   */
  export type Enumdisputa_tipo_denuncianteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'disputa_tipo_denunciante'>
    


  /**
   * Reference to a field of type 'disputa_tipo_denunciado'
   */
  export type Enumdisputa_tipo_denunciadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'disputa_tipo_denunciado'>
    


  /**
   * Reference to a field of type 'disputa_situacao'
   */
  export type Enumdisputa_situacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'disputa_situacao'>
    
  /**
   * Deep Input Types
   */


  export type cadastro_clienteWhereInput = {
    AND?: cadastro_clienteWhereInput | cadastro_clienteWhereInput[]
    OR?: cadastro_clienteWhereInput[]
    NOT?: cadastro_clienteWhereInput | cadastro_clienteWhereInput[]
    id?: IntFilter<"cadastro_cliente"> | number
    nome_cliente?: StringFilter<"cadastro_cliente"> | string
    cnpj_cliente?: BigIntFilter<"cadastro_cliente"> | bigint | number
    email_cliente?: StringFilter<"cadastro_cliente"> | string
    senha_cliente?: StringFilter<"cadastro_cliente"> | string
    is_premium?: BoolFilter<"cadastro_cliente"> | boolean
  }

  export type cadastro_clienteOrderByWithRelationInput = {
    id?: SortOrder
    nome_cliente?: SortOrder
    cnpj_cliente?: SortOrder
    email_cliente?: SortOrder
    senha_cliente?: SortOrder
    is_premium?: SortOrder
  }

  export type cadastro_clienteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: cadastro_clienteWhereInput | cadastro_clienteWhereInput[]
    OR?: cadastro_clienteWhereInput[]
    NOT?: cadastro_clienteWhereInput | cadastro_clienteWhereInput[]
    nome_cliente?: StringFilter<"cadastro_cliente"> | string
    cnpj_cliente?: BigIntFilter<"cadastro_cliente"> | bigint | number
    email_cliente?: StringFilter<"cadastro_cliente"> | string
    senha_cliente?: StringFilter<"cadastro_cliente"> | string
    is_premium?: BoolFilter<"cadastro_cliente"> | boolean
  }, "id" | "id">

  export type cadastro_clienteOrderByWithAggregationInput = {
    id?: SortOrder
    nome_cliente?: SortOrder
    cnpj_cliente?: SortOrder
    email_cliente?: SortOrder
    senha_cliente?: SortOrder
    is_premium?: SortOrder
    _count?: cadastro_clienteCountOrderByAggregateInput
    _avg?: cadastro_clienteAvgOrderByAggregateInput
    _max?: cadastro_clienteMaxOrderByAggregateInput
    _min?: cadastro_clienteMinOrderByAggregateInput
    _sum?: cadastro_clienteSumOrderByAggregateInput
  }

  export type cadastro_clienteScalarWhereWithAggregatesInput = {
    AND?: cadastro_clienteScalarWhereWithAggregatesInput | cadastro_clienteScalarWhereWithAggregatesInput[]
    OR?: cadastro_clienteScalarWhereWithAggregatesInput[]
    NOT?: cadastro_clienteScalarWhereWithAggregatesInput | cadastro_clienteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"cadastro_cliente"> | number
    nome_cliente?: StringWithAggregatesFilter<"cadastro_cliente"> | string
    cnpj_cliente?: BigIntWithAggregatesFilter<"cadastro_cliente"> | bigint | number
    email_cliente?: StringWithAggregatesFilter<"cadastro_cliente"> | string
    senha_cliente?: StringWithAggregatesFilter<"cadastro_cliente"> | string
    is_premium?: BoolWithAggregatesFilter<"cadastro_cliente"> | boolean
  }

  export type cadastro_freelancerWhereInput = {
    AND?: cadastro_freelancerWhereInput | cadastro_freelancerWhereInput[]
    OR?: cadastro_freelancerWhereInput[]
    NOT?: cadastro_freelancerWhereInput | cadastro_freelancerWhereInput[]
    id?: IntFilter<"cadastro_freelancer"> | number
    nome_freelancer?: StringFilter<"cadastro_freelancer"> | string
    data_nascimento?: DateTimeFilter<"cadastro_freelancer"> | Date | string
    cpf_freelancer?: BigIntFilter<"cadastro_freelancer"> | bigint | number
    email_freelancer?: StringFilter<"cadastro_freelancer"> | string
    senha_freelancer?: StringFilter<"cadastro_freelancer"> | string
    is_premium?: BoolFilter<"cadastro_freelancer"> | boolean
  }

  export type cadastro_freelancerOrderByWithRelationInput = {
    id?: SortOrder
    nome_freelancer?: SortOrder
    data_nascimento?: SortOrder
    cpf_freelancer?: SortOrder
    email_freelancer?: SortOrder
    senha_freelancer?: SortOrder
    is_premium?: SortOrder
  }

  export type cadastro_freelancerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: cadastro_freelancerWhereInput | cadastro_freelancerWhereInput[]
    OR?: cadastro_freelancerWhereInput[]
    NOT?: cadastro_freelancerWhereInput | cadastro_freelancerWhereInput[]
    nome_freelancer?: StringFilter<"cadastro_freelancer"> | string
    data_nascimento?: DateTimeFilter<"cadastro_freelancer"> | Date | string
    cpf_freelancer?: BigIntFilter<"cadastro_freelancer"> | bigint | number
    email_freelancer?: StringFilter<"cadastro_freelancer"> | string
    senha_freelancer?: StringFilter<"cadastro_freelancer"> | string
    is_premium?: BoolFilter<"cadastro_freelancer"> | boolean
  }, "id" | "id">

  export type cadastro_freelancerOrderByWithAggregationInput = {
    id?: SortOrder
    nome_freelancer?: SortOrder
    data_nascimento?: SortOrder
    cpf_freelancer?: SortOrder
    email_freelancer?: SortOrder
    senha_freelancer?: SortOrder
    is_premium?: SortOrder
    _count?: cadastro_freelancerCountOrderByAggregateInput
    _avg?: cadastro_freelancerAvgOrderByAggregateInput
    _max?: cadastro_freelancerMaxOrderByAggregateInput
    _min?: cadastro_freelancerMinOrderByAggregateInput
    _sum?: cadastro_freelancerSumOrderByAggregateInput
  }

  export type cadastro_freelancerScalarWhereWithAggregatesInput = {
    AND?: cadastro_freelancerScalarWhereWithAggregatesInput | cadastro_freelancerScalarWhereWithAggregatesInput[]
    OR?: cadastro_freelancerScalarWhereWithAggregatesInput[]
    NOT?: cadastro_freelancerScalarWhereWithAggregatesInput | cadastro_freelancerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"cadastro_freelancer"> | number
    nome_freelancer?: StringWithAggregatesFilter<"cadastro_freelancer"> | string
    data_nascimento?: DateTimeWithAggregatesFilter<"cadastro_freelancer"> | Date | string
    cpf_freelancer?: BigIntWithAggregatesFilter<"cadastro_freelancer"> | bigint | number
    email_freelancer?: StringWithAggregatesFilter<"cadastro_freelancer"> | string
    senha_freelancer?: StringWithAggregatesFilter<"cadastro_freelancer"> | string
    is_premium?: BoolWithAggregatesFilter<"cadastro_freelancer"> | boolean
  }

  export type categoriasWhereInput = {
    AND?: categoriasWhereInput | categoriasWhereInput[]
    OR?: categoriasWhereInput[]
    NOT?: categoriasWhereInput | categoriasWhereInput[]
    id?: IntFilter<"categorias"> | number
    nome_categoria?: StringFilter<"categorias"> | string
    icon_categoria?: StringFilter<"categorias"> | string
  }

  export type categoriasOrderByWithRelationInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    icon_categoria?: SortOrder
  }

  export type categoriasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: categoriasWhereInput | categoriasWhereInput[]
    OR?: categoriasWhereInput[]
    NOT?: categoriasWhereInput | categoriasWhereInput[]
    nome_categoria?: StringFilter<"categorias"> | string
    icon_categoria?: StringFilter<"categorias"> | string
  }, "id" | "id">

  export type categoriasOrderByWithAggregationInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    icon_categoria?: SortOrder
    _count?: categoriasCountOrderByAggregateInput
    _avg?: categoriasAvgOrderByAggregateInput
    _max?: categoriasMaxOrderByAggregateInput
    _min?: categoriasMinOrderByAggregateInput
    _sum?: categoriasSumOrderByAggregateInput
  }

  export type categoriasScalarWhereWithAggregatesInput = {
    AND?: categoriasScalarWhereWithAggregatesInput | categoriasScalarWhereWithAggregatesInput[]
    OR?: categoriasScalarWhereWithAggregatesInput[]
    NOT?: categoriasScalarWhereWithAggregatesInput | categoriasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"categorias"> | number
    nome_categoria?: StringWithAggregatesFilter<"categorias"> | string
    icon_categoria?: StringWithAggregatesFilter<"categorias"> | string
  }

  export type descricao_perfilWhereInput = {
    AND?: descricao_perfilWhereInput | descricao_perfilWhereInput[]
    OR?: descricao_perfilWhereInput[]
    NOT?: descricao_perfilWhereInput | descricao_perfilWhereInput[]
    id?: IntFilter<"descricao_perfil"> | number
    descricao?: StringFilter<"descricao_perfil"> | string
    id_cliente?: IntNullableFilter<"descricao_perfil"> | number | null
    id_freelancer?: IntNullableFilter<"descricao_perfil"> | number | null
  }

  export type descricao_perfilOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    id_freelancer?: SortOrderInput | SortOrder
  }

  export type descricao_perfilWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: descricao_perfilWhereInput | descricao_perfilWhereInput[]
    OR?: descricao_perfilWhereInput[]
    NOT?: descricao_perfilWhereInput | descricao_perfilWhereInput[]
    descricao?: StringFilter<"descricao_perfil"> | string
    id_cliente?: IntNullableFilter<"descricao_perfil"> | number | null
    id_freelancer?: IntNullableFilter<"descricao_perfil"> | number | null
  }, "id">

  export type descricao_perfilOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    id_freelancer?: SortOrderInput | SortOrder
    _count?: descricao_perfilCountOrderByAggregateInput
    _avg?: descricao_perfilAvgOrderByAggregateInput
    _max?: descricao_perfilMaxOrderByAggregateInput
    _min?: descricao_perfilMinOrderByAggregateInput
    _sum?: descricao_perfilSumOrderByAggregateInput
  }

  export type descricao_perfilScalarWhereWithAggregatesInput = {
    AND?: descricao_perfilScalarWhereWithAggregatesInput | descricao_perfilScalarWhereWithAggregatesInput[]
    OR?: descricao_perfilScalarWhereWithAggregatesInput[]
    NOT?: descricao_perfilScalarWhereWithAggregatesInput | descricao_perfilScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"descricao_perfil"> | number
    descricao?: StringWithAggregatesFilter<"descricao_perfil"> | string
    id_cliente?: IntNullableWithAggregatesFilter<"descricao_perfil"> | number | null
    id_freelancer?: IntNullableWithAggregatesFilter<"descricao_perfil"> | number | null
  }

  export type foto_perfilWhereInput = {
    AND?: foto_perfilWhereInput | foto_perfilWhereInput[]
    OR?: foto_perfilWhereInput[]
    NOT?: foto_perfilWhereInput | foto_perfilWhereInput[]
    id?: IntFilter<"foto_perfil"> | number
    foto_perfil?: StringFilter<"foto_perfil"> | string
    id_cliente?: IntNullableFilter<"foto_perfil"> | number | null
    id_freelancer?: IntNullableFilter<"foto_perfil"> | number | null
  }

  export type foto_perfilOrderByWithRelationInput = {
    id?: SortOrder
    foto_perfil?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    id_freelancer?: SortOrderInput | SortOrder
  }

  export type foto_perfilWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: foto_perfilWhereInput | foto_perfilWhereInput[]
    OR?: foto_perfilWhereInput[]
    NOT?: foto_perfilWhereInput | foto_perfilWhereInput[]
    foto_perfil?: StringFilter<"foto_perfil"> | string
    id_cliente?: IntNullableFilter<"foto_perfil"> | number | null
    id_freelancer?: IntNullableFilter<"foto_perfil"> | number | null
  }, "id">

  export type foto_perfilOrderByWithAggregationInput = {
    id?: SortOrder
    foto_perfil?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    id_freelancer?: SortOrderInput | SortOrder
    _count?: foto_perfilCountOrderByAggregateInput
    _avg?: foto_perfilAvgOrderByAggregateInput
    _max?: foto_perfilMaxOrderByAggregateInput
    _min?: foto_perfilMinOrderByAggregateInput
    _sum?: foto_perfilSumOrderByAggregateInput
  }

  export type foto_perfilScalarWhereWithAggregatesInput = {
    AND?: foto_perfilScalarWhereWithAggregatesInput | foto_perfilScalarWhereWithAggregatesInput[]
    OR?: foto_perfilScalarWhereWithAggregatesInput[]
    NOT?: foto_perfilScalarWhereWithAggregatesInput | foto_perfilScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"foto_perfil"> | number
    foto_perfil?: StringWithAggregatesFilter<"foto_perfil"> | string
    id_cliente?: IntNullableWithAggregatesFilter<"foto_perfil"> | number | null
    id_freelancer?: IntNullableWithAggregatesFilter<"foto_perfil"> | number | null
  }

  export type freelancer_categoriaWhereInput = {
    AND?: freelancer_categoriaWhereInput | freelancer_categoriaWhereInput[]
    OR?: freelancer_categoriaWhereInput[]
    NOT?: freelancer_categoriaWhereInput | freelancer_categoriaWhereInput[]
    id?: IntFilter<"freelancer_categoria"> | number
    id_freelancer?: IntFilter<"freelancer_categoria"> | number
    id_categoria?: IntFilter<"freelancer_categoria"> | number
  }

  export type freelancer_categoriaOrderByWithRelationInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_categoria?: SortOrder
  }

  export type freelancer_categoriaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: freelancer_categoriaWhereInput | freelancer_categoriaWhereInput[]
    OR?: freelancer_categoriaWhereInput[]
    NOT?: freelancer_categoriaWhereInput | freelancer_categoriaWhereInput[]
    id_freelancer?: IntFilter<"freelancer_categoria"> | number
    id_categoria?: IntFilter<"freelancer_categoria"> | number
  }, "id" | "id">

  export type freelancer_categoriaOrderByWithAggregationInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_categoria?: SortOrder
    _count?: freelancer_categoriaCountOrderByAggregateInput
    _avg?: freelancer_categoriaAvgOrderByAggregateInput
    _max?: freelancer_categoriaMaxOrderByAggregateInput
    _min?: freelancer_categoriaMinOrderByAggregateInput
    _sum?: freelancer_categoriaSumOrderByAggregateInput
  }

  export type freelancer_categoriaScalarWhereWithAggregatesInput = {
    AND?: freelancer_categoriaScalarWhereWithAggregatesInput | freelancer_categoriaScalarWhereWithAggregatesInput[]
    OR?: freelancer_categoriaScalarWhereWithAggregatesInput[]
    NOT?: freelancer_categoriaScalarWhereWithAggregatesInput | freelancer_categoriaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"freelancer_categoria"> | number
    id_freelancer?: IntWithAggregatesFilter<"freelancer_categoria"> | number
    id_categoria?: IntWithAggregatesFilter<"freelancer_categoria"> | number
  }

  export type freelancer_habilidadeWhereInput = {
    AND?: freelancer_habilidadeWhereInput | freelancer_habilidadeWhereInput[]
    OR?: freelancer_habilidadeWhereInput[]
    NOT?: freelancer_habilidadeWhereInput | freelancer_habilidadeWhereInput[]
    id?: IntFilter<"freelancer_habilidade"> | number
    id_freelancer?: IntFilter<"freelancer_habilidade"> | number
    id_habilidade?: IntFilter<"freelancer_habilidade"> | number
  }

  export type freelancer_habilidadeOrderByWithRelationInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_habilidade?: SortOrder
  }

  export type freelancer_habilidadeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: freelancer_habilidadeWhereInput | freelancer_habilidadeWhereInput[]
    OR?: freelancer_habilidadeWhereInput[]
    NOT?: freelancer_habilidadeWhereInput | freelancer_habilidadeWhereInput[]
    id_freelancer?: IntFilter<"freelancer_habilidade"> | number
    id_habilidade?: IntFilter<"freelancer_habilidade"> | number
  }, "id" | "id">

  export type freelancer_habilidadeOrderByWithAggregationInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_habilidade?: SortOrder
    _count?: freelancer_habilidadeCountOrderByAggregateInput
    _avg?: freelancer_habilidadeAvgOrderByAggregateInput
    _max?: freelancer_habilidadeMaxOrderByAggregateInput
    _min?: freelancer_habilidadeMinOrderByAggregateInput
    _sum?: freelancer_habilidadeSumOrderByAggregateInput
  }

  export type freelancer_habilidadeScalarWhereWithAggregatesInput = {
    AND?: freelancer_habilidadeScalarWhereWithAggregatesInput | freelancer_habilidadeScalarWhereWithAggregatesInput[]
    OR?: freelancer_habilidadeScalarWhereWithAggregatesInput[]
    NOT?: freelancer_habilidadeScalarWhereWithAggregatesInput | freelancer_habilidadeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"freelancer_habilidade"> | number
    id_freelancer?: IntWithAggregatesFilter<"freelancer_habilidade"> | number
    id_habilidade?: IntWithAggregatesFilter<"freelancer_habilidade"> | number
  }

  export type habilidadesWhereInput = {
    AND?: habilidadesWhereInput | habilidadesWhereInput[]
    OR?: habilidadesWhereInput[]
    NOT?: habilidadesWhereInput | habilidadesWhereInput[]
    id?: IntFilter<"habilidades"> | number
    nome_habilidade?: StringFilter<"habilidades"> | string
    icon_habilidade?: StringFilter<"habilidades"> | string
  }

  export type habilidadesOrderByWithRelationInput = {
    id?: SortOrder
    nome_habilidade?: SortOrder
    icon_habilidade?: SortOrder
  }

  export type habilidadesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: habilidadesWhereInput | habilidadesWhereInput[]
    OR?: habilidadesWhereInput[]
    NOT?: habilidadesWhereInput | habilidadesWhereInput[]
    nome_habilidade?: StringFilter<"habilidades"> | string
    icon_habilidade?: StringFilter<"habilidades"> | string
  }, "id" | "id">

  export type habilidadesOrderByWithAggregationInput = {
    id?: SortOrder
    nome_habilidade?: SortOrder
    icon_habilidade?: SortOrder
    _count?: habilidadesCountOrderByAggregateInput
    _avg?: habilidadesAvgOrderByAggregateInput
    _max?: habilidadesMaxOrderByAggregateInput
    _min?: habilidadesMinOrderByAggregateInput
    _sum?: habilidadesSumOrderByAggregateInput
  }

  export type habilidadesScalarWhereWithAggregatesInput = {
    AND?: habilidadesScalarWhereWithAggregatesInput | habilidadesScalarWhereWithAggregatesInput[]
    OR?: habilidadesScalarWhereWithAggregatesInput[]
    NOT?: habilidadesScalarWhereWithAggregatesInput | habilidadesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"habilidades"> | number
    nome_habilidade?: StringWithAggregatesFilter<"habilidades"> | string
    icon_habilidade?: StringWithAggregatesFilter<"habilidades"> | string
  }

  export type nivel_experienciaWhereInput = {
    AND?: nivel_experienciaWhereInput | nivel_experienciaWhereInput[]
    OR?: nivel_experienciaWhereInput[]
    NOT?: nivel_experienciaWhereInput | nivel_experienciaWhereInput[]
    id?: IntFilter<"nivel_experiencia"> | number
    nivel_experiencia?: StringNullableFilter<"nivel_experiencia"> | string | null
  }

  export type nivel_experienciaOrderByWithRelationInput = {
    id?: SortOrder
    nivel_experiencia?: SortOrderInput | SortOrder
  }

  export type nivel_experienciaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: nivel_experienciaWhereInput | nivel_experienciaWhereInput[]
    OR?: nivel_experienciaWhereInput[]
    NOT?: nivel_experienciaWhereInput | nivel_experienciaWhereInput[]
    nivel_experiencia?: StringNullableFilter<"nivel_experiencia"> | string | null
  }, "id">

  export type nivel_experienciaOrderByWithAggregationInput = {
    id?: SortOrder
    nivel_experiencia?: SortOrderInput | SortOrder
    _count?: nivel_experienciaCountOrderByAggregateInput
    _avg?: nivel_experienciaAvgOrderByAggregateInput
    _max?: nivel_experienciaMaxOrderByAggregateInput
    _min?: nivel_experienciaMinOrderByAggregateInput
    _sum?: nivel_experienciaSumOrderByAggregateInput
  }

  export type nivel_experienciaScalarWhereWithAggregatesInput = {
    AND?: nivel_experienciaScalarWhereWithAggregatesInput | nivel_experienciaScalarWhereWithAggregatesInput[]
    OR?: nivel_experienciaScalarWhereWithAggregatesInput[]
    NOT?: nivel_experienciaScalarWhereWithAggregatesInput | nivel_experienciaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nivel_experiencia"> | number
    nivel_experiencia?: StringNullableWithAggregatesFilter<"nivel_experiencia"> | string | null
  }

  export type portfolioWhereInput = {
    AND?: portfolioWhereInput | portfolioWhereInput[]
    OR?: portfolioWhereInput[]
    NOT?: portfolioWhereInput | portfolioWhereInput[]
    id?: IntFilter<"portfolio"> | number
    arquivo?: StringFilter<"portfolio"> | string
  }

  export type portfolioOrderByWithRelationInput = {
    id?: SortOrder
    arquivo?: SortOrder
  }

  export type portfolioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: portfolioWhereInput | portfolioWhereInput[]
    OR?: portfolioWhereInput[]
    NOT?: portfolioWhereInput | portfolioWhereInput[]
    arquivo?: StringFilter<"portfolio"> | string
  }, "id">

  export type portfolioOrderByWithAggregationInput = {
    id?: SortOrder
    arquivo?: SortOrder
    _count?: portfolioCountOrderByAggregateInput
    _avg?: portfolioAvgOrderByAggregateInput
    _max?: portfolioMaxOrderByAggregateInput
    _min?: portfolioMinOrderByAggregateInput
    _sum?: portfolioSumOrderByAggregateInput
  }

  export type portfolioScalarWhereWithAggregatesInput = {
    AND?: portfolioScalarWhereWithAggregatesInput | portfolioScalarWhereWithAggregatesInput[]
    OR?: portfolioScalarWhereWithAggregatesInput[]
    NOT?: portfolioScalarWhereWithAggregatesInput | portfolioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"portfolio"> | number
    arquivo?: StringWithAggregatesFilter<"portfolio"> | string
  }

  export type publicacao_projetosWhereInput = {
    AND?: publicacao_projetosWhereInput | publicacao_projetosWhereInput[]
    OR?: publicacao_projetosWhereInput[]
    NOT?: publicacao_projetosWhereInput | publicacao_projetosWhereInput[]
    id?: IntFilter<"publicacao_projetos"> | number
    id_cliente?: IntFilter<"publicacao_projetos"> | number
    nome_projeto?: StringNullableFilter<"publicacao_projetos"> | string | null
    descricao_projeto?: StringNullableFilter<"publicacao_projetos"> | string | null
    orcamento?: FloatFilter<"publicacao_projetos"> | number
    id_nivel_experiencia?: IntFilter<"publicacao_projetos"> | number
    is_premium?: BoolFilter<"publicacao_projetos"> | boolean
  }

  export type publicacao_projetosOrderByWithRelationInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    nome_projeto?: SortOrderInput | SortOrder
    descricao_projeto?: SortOrderInput | SortOrder
    orcamento?: SortOrder
    id_nivel_experiencia?: SortOrder
    is_premium?: SortOrder
  }

  export type publicacao_projetosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: publicacao_projetosWhereInput | publicacao_projetosWhereInput[]
    OR?: publicacao_projetosWhereInput[]
    NOT?: publicacao_projetosWhereInput | publicacao_projetosWhereInput[]
    id_cliente?: IntFilter<"publicacao_projetos"> | number
    nome_projeto?: StringNullableFilter<"publicacao_projetos"> | string | null
    descricao_projeto?: StringNullableFilter<"publicacao_projetos"> | string | null
    orcamento?: FloatFilter<"publicacao_projetos"> | number
    id_nivel_experiencia?: IntFilter<"publicacao_projetos"> | number
    is_premium?: BoolFilter<"publicacao_projetos"> | boolean
  }, "id">

  export type publicacao_projetosOrderByWithAggregationInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    nome_projeto?: SortOrderInput | SortOrder
    descricao_projeto?: SortOrderInput | SortOrder
    orcamento?: SortOrder
    id_nivel_experiencia?: SortOrder
    is_premium?: SortOrder
    _count?: publicacao_projetosCountOrderByAggregateInput
    _avg?: publicacao_projetosAvgOrderByAggregateInput
    _max?: publicacao_projetosMaxOrderByAggregateInput
    _min?: publicacao_projetosMinOrderByAggregateInput
    _sum?: publicacao_projetosSumOrderByAggregateInput
  }

  export type publicacao_projetosScalarWhereWithAggregatesInput = {
    AND?: publicacao_projetosScalarWhereWithAggregatesInput | publicacao_projetosScalarWhereWithAggregatesInput[]
    OR?: publicacao_projetosScalarWhereWithAggregatesInput[]
    NOT?: publicacao_projetosScalarWhereWithAggregatesInput | publicacao_projetosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"publicacao_projetos"> | number
    id_cliente?: IntWithAggregatesFilter<"publicacao_projetos"> | number
    nome_projeto?: StringNullableWithAggregatesFilter<"publicacao_projetos"> | string | null
    descricao_projeto?: StringNullableWithAggregatesFilter<"publicacao_projetos"> | string | null
    orcamento?: FloatWithAggregatesFilter<"publicacao_projetos"> | number
    id_nivel_experiencia?: IntWithAggregatesFilter<"publicacao_projetos"> | number
    is_premium?: BoolWithAggregatesFilter<"publicacao_projetos"> | boolean
  }

  export type categoria_publicacao_projetosWhereInput = {
    AND?: categoria_publicacao_projetosWhereInput | categoria_publicacao_projetosWhereInput[]
    OR?: categoria_publicacao_projetosWhereInput[]
    NOT?: categoria_publicacao_projetosWhereInput | categoria_publicacao_projetosWhereInput[]
    id?: IntFilter<"categoria_publicacao_projetos"> | number
    id_projeto?: IntFilter<"categoria_publicacao_projetos"> | number
    id_categoria?: IntFilter<"categoria_publicacao_projetos"> | number
  }

  export type categoria_publicacao_projetosOrderByWithRelationInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_categoria?: SortOrder
  }

  export type categoria_publicacao_projetosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: categoria_publicacao_projetosWhereInput | categoria_publicacao_projetosWhereInput[]
    OR?: categoria_publicacao_projetosWhereInput[]
    NOT?: categoria_publicacao_projetosWhereInput | categoria_publicacao_projetosWhereInput[]
    id_projeto?: IntFilter<"categoria_publicacao_projetos"> | number
    id_categoria?: IntFilter<"categoria_publicacao_projetos"> | number
  }, "id">

  export type categoria_publicacao_projetosOrderByWithAggregationInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_categoria?: SortOrder
    _count?: categoria_publicacao_projetosCountOrderByAggregateInput
    _avg?: categoria_publicacao_projetosAvgOrderByAggregateInput
    _max?: categoria_publicacao_projetosMaxOrderByAggregateInput
    _min?: categoria_publicacao_projetosMinOrderByAggregateInput
    _sum?: categoria_publicacao_projetosSumOrderByAggregateInput
  }

  export type categoria_publicacao_projetosScalarWhereWithAggregatesInput = {
    AND?: categoria_publicacao_projetosScalarWhereWithAggregatesInput | categoria_publicacao_projetosScalarWhereWithAggregatesInput[]
    OR?: categoria_publicacao_projetosScalarWhereWithAggregatesInput[]
    NOT?: categoria_publicacao_projetosScalarWhereWithAggregatesInput | categoria_publicacao_projetosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"categoria_publicacao_projetos"> | number
    id_projeto?: IntWithAggregatesFilter<"categoria_publicacao_projetos"> | number
    id_categoria?: IntWithAggregatesFilter<"categoria_publicacao_projetos"> | number
  }

  export type habilidade_publicacao_projetosWhereInput = {
    AND?: habilidade_publicacao_projetosWhereInput | habilidade_publicacao_projetosWhereInput[]
    OR?: habilidade_publicacao_projetosWhereInput[]
    NOT?: habilidade_publicacao_projetosWhereInput | habilidade_publicacao_projetosWhereInput[]
    id?: IntFilter<"habilidade_publicacao_projetos"> | number
    id_projeto?: IntFilter<"habilidade_publicacao_projetos"> | number
    id_habilidade?: IntFilter<"habilidade_publicacao_projetos"> | number
  }

  export type habilidade_publicacao_projetosOrderByWithRelationInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_habilidade?: SortOrder
  }

  export type habilidade_publicacao_projetosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: habilidade_publicacao_projetosWhereInput | habilidade_publicacao_projetosWhereInput[]
    OR?: habilidade_publicacao_projetosWhereInput[]
    NOT?: habilidade_publicacao_projetosWhereInput | habilidade_publicacao_projetosWhereInput[]
    id_projeto?: IntFilter<"habilidade_publicacao_projetos"> | number
    id_habilidade?: IntFilter<"habilidade_publicacao_projetos"> | number
  }, "id">

  export type habilidade_publicacao_projetosOrderByWithAggregationInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_habilidade?: SortOrder
    _count?: habilidade_publicacao_projetosCountOrderByAggregateInput
    _avg?: habilidade_publicacao_projetosAvgOrderByAggregateInput
    _max?: habilidade_publicacao_projetosMaxOrderByAggregateInput
    _min?: habilidade_publicacao_projetosMinOrderByAggregateInput
    _sum?: habilidade_publicacao_projetosSumOrderByAggregateInput
  }

  export type habilidade_publicacao_projetosScalarWhereWithAggregatesInput = {
    AND?: habilidade_publicacao_projetosScalarWhereWithAggregatesInput | habilidade_publicacao_projetosScalarWhereWithAggregatesInput[]
    OR?: habilidade_publicacao_projetosScalarWhereWithAggregatesInput[]
    NOT?: habilidade_publicacao_projetosScalarWhereWithAggregatesInput | habilidade_publicacao_projetosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"habilidade_publicacao_projetos"> | number
    id_projeto?: IntWithAggregatesFilter<"habilidade_publicacao_projetos"> | number
    id_habilidade?: IntWithAggregatesFilter<"habilidade_publicacao_projetos"> | number
  }

  export type portfolio_freelancerWhereInput = {
    AND?: portfolio_freelancerWhereInput | portfolio_freelancerWhereInput[]
    OR?: portfolio_freelancerWhereInput[]
    NOT?: portfolio_freelancerWhereInput | portfolio_freelancerWhereInput[]
    id?: IntFilter<"portfolio_freelancer"> | number
    id_portfolio?: IntFilter<"portfolio_freelancer"> | number
    id_freelancer?: IntFilter<"portfolio_freelancer"> | number
  }

  export type portfolio_freelancerOrderByWithRelationInput = {
    id?: SortOrder
    id_portfolio?: SortOrder
    id_freelancer?: SortOrder
  }

  export type portfolio_freelancerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: portfolio_freelancerWhereInput | portfolio_freelancerWhereInput[]
    OR?: portfolio_freelancerWhereInput[]
    NOT?: portfolio_freelancerWhereInput | portfolio_freelancerWhereInput[]
    id_portfolio?: IntFilter<"portfolio_freelancer"> | number
    id_freelancer?: IntFilter<"portfolio_freelancer"> | number
  }, "id">

  export type portfolio_freelancerOrderByWithAggregationInput = {
    id?: SortOrder
    id_portfolio?: SortOrder
    id_freelancer?: SortOrder
    _count?: portfolio_freelancerCountOrderByAggregateInput
    _avg?: portfolio_freelancerAvgOrderByAggregateInput
    _max?: portfolio_freelancerMaxOrderByAggregateInput
    _min?: portfolio_freelancerMinOrderByAggregateInput
    _sum?: portfolio_freelancerSumOrderByAggregateInput
  }

  export type portfolio_freelancerScalarWhereWithAggregatesInput = {
    AND?: portfolio_freelancerScalarWhereWithAggregatesInput | portfolio_freelancerScalarWhereWithAggregatesInput[]
    OR?: portfolio_freelancerScalarWhereWithAggregatesInput[]
    NOT?: portfolio_freelancerScalarWhereWithAggregatesInput | portfolio_freelancerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"portfolio_freelancer"> | number
    id_portfolio?: IntWithAggregatesFilter<"portfolio_freelancer"> | number
    id_freelancer?: IntWithAggregatesFilter<"portfolio_freelancer"> | number
  }

  export type avaliacaoWhereInput = {
    AND?: avaliacaoWhereInput | avaliacaoWhereInput[]
    OR?: avaliacaoWhereInput[]
    NOT?: avaliacaoWhereInput | avaliacaoWhereInput[]
    id?: IntFilter<"avaliacao"> | number
    estrelas?: IntFilter<"avaliacao"> | number
    comentario?: StringFilter<"avaliacao"> | string
  }

  export type avaliacaoOrderByWithRelationInput = {
    id?: SortOrder
    estrelas?: SortOrder
    comentario?: SortOrder
  }

  export type avaliacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: avaliacaoWhereInput | avaliacaoWhereInput[]
    OR?: avaliacaoWhereInput[]
    NOT?: avaliacaoWhereInput | avaliacaoWhereInput[]
    estrelas?: IntFilter<"avaliacao"> | number
    comentario?: StringFilter<"avaliacao"> | string
  }, "id">

  export type avaliacaoOrderByWithAggregationInput = {
    id?: SortOrder
    estrelas?: SortOrder
    comentario?: SortOrder
    _count?: avaliacaoCountOrderByAggregateInput
    _avg?: avaliacaoAvgOrderByAggregateInput
    _max?: avaliacaoMaxOrderByAggregateInput
    _min?: avaliacaoMinOrderByAggregateInput
    _sum?: avaliacaoSumOrderByAggregateInput
  }

  export type avaliacaoScalarWhereWithAggregatesInput = {
    AND?: avaliacaoScalarWhereWithAggregatesInput | avaliacaoScalarWhereWithAggregatesInput[]
    OR?: avaliacaoScalarWhereWithAggregatesInput[]
    NOT?: avaliacaoScalarWhereWithAggregatesInput | avaliacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"avaliacao"> | number
    estrelas?: IntWithAggregatesFilter<"avaliacao"> | number
    comentario?: StringWithAggregatesFilter<"avaliacao"> | string
  }

  export type avaliacao_usuarioWhereInput = {
    AND?: avaliacao_usuarioWhereInput | avaliacao_usuarioWhereInput[]
    OR?: avaliacao_usuarioWhereInput[]
    NOT?: avaliacao_usuarioWhereInput | avaliacao_usuarioWhereInput[]
    id?: IntFilter<"avaliacao_usuario"> | number
    id_avaliacao?: IntFilter<"avaliacao_usuario"> | number
    id_avaliador?: IntFilter<"avaliacao_usuario"> | number
    tipo_avaliador?: Enumavaliacao_usuario_tipo_avaliadorFilter<"avaliacao_usuario"> | $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado?: IntFilter<"avaliacao_usuario"> | number
    tipo_avaliado?: Enumavaliacao_usuario_tipo_avaliadoFilter<"avaliacao_usuario"> | $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type avaliacao_usuarioOrderByWithRelationInput = {
    id?: SortOrder
    id_avaliacao?: SortOrder
    id_avaliador?: SortOrder
    tipo_avaliador?: SortOrder
    id_avaliado?: SortOrder
    tipo_avaliado?: SortOrder
  }

  export type avaliacao_usuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: avaliacao_usuarioWhereInput | avaliacao_usuarioWhereInput[]
    OR?: avaliacao_usuarioWhereInput[]
    NOT?: avaliacao_usuarioWhereInput | avaliacao_usuarioWhereInput[]
    id_avaliacao?: IntFilter<"avaliacao_usuario"> | number
    id_avaliador?: IntFilter<"avaliacao_usuario"> | number
    tipo_avaliador?: Enumavaliacao_usuario_tipo_avaliadorFilter<"avaliacao_usuario"> | $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado?: IntFilter<"avaliacao_usuario"> | number
    tipo_avaliado?: Enumavaliacao_usuario_tipo_avaliadoFilter<"avaliacao_usuario"> | $Enums.avaliacao_usuario_tipo_avaliado
  }, "id">

  export type avaliacao_usuarioOrderByWithAggregationInput = {
    id?: SortOrder
    id_avaliacao?: SortOrder
    id_avaliador?: SortOrder
    tipo_avaliador?: SortOrder
    id_avaliado?: SortOrder
    tipo_avaliado?: SortOrder
    _count?: avaliacao_usuarioCountOrderByAggregateInput
    _avg?: avaliacao_usuarioAvgOrderByAggregateInput
    _max?: avaliacao_usuarioMaxOrderByAggregateInput
    _min?: avaliacao_usuarioMinOrderByAggregateInput
    _sum?: avaliacao_usuarioSumOrderByAggregateInput
  }

  export type avaliacao_usuarioScalarWhereWithAggregatesInput = {
    AND?: avaliacao_usuarioScalarWhereWithAggregatesInput | avaliacao_usuarioScalarWhereWithAggregatesInput[]
    OR?: avaliacao_usuarioScalarWhereWithAggregatesInput[]
    NOT?: avaliacao_usuarioScalarWhereWithAggregatesInput | avaliacao_usuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"avaliacao_usuario"> | number
    id_avaliacao?: IntWithAggregatesFilter<"avaliacao_usuario"> | number
    id_avaliador?: IntWithAggregatesFilter<"avaliacao_usuario"> | number
    tipo_avaliador?: Enumavaliacao_usuario_tipo_avaliadorWithAggregatesFilter<"avaliacao_usuario"> | $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado?: IntWithAggregatesFilter<"avaliacao_usuario"> | number
    tipo_avaliado?: Enumavaliacao_usuario_tipo_avaliadoWithAggregatesFilter<"avaliacao_usuario"> | $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type pagamentosWhereInput = {
    AND?: pagamentosWhereInput | pagamentosWhereInput[]
    OR?: pagamentosWhereInput[]
    NOT?: pagamentosWhereInput | pagamentosWhereInput[]
    id?: IntFilter<"pagamentos"> | number
    id_cliente?: IntFilter<"pagamentos"> | number
    id_freelancer?: IntFilter<"pagamentos"> | number
    valor?: DecimalFilter<"pagamentos"> | Decimal | DecimalJsLike | number | string
    metodo_pagamento?: Enumpagamentos_metodo_pagamentoFilter<"pagamentos"> | $Enums.pagamentos_metodo_pagamento
    status_pagamento?: Enumpagamentos_status_pagamentoFilter<"pagamentos"> | $Enums.pagamentos_status_pagamento
    descricao?: StringNullableFilter<"pagamentos"> | string | null
    link_pagamento?: StringNullableFilter<"pagamentos"> | string | null
  }

  export type pagamentosOrderByWithRelationInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
    valor?: SortOrder
    metodo_pagamento?: SortOrder
    status_pagamento?: SortOrder
    descricao?: SortOrderInput | SortOrder
    link_pagamento?: SortOrderInput | SortOrder
  }

  export type pagamentosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: pagamentosWhereInput | pagamentosWhereInput[]
    OR?: pagamentosWhereInput[]
    NOT?: pagamentosWhereInput | pagamentosWhereInput[]
    id_cliente?: IntFilter<"pagamentos"> | number
    id_freelancer?: IntFilter<"pagamentos"> | number
    valor?: DecimalFilter<"pagamentos"> | Decimal | DecimalJsLike | number | string
    metodo_pagamento?: Enumpagamentos_metodo_pagamentoFilter<"pagamentos"> | $Enums.pagamentos_metodo_pagamento
    status_pagamento?: Enumpagamentos_status_pagamentoFilter<"pagamentos"> | $Enums.pagamentos_status_pagamento
    descricao?: StringNullableFilter<"pagamentos"> | string | null
    link_pagamento?: StringNullableFilter<"pagamentos"> | string | null
  }, "id">

  export type pagamentosOrderByWithAggregationInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
    valor?: SortOrder
    metodo_pagamento?: SortOrder
    status_pagamento?: SortOrder
    descricao?: SortOrderInput | SortOrder
    link_pagamento?: SortOrderInput | SortOrder
    _count?: pagamentosCountOrderByAggregateInput
    _avg?: pagamentosAvgOrderByAggregateInput
    _max?: pagamentosMaxOrderByAggregateInput
    _min?: pagamentosMinOrderByAggregateInput
    _sum?: pagamentosSumOrderByAggregateInput
  }

  export type pagamentosScalarWhereWithAggregatesInput = {
    AND?: pagamentosScalarWhereWithAggregatesInput | pagamentosScalarWhereWithAggregatesInput[]
    OR?: pagamentosScalarWhereWithAggregatesInput[]
    NOT?: pagamentosScalarWhereWithAggregatesInput | pagamentosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"pagamentos"> | number
    id_cliente?: IntWithAggregatesFilter<"pagamentos"> | number
    id_freelancer?: IntWithAggregatesFilter<"pagamentos"> | number
    valor?: DecimalWithAggregatesFilter<"pagamentos"> | Decimal | DecimalJsLike | number | string
    metodo_pagamento?: Enumpagamentos_metodo_pagamentoWithAggregatesFilter<"pagamentos"> | $Enums.pagamentos_metodo_pagamento
    status_pagamento?: Enumpagamentos_status_pagamentoWithAggregatesFilter<"pagamentos"> | $Enums.pagamentos_status_pagamento
    descricao?: StringNullableWithAggregatesFilter<"pagamentos"> | string | null
    link_pagamento?: StringNullableWithAggregatesFilter<"pagamentos"> | string | null
  }

  export type freelancer_projetoWhereInput = {
    AND?: freelancer_projetoWhereInput | freelancer_projetoWhereInput[]
    OR?: freelancer_projetoWhereInput[]
    NOT?: freelancer_projetoWhereInput | freelancer_projetoWhereInput[]
    id?: IntFilter<"freelancer_projeto"> | number
    id_projeto?: IntFilter<"freelancer_projeto"> | number
    id_freelancer?: IntFilter<"freelancer_projeto"> | number
    status?: BoolFilter<"freelancer_projeto"> | boolean
  }

  export type freelancer_projetoOrderByWithRelationInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_freelancer?: SortOrder
    status?: SortOrder
  }

  export type freelancer_projetoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: freelancer_projetoWhereInput | freelancer_projetoWhereInput[]
    OR?: freelancer_projetoWhereInput[]
    NOT?: freelancer_projetoWhereInput | freelancer_projetoWhereInput[]
    id_projeto?: IntFilter<"freelancer_projeto"> | number
    id_freelancer?: IntFilter<"freelancer_projeto"> | number
    status?: BoolFilter<"freelancer_projeto"> | boolean
  }, "id">

  export type freelancer_projetoOrderByWithAggregationInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_freelancer?: SortOrder
    status?: SortOrder
    _count?: freelancer_projetoCountOrderByAggregateInput
    _avg?: freelancer_projetoAvgOrderByAggregateInput
    _max?: freelancer_projetoMaxOrderByAggregateInput
    _min?: freelancer_projetoMinOrderByAggregateInput
    _sum?: freelancer_projetoSumOrderByAggregateInput
  }

  export type freelancer_projetoScalarWhereWithAggregatesInput = {
    AND?: freelancer_projetoScalarWhereWithAggregatesInput | freelancer_projetoScalarWhereWithAggregatesInput[]
    OR?: freelancer_projetoScalarWhereWithAggregatesInput[]
    NOT?: freelancer_projetoScalarWhereWithAggregatesInput | freelancer_projetoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"freelancer_projeto"> | number
    id_projeto?: IntWithAggregatesFilter<"freelancer_projeto"> | number
    id_freelancer?: IntWithAggregatesFilter<"freelancer_projeto"> | number
    status?: BoolWithAggregatesFilter<"freelancer_projeto"> | boolean
  }

  export type denunciaWhereInput = {
    AND?: denunciaWhereInput | denunciaWhereInput[]
    OR?: denunciaWhereInput[]
    NOT?: denunciaWhereInput | denunciaWhereInput[]
    id?: IntFilter<"denuncia"> | number
    arquivo?: StringFilter<"denuncia"> | string
    descricao?: StringFilter<"denuncia"> | string
  }

  export type denunciaOrderByWithRelationInput = {
    id?: SortOrder
    arquivo?: SortOrder
    descricao?: SortOrder
  }

  export type denunciaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: denunciaWhereInput | denunciaWhereInput[]
    OR?: denunciaWhereInput[]
    NOT?: denunciaWhereInput | denunciaWhereInput[]
    arquivo?: StringFilter<"denuncia"> | string
    descricao?: StringFilter<"denuncia"> | string
  }, "id">

  export type denunciaOrderByWithAggregationInput = {
    id?: SortOrder
    arquivo?: SortOrder
    descricao?: SortOrder
    _count?: denunciaCountOrderByAggregateInput
    _avg?: denunciaAvgOrderByAggregateInput
    _max?: denunciaMaxOrderByAggregateInput
    _min?: denunciaMinOrderByAggregateInput
    _sum?: denunciaSumOrderByAggregateInput
  }

  export type denunciaScalarWhereWithAggregatesInput = {
    AND?: denunciaScalarWhereWithAggregatesInput | denunciaScalarWhereWithAggregatesInput[]
    OR?: denunciaScalarWhereWithAggregatesInput[]
    NOT?: denunciaScalarWhereWithAggregatesInput | denunciaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"denuncia"> | number
    arquivo?: StringWithAggregatesFilter<"denuncia"> | string
    descricao?: StringWithAggregatesFilter<"denuncia"> | string
  }

  export type disputaWhereInput = {
    AND?: disputaWhereInput | disputaWhereInput[]
    OR?: disputaWhereInput[]
    NOT?: disputaWhereInput | disputaWhereInput[]
    id?: IntFilter<"disputa"> | number
    id_denuncia?: IntFilter<"disputa"> | number
    id_denunciante?: IntFilter<"disputa"> | number
    tipo_denunciante?: Enumdisputa_tipo_denuncianteFilter<"disputa"> | $Enums.disputa_tipo_denunciante
    id_denunciado?: IntFilter<"disputa"> | number
    tipo_denunciado?: Enumdisputa_tipo_denunciadoFilter<"disputa"> | $Enums.disputa_tipo_denunciado
    situacao?: Enumdisputa_situacaoFilter<"disputa"> | $Enums.disputa_situacao
  }

  export type disputaOrderByWithRelationInput = {
    id?: SortOrder
    id_denuncia?: SortOrder
    id_denunciante?: SortOrder
    tipo_denunciante?: SortOrder
    id_denunciado?: SortOrder
    tipo_denunciado?: SortOrder
    situacao?: SortOrder
  }

  export type disputaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: disputaWhereInput | disputaWhereInput[]
    OR?: disputaWhereInput[]
    NOT?: disputaWhereInput | disputaWhereInput[]
    id_denuncia?: IntFilter<"disputa"> | number
    id_denunciante?: IntFilter<"disputa"> | number
    tipo_denunciante?: Enumdisputa_tipo_denuncianteFilter<"disputa"> | $Enums.disputa_tipo_denunciante
    id_denunciado?: IntFilter<"disputa"> | number
    tipo_denunciado?: Enumdisputa_tipo_denunciadoFilter<"disputa"> | $Enums.disputa_tipo_denunciado
    situacao?: Enumdisputa_situacaoFilter<"disputa"> | $Enums.disputa_situacao
  }, "id">

  export type disputaOrderByWithAggregationInput = {
    id?: SortOrder
    id_denuncia?: SortOrder
    id_denunciante?: SortOrder
    tipo_denunciante?: SortOrder
    id_denunciado?: SortOrder
    tipo_denunciado?: SortOrder
    situacao?: SortOrder
    _count?: disputaCountOrderByAggregateInput
    _avg?: disputaAvgOrderByAggregateInput
    _max?: disputaMaxOrderByAggregateInput
    _min?: disputaMinOrderByAggregateInput
    _sum?: disputaSumOrderByAggregateInput
  }

  export type disputaScalarWhereWithAggregatesInput = {
    AND?: disputaScalarWhereWithAggregatesInput | disputaScalarWhereWithAggregatesInput[]
    OR?: disputaScalarWhereWithAggregatesInput[]
    NOT?: disputaScalarWhereWithAggregatesInput | disputaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"disputa"> | number
    id_denuncia?: IntWithAggregatesFilter<"disputa"> | number
    id_denunciante?: IntWithAggregatesFilter<"disputa"> | number
    tipo_denunciante?: Enumdisputa_tipo_denuncianteWithAggregatesFilter<"disputa"> | $Enums.disputa_tipo_denunciante
    id_denunciado?: IntWithAggregatesFilter<"disputa"> | number
    tipo_denunciado?: Enumdisputa_tipo_denunciadoWithAggregatesFilter<"disputa"> | $Enums.disputa_tipo_denunciado
    situacao?: Enumdisputa_situacaoWithAggregatesFilter<"disputa"> | $Enums.disputa_situacao
  }

  export type solicitacao_pagamentoWhereInput = {
    AND?: solicitacao_pagamentoWhereInput | solicitacao_pagamentoWhereInput[]
    OR?: solicitacao_pagamentoWhereInput[]
    NOT?: solicitacao_pagamentoWhereInput | solicitacao_pagamentoWhereInput[]
    id?: IntFilter<"solicitacao_pagamento"> | number
    id_freelancer?: IntFilter<"solicitacao_pagamento"> | number
    valor_solicitado?: DecimalFilter<"solicitacao_pagamento"> | Decimal | DecimalJsLike | number | string
    banco?: StringFilter<"solicitacao_pagamento"> | string
    agencia?: StringFilter<"solicitacao_pagamento"> | string
    numero_conta?: StringFilter<"solicitacao_pagamento"> | string
    tipo_conta?: StringFilter<"solicitacao_pagamento"> | string
    nome_completo_titular?: StringFilter<"solicitacao_pagamento"> | string
    cpf?: StringFilter<"solicitacao_pagamento"> | string
    status_pago?: BoolFilter<"solicitacao_pagamento"> | boolean
  }

  export type solicitacao_pagamentoOrderByWithRelationInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    valor_solicitado?: SortOrder
    banco?: SortOrder
    agencia?: SortOrder
    numero_conta?: SortOrder
    tipo_conta?: SortOrder
    nome_completo_titular?: SortOrder
    cpf?: SortOrder
    status_pago?: SortOrder
  }

  export type solicitacao_pagamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: solicitacao_pagamentoWhereInput | solicitacao_pagamentoWhereInput[]
    OR?: solicitacao_pagamentoWhereInput[]
    NOT?: solicitacao_pagamentoWhereInput | solicitacao_pagamentoWhereInput[]
    id_freelancer?: IntFilter<"solicitacao_pagamento"> | number
    valor_solicitado?: DecimalFilter<"solicitacao_pagamento"> | Decimal | DecimalJsLike | number | string
    banco?: StringFilter<"solicitacao_pagamento"> | string
    agencia?: StringFilter<"solicitacao_pagamento"> | string
    numero_conta?: StringFilter<"solicitacao_pagamento"> | string
    tipo_conta?: StringFilter<"solicitacao_pagamento"> | string
    nome_completo_titular?: StringFilter<"solicitacao_pagamento"> | string
    cpf?: StringFilter<"solicitacao_pagamento"> | string
    status_pago?: BoolFilter<"solicitacao_pagamento"> | boolean
  }, "id">

  export type solicitacao_pagamentoOrderByWithAggregationInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    valor_solicitado?: SortOrder
    banco?: SortOrder
    agencia?: SortOrder
    numero_conta?: SortOrder
    tipo_conta?: SortOrder
    nome_completo_titular?: SortOrder
    cpf?: SortOrder
    status_pago?: SortOrder
    _count?: solicitacao_pagamentoCountOrderByAggregateInput
    _avg?: solicitacao_pagamentoAvgOrderByAggregateInput
    _max?: solicitacao_pagamentoMaxOrderByAggregateInput
    _min?: solicitacao_pagamentoMinOrderByAggregateInput
    _sum?: solicitacao_pagamentoSumOrderByAggregateInput
  }

  export type solicitacao_pagamentoScalarWhereWithAggregatesInput = {
    AND?: solicitacao_pagamentoScalarWhereWithAggregatesInput | solicitacao_pagamentoScalarWhereWithAggregatesInput[]
    OR?: solicitacao_pagamentoScalarWhereWithAggregatesInput[]
    NOT?: solicitacao_pagamentoScalarWhereWithAggregatesInput | solicitacao_pagamentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"solicitacao_pagamento"> | number
    id_freelancer?: IntWithAggregatesFilter<"solicitacao_pagamento"> | number
    valor_solicitado?: DecimalWithAggregatesFilter<"solicitacao_pagamento"> | Decimal | DecimalJsLike | number | string
    banco?: StringWithAggregatesFilter<"solicitacao_pagamento"> | string
    agencia?: StringWithAggregatesFilter<"solicitacao_pagamento"> | string
    numero_conta?: StringWithAggregatesFilter<"solicitacao_pagamento"> | string
    tipo_conta?: StringWithAggregatesFilter<"solicitacao_pagamento"> | string
    nome_completo_titular?: StringWithAggregatesFilter<"solicitacao_pagamento"> | string
    cpf?: StringWithAggregatesFilter<"solicitacao_pagamento"> | string
    status_pago?: BoolWithAggregatesFilter<"solicitacao_pagamento"> | boolean
  }

  export type total_a_receberWhereInput = {
    AND?: total_a_receberWhereInput | total_a_receberWhereInput[]
    OR?: total_a_receberWhereInput[]
    NOT?: total_a_receberWhereInput | total_a_receberWhereInput[]
    id_freelancer?: IntFilter<"total_a_receber"> | number
    total?: DecimalFilter<"total_a_receber"> | Decimal | DecimalJsLike | number | string
  }

  export type total_a_receberOrderByWithRelationInput = {
    id_freelancer?: SortOrder
    total?: SortOrder
  }

  export type total_a_receberWhereUniqueInput = Prisma.AtLeast<{
    id_freelancer?: number
    AND?: total_a_receberWhereInput | total_a_receberWhereInput[]
    OR?: total_a_receberWhereInput[]
    NOT?: total_a_receberWhereInput | total_a_receberWhereInput[]
    total?: DecimalFilter<"total_a_receber"> | Decimal | DecimalJsLike | number | string
  }, "id_freelancer">

  export type total_a_receberOrderByWithAggregationInput = {
    id_freelancer?: SortOrder
    total?: SortOrder
    _count?: total_a_receberCountOrderByAggregateInput
    _avg?: total_a_receberAvgOrderByAggregateInput
    _max?: total_a_receberMaxOrderByAggregateInput
    _min?: total_a_receberMinOrderByAggregateInput
    _sum?: total_a_receberSumOrderByAggregateInput
  }

  export type total_a_receberScalarWhereWithAggregatesInput = {
    AND?: total_a_receberScalarWhereWithAggregatesInput | total_a_receberScalarWhereWithAggregatesInput[]
    OR?: total_a_receberScalarWhereWithAggregatesInput[]
    NOT?: total_a_receberScalarWhereWithAggregatesInput | total_a_receberScalarWhereWithAggregatesInput[]
    id_freelancer?: IntWithAggregatesFilter<"total_a_receber"> | number
    total?: DecimalWithAggregatesFilter<"total_a_receber"> | Decimal | DecimalJsLike | number | string
  }

  export type cadastro_clienteCreateInput = {
    nome_cliente: string
    cnpj_cliente: bigint | number
    email_cliente: string
    senha_cliente: string
    is_premium?: boolean
  }

  export type cadastro_clienteUncheckedCreateInput = {
    id?: number
    nome_cliente: string
    cnpj_cliente: bigint | number
    email_cliente: string
    senha_cliente: string
    is_premium?: boolean
  }

  export type cadastro_clienteUpdateInput = {
    nome_cliente?: StringFieldUpdateOperationsInput | string
    cnpj_cliente?: BigIntFieldUpdateOperationsInput | bigint | number
    email_cliente?: StringFieldUpdateOperationsInput | string
    senha_cliente?: StringFieldUpdateOperationsInput | string
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cadastro_clienteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_cliente?: StringFieldUpdateOperationsInput | string
    cnpj_cliente?: BigIntFieldUpdateOperationsInput | bigint | number
    email_cliente?: StringFieldUpdateOperationsInput | string
    senha_cliente?: StringFieldUpdateOperationsInput | string
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cadastro_clienteCreateManyInput = {
    id?: number
    nome_cliente: string
    cnpj_cliente: bigint | number
    email_cliente: string
    senha_cliente: string
    is_premium?: boolean
  }

  export type cadastro_clienteUpdateManyMutationInput = {
    nome_cliente?: StringFieldUpdateOperationsInput | string
    cnpj_cliente?: BigIntFieldUpdateOperationsInput | bigint | number
    email_cliente?: StringFieldUpdateOperationsInput | string
    senha_cliente?: StringFieldUpdateOperationsInput | string
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cadastro_clienteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_cliente?: StringFieldUpdateOperationsInput | string
    cnpj_cliente?: BigIntFieldUpdateOperationsInput | bigint | number
    email_cliente?: StringFieldUpdateOperationsInput | string
    senha_cliente?: StringFieldUpdateOperationsInput | string
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cadastro_freelancerCreateInput = {
    nome_freelancer: string
    data_nascimento: Date | string
    cpf_freelancer: bigint | number
    email_freelancer: string
    senha_freelancer: string
    is_premium?: boolean
  }

  export type cadastro_freelancerUncheckedCreateInput = {
    id?: number
    nome_freelancer: string
    data_nascimento: Date | string
    cpf_freelancer: bigint | number
    email_freelancer: string
    senha_freelancer: string
    is_premium?: boolean
  }

  export type cadastro_freelancerUpdateInput = {
    nome_freelancer?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf_freelancer?: BigIntFieldUpdateOperationsInput | bigint | number
    email_freelancer?: StringFieldUpdateOperationsInput | string
    senha_freelancer?: StringFieldUpdateOperationsInput | string
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cadastro_freelancerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_freelancer?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf_freelancer?: BigIntFieldUpdateOperationsInput | bigint | number
    email_freelancer?: StringFieldUpdateOperationsInput | string
    senha_freelancer?: StringFieldUpdateOperationsInput | string
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cadastro_freelancerCreateManyInput = {
    id?: number
    nome_freelancer: string
    data_nascimento: Date | string
    cpf_freelancer: bigint | number
    email_freelancer: string
    senha_freelancer: string
    is_premium?: boolean
  }

  export type cadastro_freelancerUpdateManyMutationInput = {
    nome_freelancer?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf_freelancer?: BigIntFieldUpdateOperationsInput | bigint | number
    email_freelancer?: StringFieldUpdateOperationsInput | string
    senha_freelancer?: StringFieldUpdateOperationsInput | string
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cadastro_freelancerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_freelancer?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf_freelancer?: BigIntFieldUpdateOperationsInput | bigint | number
    email_freelancer?: StringFieldUpdateOperationsInput | string
    senha_freelancer?: StringFieldUpdateOperationsInput | string
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type categoriasCreateInput = {
    nome_categoria: string
    icon_categoria: string
  }

  export type categoriasUncheckedCreateInput = {
    id?: number
    nome_categoria: string
    icon_categoria: string
  }

  export type categoriasUpdateInput = {
    nome_categoria?: StringFieldUpdateOperationsInput | string
    icon_categoria?: StringFieldUpdateOperationsInput | string
  }

  export type categoriasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    icon_categoria?: StringFieldUpdateOperationsInput | string
  }

  export type categoriasCreateManyInput = {
    id?: number
    nome_categoria: string
    icon_categoria: string
  }

  export type categoriasUpdateManyMutationInput = {
    nome_categoria?: StringFieldUpdateOperationsInput | string
    icon_categoria?: StringFieldUpdateOperationsInput | string
  }

  export type categoriasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    icon_categoria?: StringFieldUpdateOperationsInput | string
  }

  export type descricao_perfilCreateInput = {
    descricao: string
    id_cliente?: number | null
    id_freelancer?: number | null
  }

  export type descricao_perfilUncheckedCreateInput = {
    id?: number
    descricao: string
    id_cliente?: number | null
    id_freelancer?: number | null
  }

  export type descricao_perfilUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_freelancer?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type descricao_perfilUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_freelancer?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type descricao_perfilCreateManyInput = {
    id?: number
    descricao: string
    id_cliente?: number | null
    id_freelancer?: number | null
  }

  export type descricao_perfilUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_freelancer?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type descricao_perfilUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_freelancer?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type foto_perfilCreateInput = {
    foto_perfil: string
    id_cliente?: number | null
    id_freelancer?: number | null
  }

  export type foto_perfilUncheckedCreateInput = {
    id?: number
    foto_perfil: string
    id_cliente?: number | null
    id_freelancer?: number | null
  }

  export type foto_perfilUpdateInput = {
    foto_perfil?: StringFieldUpdateOperationsInput | string
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_freelancer?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type foto_perfilUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    foto_perfil?: StringFieldUpdateOperationsInput | string
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_freelancer?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type foto_perfilCreateManyInput = {
    id?: number
    foto_perfil: string
    id_cliente?: number | null
    id_freelancer?: number | null
  }

  export type foto_perfilUpdateManyMutationInput = {
    foto_perfil?: StringFieldUpdateOperationsInput | string
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_freelancer?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type foto_perfilUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    foto_perfil?: StringFieldUpdateOperationsInput | string
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    id_freelancer?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type freelancer_categoriaCreateInput = {
    id_freelancer: number
    id_categoria: number
  }

  export type freelancer_categoriaUncheckedCreateInput = {
    id?: number
    id_freelancer: number
    id_categoria: number
  }

  export type freelancer_categoriaUpdateInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type freelancer_categoriaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type freelancer_categoriaCreateManyInput = {
    id?: number
    id_freelancer: number
    id_categoria: number
  }

  export type freelancer_categoriaUpdateManyMutationInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type freelancer_categoriaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type freelancer_habilidadeCreateInput = {
    id_freelancer: number
    id_habilidade: number
  }

  export type freelancer_habilidadeUncheckedCreateInput = {
    id?: number
    id_freelancer: number
    id_habilidade: number
  }

  export type freelancer_habilidadeUpdateInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    id_habilidade?: IntFieldUpdateOperationsInput | number
  }

  export type freelancer_habilidadeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    id_habilidade?: IntFieldUpdateOperationsInput | number
  }

  export type freelancer_habilidadeCreateManyInput = {
    id?: number
    id_freelancer: number
    id_habilidade: number
  }

  export type freelancer_habilidadeUpdateManyMutationInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    id_habilidade?: IntFieldUpdateOperationsInput | number
  }

  export type freelancer_habilidadeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    id_habilidade?: IntFieldUpdateOperationsInput | number
  }

  export type habilidadesCreateInput = {
    nome_habilidade: string
    icon_habilidade: string
  }

  export type habilidadesUncheckedCreateInput = {
    id?: number
    nome_habilidade: string
    icon_habilidade: string
  }

  export type habilidadesUpdateInput = {
    nome_habilidade?: StringFieldUpdateOperationsInput | string
    icon_habilidade?: StringFieldUpdateOperationsInput | string
  }

  export type habilidadesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_habilidade?: StringFieldUpdateOperationsInput | string
    icon_habilidade?: StringFieldUpdateOperationsInput | string
  }

  export type habilidadesCreateManyInput = {
    id?: number
    nome_habilidade: string
    icon_habilidade: string
  }

  export type habilidadesUpdateManyMutationInput = {
    nome_habilidade?: StringFieldUpdateOperationsInput | string
    icon_habilidade?: StringFieldUpdateOperationsInput | string
  }

  export type habilidadesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_habilidade?: StringFieldUpdateOperationsInput | string
    icon_habilidade?: StringFieldUpdateOperationsInput | string
  }

  export type nivel_experienciaCreateInput = {
    nivel_experiencia?: string | null
  }

  export type nivel_experienciaUncheckedCreateInput = {
    id?: number
    nivel_experiencia?: string | null
  }

  export type nivel_experienciaUpdateInput = {
    nivel_experiencia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type nivel_experienciaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nivel_experiencia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type nivel_experienciaCreateManyInput = {
    id?: number
    nivel_experiencia?: string | null
  }

  export type nivel_experienciaUpdateManyMutationInput = {
    nivel_experiencia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type nivel_experienciaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nivel_experiencia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type portfolioCreateInput = {
    arquivo: string
  }

  export type portfolioUncheckedCreateInput = {
    id?: number
    arquivo: string
  }

  export type portfolioUpdateInput = {
    arquivo?: StringFieldUpdateOperationsInput | string
  }

  export type portfolioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    arquivo?: StringFieldUpdateOperationsInput | string
  }

  export type portfolioCreateManyInput = {
    id?: number
    arquivo: string
  }

  export type portfolioUpdateManyMutationInput = {
    arquivo?: StringFieldUpdateOperationsInput | string
  }

  export type portfolioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    arquivo?: StringFieldUpdateOperationsInput | string
  }

  export type publicacao_projetosCreateInput = {
    id_cliente: number
    nome_projeto?: string | null
    descricao_projeto?: string | null
    orcamento: number
    id_nivel_experiencia: number
    is_premium?: boolean
  }

  export type publicacao_projetosUncheckedCreateInput = {
    id?: number
    id_cliente: number
    nome_projeto?: string | null
    descricao_projeto?: string | null
    orcamento: number
    id_nivel_experiencia: number
    is_premium?: boolean
  }

  export type publicacao_projetosUpdateInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nome_projeto?: NullableStringFieldUpdateOperationsInput | string | null
    descricao_projeto?: NullableStringFieldUpdateOperationsInput | string | null
    orcamento?: FloatFieldUpdateOperationsInput | number
    id_nivel_experiencia?: IntFieldUpdateOperationsInput | number
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type publicacao_projetosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    nome_projeto?: NullableStringFieldUpdateOperationsInput | string | null
    descricao_projeto?: NullableStringFieldUpdateOperationsInput | string | null
    orcamento?: FloatFieldUpdateOperationsInput | number
    id_nivel_experiencia?: IntFieldUpdateOperationsInput | number
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type publicacao_projetosCreateManyInput = {
    id?: number
    id_cliente: number
    nome_projeto?: string | null
    descricao_projeto?: string | null
    orcamento: number
    id_nivel_experiencia: number
    is_premium?: boolean
  }

  export type publicacao_projetosUpdateManyMutationInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nome_projeto?: NullableStringFieldUpdateOperationsInput | string | null
    descricao_projeto?: NullableStringFieldUpdateOperationsInput | string | null
    orcamento?: FloatFieldUpdateOperationsInput | number
    id_nivel_experiencia?: IntFieldUpdateOperationsInput | number
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type publicacao_projetosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    nome_projeto?: NullableStringFieldUpdateOperationsInput | string | null
    descricao_projeto?: NullableStringFieldUpdateOperationsInput | string | null
    orcamento?: FloatFieldUpdateOperationsInput | number
    id_nivel_experiencia?: IntFieldUpdateOperationsInput | number
    is_premium?: BoolFieldUpdateOperationsInput | boolean
  }

  export type categoria_publicacao_projetosCreateInput = {
    id_projeto: number
    id_categoria: number
  }

  export type categoria_publicacao_projetosUncheckedCreateInput = {
    id?: number
    id_projeto: number
    id_categoria: number
  }

  export type categoria_publicacao_projetosUpdateInput = {
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type categoria_publicacao_projetosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type categoria_publicacao_projetosCreateManyInput = {
    id?: number
    id_projeto: number
    id_categoria: number
  }

  export type categoria_publicacao_projetosUpdateManyMutationInput = {
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type categoria_publicacao_projetosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type habilidade_publicacao_projetosCreateInput = {
    id_projeto: number
    id_habilidade: number
  }

  export type habilidade_publicacao_projetosUncheckedCreateInput = {
    id?: number
    id_projeto: number
    id_habilidade: number
  }

  export type habilidade_publicacao_projetosUpdateInput = {
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_habilidade?: IntFieldUpdateOperationsInput | number
  }

  export type habilidade_publicacao_projetosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_habilidade?: IntFieldUpdateOperationsInput | number
  }

  export type habilidade_publicacao_projetosCreateManyInput = {
    id?: number
    id_projeto: number
    id_habilidade: number
  }

  export type habilidade_publicacao_projetosUpdateManyMutationInput = {
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_habilidade?: IntFieldUpdateOperationsInput | number
  }

  export type habilidade_publicacao_projetosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_habilidade?: IntFieldUpdateOperationsInput | number
  }

  export type portfolio_freelancerCreateInput = {
    id_portfolio: number
    id_freelancer: number
  }

  export type portfolio_freelancerUncheckedCreateInput = {
    id?: number
    id_portfolio: number
    id_freelancer: number
  }

  export type portfolio_freelancerUpdateInput = {
    id_portfolio?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
  }

  export type portfolio_freelancerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_portfolio?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
  }

  export type portfolio_freelancerCreateManyInput = {
    id?: number
    id_portfolio: number
    id_freelancer: number
  }

  export type portfolio_freelancerUpdateManyMutationInput = {
    id_portfolio?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
  }

  export type portfolio_freelancerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_portfolio?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
  }

  export type avaliacaoCreateInput = {
    estrelas: number
    comentario: string
  }

  export type avaliacaoUncheckedCreateInput = {
    id?: number
    estrelas: number
    comentario: string
  }

  export type avaliacaoUpdateInput = {
    estrelas?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
  }

  export type avaliacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    estrelas?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
  }

  export type avaliacaoCreateManyInput = {
    id?: number
    estrelas: number
    comentario: string
  }

  export type avaliacaoUpdateManyMutationInput = {
    estrelas?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
  }

  export type avaliacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    estrelas?: IntFieldUpdateOperationsInput | number
    comentario?: StringFieldUpdateOperationsInput | string
  }

  export type avaliacao_usuarioCreateInput = {
    id_avaliacao: number
    id_avaliador: number
    tipo_avaliador: $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado: number
    tipo_avaliado: $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type avaliacao_usuarioUncheckedCreateInput = {
    id?: number
    id_avaliacao: number
    id_avaliador: number
    tipo_avaliador: $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado: number
    tipo_avaliado: $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type avaliacao_usuarioUpdateInput = {
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    id_avaliador?: IntFieldUpdateOperationsInput | number
    tipo_avaliador?: Enumavaliacao_usuario_tipo_avaliadorFieldUpdateOperationsInput | $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado?: IntFieldUpdateOperationsInput | number
    tipo_avaliado?: Enumavaliacao_usuario_tipo_avaliadoFieldUpdateOperationsInput | $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type avaliacao_usuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    id_avaliador?: IntFieldUpdateOperationsInput | number
    tipo_avaliador?: Enumavaliacao_usuario_tipo_avaliadorFieldUpdateOperationsInput | $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado?: IntFieldUpdateOperationsInput | number
    tipo_avaliado?: Enumavaliacao_usuario_tipo_avaliadoFieldUpdateOperationsInput | $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type avaliacao_usuarioCreateManyInput = {
    id?: number
    id_avaliacao: number
    id_avaliador: number
    tipo_avaliador: $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado: number
    tipo_avaliado: $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type avaliacao_usuarioUpdateManyMutationInput = {
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    id_avaliador?: IntFieldUpdateOperationsInput | number
    tipo_avaliador?: Enumavaliacao_usuario_tipo_avaliadorFieldUpdateOperationsInput | $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado?: IntFieldUpdateOperationsInput | number
    tipo_avaliado?: Enumavaliacao_usuario_tipo_avaliadoFieldUpdateOperationsInput | $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type avaliacao_usuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    id_avaliador?: IntFieldUpdateOperationsInput | number
    tipo_avaliador?: Enumavaliacao_usuario_tipo_avaliadorFieldUpdateOperationsInput | $Enums.avaliacao_usuario_tipo_avaliador
    id_avaliado?: IntFieldUpdateOperationsInput | number
    tipo_avaliado?: Enumavaliacao_usuario_tipo_avaliadoFieldUpdateOperationsInput | $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type pagamentosCreateInput = {
    id_cliente: number
    id_freelancer: number
    valor: Decimal | DecimalJsLike | number | string
    metodo_pagamento: $Enums.pagamentos_metodo_pagamento
    status_pagamento?: $Enums.pagamentos_status_pagamento
    descricao?: string | null
    link_pagamento?: string | null
  }

  export type pagamentosUncheckedCreateInput = {
    id?: number
    id_cliente: number
    id_freelancer: number
    valor: Decimal | DecimalJsLike | number | string
    metodo_pagamento: $Enums.pagamentos_metodo_pagamento
    status_pagamento?: $Enums.pagamentos_status_pagamento
    descricao?: string | null
    link_pagamento?: string | null
  }

  export type pagamentosUpdateInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    metodo_pagamento?: Enumpagamentos_metodo_pagamentoFieldUpdateOperationsInput | $Enums.pagamentos_metodo_pagamento
    status_pagamento?: Enumpagamentos_status_pagamentoFieldUpdateOperationsInput | $Enums.pagamentos_status_pagamento
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    link_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pagamentosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    metodo_pagamento?: Enumpagamentos_metodo_pagamentoFieldUpdateOperationsInput | $Enums.pagamentos_metodo_pagamento
    status_pagamento?: Enumpagamentos_status_pagamentoFieldUpdateOperationsInput | $Enums.pagamentos_status_pagamento
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    link_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pagamentosCreateManyInput = {
    id?: number
    id_cliente: number
    id_freelancer: number
    valor: Decimal | DecimalJsLike | number | string
    metodo_pagamento: $Enums.pagamentos_metodo_pagamento
    status_pagamento?: $Enums.pagamentos_status_pagamento
    descricao?: string | null
    link_pagamento?: string | null
  }

  export type pagamentosUpdateManyMutationInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    metodo_pagamento?: Enumpagamentos_metodo_pagamentoFieldUpdateOperationsInput | $Enums.pagamentos_metodo_pagamento
    status_pagamento?: Enumpagamentos_status_pagamentoFieldUpdateOperationsInput | $Enums.pagamentos_status_pagamento
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    link_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pagamentosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    metodo_pagamento?: Enumpagamentos_metodo_pagamentoFieldUpdateOperationsInput | $Enums.pagamentos_metodo_pagamento
    status_pagamento?: Enumpagamentos_status_pagamentoFieldUpdateOperationsInput | $Enums.pagamentos_status_pagamento
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    link_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type freelancer_projetoCreateInput = {
    id_projeto: number
    id_freelancer: number
    status?: boolean
  }

  export type freelancer_projetoUncheckedCreateInput = {
    id?: number
    id_projeto: number
    id_freelancer: number
    status?: boolean
  }

  export type freelancer_projetoUpdateInput = {
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type freelancer_projetoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type freelancer_projetoCreateManyInput = {
    id?: number
    id_projeto: number
    id_freelancer: number
    status?: boolean
  }

  export type freelancer_projetoUpdateManyMutationInput = {
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type freelancer_projetoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_projeto?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type denunciaCreateInput = {
    arquivo: string
    descricao: string
  }

  export type denunciaUncheckedCreateInput = {
    id?: number
    arquivo: string
    descricao: string
  }

  export type denunciaUpdateInput = {
    arquivo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type denunciaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    arquivo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type denunciaCreateManyInput = {
    id?: number
    arquivo: string
    descricao: string
  }

  export type denunciaUpdateManyMutationInput = {
    arquivo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type denunciaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    arquivo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type disputaCreateInput = {
    id_denuncia: number
    id_denunciante: number
    tipo_denunciante: $Enums.disputa_tipo_denunciante
    id_denunciado: number
    tipo_denunciado: $Enums.disputa_tipo_denunciado
    situacao?: $Enums.disputa_situacao
  }

  export type disputaUncheckedCreateInput = {
    id?: number
    id_denuncia: number
    id_denunciante: number
    tipo_denunciante: $Enums.disputa_tipo_denunciante
    id_denunciado: number
    tipo_denunciado: $Enums.disputa_tipo_denunciado
    situacao?: $Enums.disputa_situacao
  }

  export type disputaUpdateInput = {
    id_denuncia?: IntFieldUpdateOperationsInput | number
    id_denunciante?: IntFieldUpdateOperationsInput | number
    tipo_denunciante?: Enumdisputa_tipo_denuncianteFieldUpdateOperationsInput | $Enums.disputa_tipo_denunciante
    id_denunciado?: IntFieldUpdateOperationsInput | number
    tipo_denunciado?: Enumdisputa_tipo_denunciadoFieldUpdateOperationsInput | $Enums.disputa_tipo_denunciado
    situacao?: Enumdisputa_situacaoFieldUpdateOperationsInput | $Enums.disputa_situacao
  }

  export type disputaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_denuncia?: IntFieldUpdateOperationsInput | number
    id_denunciante?: IntFieldUpdateOperationsInput | number
    tipo_denunciante?: Enumdisputa_tipo_denuncianteFieldUpdateOperationsInput | $Enums.disputa_tipo_denunciante
    id_denunciado?: IntFieldUpdateOperationsInput | number
    tipo_denunciado?: Enumdisputa_tipo_denunciadoFieldUpdateOperationsInput | $Enums.disputa_tipo_denunciado
    situacao?: Enumdisputa_situacaoFieldUpdateOperationsInput | $Enums.disputa_situacao
  }

  export type disputaCreateManyInput = {
    id?: number
    id_denuncia: number
    id_denunciante: number
    tipo_denunciante: $Enums.disputa_tipo_denunciante
    id_denunciado: number
    tipo_denunciado: $Enums.disputa_tipo_denunciado
    situacao?: $Enums.disputa_situacao
  }

  export type disputaUpdateManyMutationInput = {
    id_denuncia?: IntFieldUpdateOperationsInput | number
    id_denunciante?: IntFieldUpdateOperationsInput | number
    tipo_denunciante?: Enumdisputa_tipo_denuncianteFieldUpdateOperationsInput | $Enums.disputa_tipo_denunciante
    id_denunciado?: IntFieldUpdateOperationsInput | number
    tipo_denunciado?: Enumdisputa_tipo_denunciadoFieldUpdateOperationsInput | $Enums.disputa_tipo_denunciado
    situacao?: Enumdisputa_situacaoFieldUpdateOperationsInput | $Enums.disputa_situacao
  }

  export type disputaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_denuncia?: IntFieldUpdateOperationsInput | number
    id_denunciante?: IntFieldUpdateOperationsInput | number
    tipo_denunciante?: Enumdisputa_tipo_denuncianteFieldUpdateOperationsInput | $Enums.disputa_tipo_denunciante
    id_denunciado?: IntFieldUpdateOperationsInput | number
    tipo_denunciado?: Enumdisputa_tipo_denunciadoFieldUpdateOperationsInput | $Enums.disputa_tipo_denunciado
    situacao?: Enumdisputa_situacaoFieldUpdateOperationsInput | $Enums.disputa_situacao
  }

  export type solicitacao_pagamentoCreateInput = {
    id_freelancer: number
    valor_solicitado: Decimal | DecimalJsLike | number | string
    banco: string
    agencia: string
    numero_conta: string
    tipo_conta: string
    nome_completo_titular: string
    cpf: string
    status_pago?: boolean
  }

  export type solicitacao_pagamentoUncheckedCreateInput = {
    id?: number
    id_freelancer: number
    valor_solicitado: Decimal | DecimalJsLike | number | string
    banco: string
    agencia: string
    numero_conta: string
    tipo_conta: string
    nome_completo_titular: string
    cpf: string
    status_pago?: boolean
  }

  export type solicitacao_pagamentoUpdateInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    valor_solicitado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    banco?: StringFieldUpdateOperationsInput | string
    agencia?: StringFieldUpdateOperationsInput | string
    numero_conta?: StringFieldUpdateOperationsInput | string
    tipo_conta?: StringFieldUpdateOperationsInput | string
    nome_completo_titular?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    status_pago?: BoolFieldUpdateOperationsInput | boolean
  }

  export type solicitacao_pagamentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    valor_solicitado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    banco?: StringFieldUpdateOperationsInput | string
    agencia?: StringFieldUpdateOperationsInput | string
    numero_conta?: StringFieldUpdateOperationsInput | string
    tipo_conta?: StringFieldUpdateOperationsInput | string
    nome_completo_titular?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    status_pago?: BoolFieldUpdateOperationsInput | boolean
  }

  export type solicitacao_pagamentoCreateManyInput = {
    id?: number
    id_freelancer: number
    valor_solicitado: Decimal | DecimalJsLike | number | string
    banco: string
    agencia: string
    numero_conta: string
    tipo_conta: string
    nome_completo_titular: string
    cpf: string
    status_pago?: boolean
  }

  export type solicitacao_pagamentoUpdateManyMutationInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    valor_solicitado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    banco?: StringFieldUpdateOperationsInput | string
    agencia?: StringFieldUpdateOperationsInput | string
    numero_conta?: StringFieldUpdateOperationsInput | string
    tipo_conta?: StringFieldUpdateOperationsInput | string
    nome_completo_titular?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    status_pago?: BoolFieldUpdateOperationsInput | boolean
  }

  export type solicitacao_pagamentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_freelancer?: IntFieldUpdateOperationsInput | number
    valor_solicitado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    banco?: StringFieldUpdateOperationsInput | string
    agencia?: StringFieldUpdateOperationsInput | string
    numero_conta?: StringFieldUpdateOperationsInput | string
    tipo_conta?: StringFieldUpdateOperationsInput | string
    nome_completo_titular?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    status_pago?: BoolFieldUpdateOperationsInput | boolean
  }

  export type total_a_receberCreateInput = {
    id_freelancer: number
    total?: Decimal | DecimalJsLike | number | string
  }

  export type total_a_receberUncheckedCreateInput = {
    id_freelancer: number
    total?: Decimal | DecimalJsLike | number | string
  }

  export type total_a_receberUpdateInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type total_a_receberUncheckedUpdateInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type total_a_receberCreateManyInput = {
    id_freelancer: number
    total?: Decimal | DecimalJsLike | number | string
  }

  export type total_a_receberUpdateManyMutationInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type total_a_receberUncheckedUpdateManyInput = {
    id_freelancer?: IntFieldUpdateOperationsInput | number
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type cadastro_clienteCountOrderByAggregateInput = {
    id?: SortOrder
    nome_cliente?: SortOrder
    cnpj_cliente?: SortOrder
    email_cliente?: SortOrder
    senha_cliente?: SortOrder
    is_premium?: SortOrder
  }

  export type cadastro_clienteAvgOrderByAggregateInput = {
    id?: SortOrder
    cnpj_cliente?: SortOrder
  }

  export type cadastro_clienteMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_cliente?: SortOrder
    cnpj_cliente?: SortOrder
    email_cliente?: SortOrder
    senha_cliente?: SortOrder
    is_premium?: SortOrder
  }

  export type cadastro_clienteMinOrderByAggregateInput = {
    id?: SortOrder
    nome_cliente?: SortOrder
    cnpj_cliente?: SortOrder
    email_cliente?: SortOrder
    senha_cliente?: SortOrder
    is_premium?: SortOrder
  }

  export type cadastro_clienteSumOrderByAggregateInput = {
    id?: SortOrder
    cnpj_cliente?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type cadastro_freelancerCountOrderByAggregateInput = {
    id?: SortOrder
    nome_freelancer?: SortOrder
    data_nascimento?: SortOrder
    cpf_freelancer?: SortOrder
    email_freelancer?: SortOrder
    senha_freelancer?: SortOrder
    is_premium?: SortOrder
  }

  export type cadastro_freelancerAvgOrderByAggregateInput = {
    id?: SortOrder
    cpf_freelancer?: SortOrder
  }

  export type cadastro_freelancerMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_freelancer?: SortOrder
    data_nascimento?: SortOrder
    cpf_freelancer?: SortOrder
    email_freelancer?: SortOrder
    senha_freelancer?: SortOrder
    is_premium?: SortOrder
  }

  export type cadastro_freelancerMinOrderByAggregateInput = {
    id?: SortOrder
    nome_freelancer?: SortOrder
    data_nascimento?: SortOrder
    cpf_freelancer?: SortOrder
    email_freelancer?: SortOrder
    senha_freelancer?: SortOrder
    is_premium?: SortOrder
  }

  export type cadastro_freelancerSumOrderByAggregateInput = {
    id?: SortOrder
    cpf_freelancer?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type categoriasCountOrderByAggregateInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    icon_categoria?: SortOrder
  }

  export type categoriasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type categoriasMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    icon_categoria?: SortOrder
  }

  export type categoriasMinOrderByAggregateInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    icon_categoria?: SortOrder
  }

  export type categoriasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type descricao_perfilCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type descricao_perfilAvgOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type descricao_perfilMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type descricao_perfilMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type descricao_perfilSumOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type foto_perfilCountOrderByAggregateInput = {
    id?: SortOrder
    foto_perfil?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type foto_perfilAvgOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type foto_perfilMaxOrderByAggregateInput = {
    id?: SortOrder
    foto_perfil?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type foto_perfilMinOrderByAggregateInput = {
    id?: SortOrder
    foto_perfil?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type foto_perfilSumOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
  }

  export type freelancer_categoriaCountOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_categoria?: SortOrder
  }

  export type freelancer_categoriaAvgOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_categoria?: SortOrder
  }

  export type freelancer_categoriaMaxOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_categoria?: SortOrder
  }

  export type freelancer_categoriaMinOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_categoria?: SortOrder
  }

  export type freelancer_categoriaSumOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_categoria?: SortOrder
  }

  export type freelancer_habilidadeCountOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_habilidade?: SortOrder
  }

  export type freelancer_habilidadeAvgOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_habilidade?: SortOrder
  }

  export type freelancer_habilidadeMaxOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_habilidade?: SortOrder
  }

  export type freelancer_habilidadeMinOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_habilidade?: SortOrder
  }

  export type freelancer_habilidadeSumOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    id_habilidade?: SortOrder
  }

  export type habilidadesCountOrderByAggregateInput = {
    id?: SortOrder
    nome_habilidade?: SortOrder
    icon_habilidade?: SortOrder
  }

  export type habilidadesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type habilidadesMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_habilidade?: SortOrder
    icon_habilidade?: SortOrder
  }

  export type habilidadesMinOrderByAggregateInput = {
    id?: SortOrder
    nome_habilidade?: SortOrder
    icon_habilidade?: SortOrder
  }

  export type habilidadesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type nivel_experienciaCountOrderByAggregateInput = {
    id?: SortOrder
    nivel_experiencia?: SortOrder
  }

  export type nivel_experienciaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type nivel_experienciaMaxOrderByAggregateInput = {
    id?: SortOrder
    nivel_experiencia?: SortOrder
  }

  export type nivel_experienciaMinOrderByAggregateInput = {
    id?: SortOrder
    nivel_experiencia?: SortOrder
  }

  export type nivel_experienciaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type portfolioCountOrderByAggregateInput = {
    id?: SortOrder
    arquivo?: SortOrder
  }

  export type portfolioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type portfolioMaxOrderByAggregateInput = {
    id?: SortOrder
    arquivo?: SortOrder
  }

  export type portfolioMinOrderByAggregateInput = {
    id?: SortOrder
    arquivo?: SortOrder
  }

  export type portfolioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type publicacao_projetosCountOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    nome_projeto?: SortOrder
    descricao_projeto?: SortOrder
    orcamento?: SortOrder
    id_nivel_experiencia?: SortOrder
    is_premium?: SortOrder
  }

  export type publicacao_projetosAvgOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    orcamento?: SortOrder
    id_nivel_experiencia?: SortOrder
  }

  export type publicacao_projetosMaxOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    nome_projeto?: SortOrder
    descricao_projeto?: SortOrder
    orcamento?: SortOrder
    id_nivel_experiencia?: SortOrder
    is_premium?: SortOrder
  }

  export type publicacao_projetosMinOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    nome_projeto?: SortOrder
    descricao_projeto?: SortOrder
    orcamento?: SortOrder
    id_nivel_experiencia?: SortOrder
    is_premium?: SortOrder
  }

  export type publicacao_projetosSumOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    orcamento?: SortOrder
    id_nivel_experiencia?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type categoria_publicacao_projetosCountOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_categoria?: SortOrder
  }

  export type categoria_publicacao_projetosAvgOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_categoria?: SortOrder
  }

  export type categoria_publicacao_projetosMaxOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_categoria?: SortOrder
  }

  export type categoria_publicacao_projetosMinOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_categoria?: SortOrder
  }

  export type categoria_publicacao_projetosSumOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_categoria?: SortOrder
  }

  export type habilidade_publicacao_projetosCountOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_habilidade?: SortOrder
  }

  export type habilidade_publicacao_projetosAvgOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_habilidade?: SortOrder
  }

  export type habilidade_publicacao_projetosMaxOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_habilidade?: SortOrder
  }

  export type habilidade_publicacao_projetosMinOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_habilidade?: SortOrder
  }

  export type habilidade_publicacao_projetosSumOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_habilidade?: SortOrder
  }

  export type portfolio_freelancerCountOrderByAggregateInput = {
    id?: SortOrder
    id_portfolio?: SortOrder
    id_freelancer?: SortOrder
  }

  export type portfolio_freelancerAvgOrderByAggregateInput = {
    id?: SortOrder
    id_portfolio?: SortOrder
    id_freelancer?: SortOrder
  }

  export type portfolio_freelancerMaxOrderByAggregateInput = {
    id?: SortOrder
    id_portfolio?: SortOrder
    id_freelancer?: SortOrder
  }

  export type portfolio_freelancerMinOrderByAggregateInput = {
    id?: SortOrder
    id_portfolio?: SortOrder
    id_freelancer?: SortOrder
  }

  export type portfolio_freelancerSumOrderByAggregateInput = {
    id?: SortOrder
    id_portfolio?: SortOrder
    id_freelancer?: SortOrder
  }

  export type avaliacaoCountOrderByAggregateInput = {
    id?: SortOrder
    estrelas?: SortOrder
    comentario?: SortOrder
  }

  export type avaliacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    estrelas?: SortOrder
  }

  export type avaliacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    estrelas?: SortOrder
    comentario?: SortOrder
  }

  export type avaliacaoMinOrderByAggregateInput = {
    id?: SortOrder
    estrelas?: SortOrder
    comentario?: SortOrder
  }

  export type avaliacaoSumOrderByAggregateInput = {
    id?: SortOrder
    estrelas?: SortOrder
  }

  export type Enumavaliacao_usuario_tipo_avaliadorFilter<$PrismaModel = never> = {
    equals?: $Enums.avaliacao_usuario_tipo_avaliador | Enumavaliacao_usuario_tipo_avaliadorFieldRefInput<$PrismaModel>
    in?: $Enums.avaliacao_usuario_tipo_avaliador[]
    notIn?: $Enums.avaliacao_usuario_tipo_avaliador[]
    not?: NestedEnumavaliacao_usuario_tipo_avaliadorFilter<$PrismaModel> | $Enums.avaliacao_usuario_tipo_avaliador
  }

  export type Enumavaliacao_usuario_tipo_avaliadoFilter<$PrismaModel = never> = {
    equals?: $Enums.avaliacao_usuario_tipo_avaliado | Enumavaliacao_usuario_tipo_avaliadoFieldRefInput<$PrismaModel>
    in?: $Enums.avaliacao_usuario_tipo_avaliado[]
    notIn?: $Enums.avaliacao_usuario_tipo_avaliado[]
    not?: NestedEnumavaliacao_usuario_tipo_avaliadoFilter<$PrismaModel> | $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type avaliacao_usuarioCountOrderByAggregateInput = {
    id?: SortOrder
    id_avaliacao?: SortOrder
    id_avaliador?: SortOrder
    tipo_avaliador?: SortOrder
    id_avaliado?: SortOrder
    tipo_avaliado?: SortOrder
  }

  export type avaliacao_usuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    id_avaliacao?: SortOrder
    id_avaliador?: SortOrder
    id_avaliado?: SortOrder
  }

  export type avaliacao_usuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    id_avaliacao?: SortOrder
    id_avaliador?: SortOrder
    tipo_avaliador?: SortOrder
    id_avaliado?: SortOrder
    tipo_avaliado?: SortOrder
  }

  export type avaliacao_usuarioMinOrderByAggregateInput = {
    id?: SortOrder
    id_avaliacao?: SortOrder
    id_avaliador?: SortOrder
    tipo_avaliador?: SortOrder
    id_avaliado?: SortOrder
    tipo_avaliado?: SortOrder
  }

  export type avaliacao_usuarioSumOrderByAggregateInput = {
    id?: SortOrder
    id_avaliacao?: SortOrder
    id_avaliador?: SortOrder
    id_avaliado?: SortOrder
  }

  export type Enumavaliacao_usuario_tipo_avaliadorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.avaliacao_usuario_tipo_avaliador | Enumavaliacao_usuario_tipo_avaliadorFieldRefInput<$PrismaModel>
    in?: $Enums.avaliacao_usuario_tipo_avaliador[]
    notIn?: $Enums.avaliacao_usuario_tipo_avaliador[]
    not?: NestedEnumavaliacao_usuario_tipo_avaliadorWithAggregatesFilter<$PrismaModel> | $Enums.avaliacao_usuario_tipo_avaliador
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumavaliacao_usuario_tipo_avaliadorFilter<$PrismaModel>
    _max?: NestedEnumavaliacao_usuario_tipo_avaliadorFilter<$PrismaModel>
  }

  export type Enumavaliacao_usuario_tipo_avaliadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.avaliacao_usuario_tipo_avaliado | Enumavaliacao_usuario_tipo_avaliadoFieldRefInput<$PrismaModel>
    in?: $Enums.avaliacao_usuario_tipo_avaliado[]
    notIn?: $Enums.avaliacao_usuario_tipo_avaliado[]
    not?: NestedEnumavaliacao_usuario_tipo_avaliadoWithAggregatesFilter<$PrismaModel> | $Enums.avaliacao_usuario_tipo_avaliado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumavaliacao_usuario_tipo_avaliadoFilter<$PrismaModel>
    _max?: NestedEnumavaliacao_usuario_tipo_avaliadoFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Enumpagamentos_metodo_pagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.pagamentos_metodo_pagamento | Enumpagamentos_metodo_pagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.pagamentos_metodo_pagamento[]
    notIn?: $Enums.pagamentos_metodo_pagamento[]
    not?: NestedEnumpagamentos_metodo_pagamentoFilter<$PrismaModel> | $Enums.pagamentos_metodo_pagamento
  }

  export type Enumpagamentos_status_pagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.pagamentos_status_pagamento | Enumpagamentos_status_pagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.pagamentos_status_pagamento[]
    notIn?: $Enums.pagamentos_status_pagamento[]
    not?: NestedEnumpagamentos_status_pagamentoFilter<$PrismaModel> | $Enums.pagamentos_status_pagamento
  }

  export type pagamentosCountOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
    valor?: SortOrder
    metodo_pagamento?: SortOrder
    status_pagamento?: SortOrder
    descricao?: SortOrder
    link_pagamento?: SortOrder
  }

  export type pagamentosAvgOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
    valor?: SortOrder
  }

  export type pagamentosMaxOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
    valor?: SortOrder
    metodo_pagamento?: SortOrder
    status_pagamento?: SortOrder
    descricao?: SortOrder
    link_pagamento?: SortOrder
  }

  export type pagamentosMinOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
    valor?: SortOrder
    metodo_pagamento?: SortOrder
    status_pagamento?: SortOrder
    descricao?: SortOrder
    link_pagamento?: SortOrder
  }

  export type pagamentosSumOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    id_freelancer?: SortOrder
    valor?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type Enumpagamentos_metodo_pagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.pagamentos_metodo_pagamento | Enumpagamentos_metodo_pagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.pagamentos_metodo_pagamento[]
    notIn?: $Enums.pagamentos_metodo_pagamento[]
    not?: NestedEnumpagamentos_metodo_pagamentoWithAggregatesFilter<$PrismaModel> | $Enums.pagamentos_metodo_pagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpagamentos_metodo_pagamentoFilter<$PrismaModel>
    _max?: NestedEnumpagamentos_metodo_pagamentoFilter<$PrismaModel>
  }

  export type Enumpagamentos_status_pagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.pagamentos_status_pagamento | Enumpagamentos_status_pagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.pagamentos_status_pagamento[]
    notIn?: $Enums.pagamentos_status_pagamento[]
    not?: NestedEnumpagamentos_status_pagamentoWithAggregatesFilter<$PrismaModel> | $Enums.pagamentos_status_pagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpagamentos_status_pagamentoFilter<$PrismaModel>
    _max?: NestedEnumpagamentos_status_pagamentoFilter<$PrismaModel>
  }

  export type freelancer_projetoCountOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_freelancer?: SortOrder
    status?: SortOrder
  }

  export type freelancer_projetoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_freelancer?: SortOrder
  }

  export type freelancer_projetoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_freelancer?: SortOrder
    status?: SortOrder
  }

  export type freelancer_projetoMinOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_freelancer?: SortOrder
    status?: SortOrder
  }

  export type freelancer_projetoSumOrderByAggregateInput = {
    id?: SortOrder
    id_projeto?: SortOrder
    id_freelancer?: SortOrder
  }

  export type denunciaCountOrderByAggregateInput = {
    id?: SortOrder
    arquivo?: SortOrder
    descricao?: SortOrder
  }

  export type denunciaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type denunciaMaxOrderByAggregateInput = {
    id?: SortOrder
    arquivo?: SortOrder
    descricao?: SortOrder
  }

  export type denunciaMinOrderByAggregateInput = {
    id?: SortOrder
    arquivo?: SortOrder
    descricao?: SortOrder
  }

  export type denunciaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumdisputa_tipo_denuncianteFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_tipo_denunciante | Enumdisputa_tipo_denuncianteFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_tipo_denunciante[]
    notIn?: $Enums.disputa_tipo_denunciante[]
    not?: NestedEnumdisputa_tipo_denuncianteFilter<$PrismaModel> | $Enums.disputa_tipo_denunciante
  }

  export type Enumdisputa_tipo_denunciadoFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_tipo_denunciado | Enumdisputa_tipo_denunciadoFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_tipo_denunciado[]
    notIn?: $Enums.disputa_tipo_denunciado[]
    not?: NestedEnumdisputa_tipo_denunciadoFilter<$PrismaModel> | $Enums.disputa_tipo_denunciado
  }

  export type Enumdisputa_situacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_situacao | Enumdisputa_situacaoFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_situacao[]
    notIn?: $Enums.disputa_situacao[]
    not?: NestedEnumdisputa_situacaoFilter<$PrismaModel> | $Enums.disputa_situacao
  }

  export type disputaCountOrderByAggregateInput = {
    id?: SortOrder
    id_denuncia?: SortOrder
    id_denunciante?: SortOrder
    tipo_denunciante?: SortOrder
    id_denunciado?: SortOrder
    tipo_denunciado?: SortOrder
    situacao?: SortOrder
  }

  export type disputaAvgOrderByAggregateInput = {
    id?: SortOrder
    id_denuncia?: SortOrder
    id_denunciante?: SortOrder
    id_denunciado?: SortOrder
  }

  export type disputaMaxOrderByAggregateInput = {
    id?: SortOrder
    id_denuncia?: SortOrder
    id_denunciante?: SortOrder
    tipo_denunciante?: SortOrder
    id_denunciado?: SortOrder
    tipo_denunciado?: SortOrder
    situacao?: SortOrder
  }

  export type disputaMinOrderByAggregateInput = {
    id?: SortOrder
    id_denuncia?: SortOrder
    id_denunciante?: SortOrder
    tipo_denunciante?: SortOrder
    id_denunciado?: SortOrder
    tipo_denunciado?: SortOrder
    situacao?: SortOrder
  }

  export type disputaSumOrderByAggregateInput = {
    id?: SortOrder
    id_denuncia?: SortOrder
    id_denunciante?: SortOrder
    id_denunciado?: SortOrder
  }

  export type Enumdisputa_tipo_denuncianteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_tipo_denunciante | Enumdisputa_tipo_denuncianteFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_tipo_denunciante[]
    notIn?: $Enums.disputa_tipo_denunciante[]
    not?: NestedEnumdisputa_tipo_denuncianteWithAggregatesFilter<$PrismaModel> | $Enums.disputa_tipo_denunciante
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdisputa_tipo_denuncianteFilter<$PrismaModel>
    _max?: NestedEnumdisputa_tipo_denuncianteFilter<$PrismaModel>
  }

  export type Enumdisputa_tipo_denunciadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_tipo_denunciado | Enumdisputa_tipo_denunciadoFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_tipo_denunciado[]
    notIn?: $Enums.disputa_tipo_denunciado[]
    not?: NestedEnumdisputa_tipo_denunciadoWithAggregatesFilter<$PrismaModel> | $Enums.disputa_tipo_denunciado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdisputa_tipo_denunciadoFilter<$PrismaModel>
    _max?: NestedEnumdisputa_tipo_denunciadoFilter<$PrismaModel>
  }

  export type Enumdisputa_situacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_situacao | Enumdisputa_situacaoFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_situacao[]
    notIn?: $Enums.disputa_situacao[]
    not?: NestedEnumdisputa_situacaoWithAggregatesFilter<$PrismaModel> | $Enums.disputa_situacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdisputa_situacaoFilter<$PrismaModel>
    _max?: NestedEnumdisputa_situacaoFilter<$PrismaModel>
  }

  export type solicitacao_pagamentoCountOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    valor_solicitado?: SortOrder
    banco?: SortOrder
    agencia?: SortOrder
    numero_conta?: SortOrder
    tipo_conta?: SortOrder
    nome_completo_titular?: SortOrder
    cpf?: SortOrder
    status_pago?: SortOrder
  }

  export type solicitacao_pagamentoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    valor_solicitado?: SortOrder
  }

  export type solicitacao_pagamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    valor_solicitado?: SortOrder
    banco?: SortOrder
    agencia?: SortOrder
    numero_conta?: SortOrder
    tipo_conta?: SortOrder
    nome_completo_titular?: SortOrder
    cpf?: SortOrder
    status_pago?: SortOrder
  }

  export type solicitacao_pagamentoMinOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    valor_solicitado?: SortOrder
    banco?: SortOrder
    agencia?: SortOrder
    numero_conta?: SortOrder
    tipo_conta?: SortOrder
    nome_completo_titular?: SortOrder
    cpf?: SortOrder
    status_pago?: SortOrder
  }

  export type solicitacao_pagamentoSumOrderByAggregateInput = {
    id?: SortOrder
    id_freelancer?: SortOrder
    valor_solicitado?: SortOrder
  }

  export type total_a_receberCountOrderByAggregateInput = {
    id_freelancer?: SortOrder
    total?: SortOrder
  }

  export type total_a_receberAvgOrderByAggregateInput = {
    id_freelancer?: SortOrder
    total?: SortOrder
  }

  export type total_a_receberMaxOrderByAggregateInput = {
    id_freelancer?: SortOrder
    total?: SortOrder
  }

  export type total_a_receberMinOrderByAggregateInput = {
    id_freelancer?: SortOrder
    total?: SortOrder
  }

  export type total_a_receberSumOrderByAggregateInput = {
    id_freelancer?: SortOrder
    total?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type Enumavaliacao_usuario_tipo_avaliadorFieldUpdateOperationsInput = {
    set?: $Enums.avaliacao_usuario_tipo_avaliador
  }

  export type Enumavaliacao_usuario_tipo_avaliadoFieldUpdateOperationsInput = {
    set?: $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type Enumpagamentos_metodo_pagamentoFieldUpdateOperationsInput = {
    set?: $Enums.pagamentos_metodo_pagamento
  }

  export type Enumpagamentos_status_pagamentoFieldUpdateOperationsInput = {
    set?: $Enums.pagamentos_status_pagamento
  }

  export type Enumdisputa_tipo_denuncianteFieldUpdateOperationsInput = {
    set?: $Enums.disputa_tipo_denunciante
  }

  export type Enumdisputa_tipo_denunciadoFieldUpdateOperationsInput = {
    set?: $Enums.disputa_tipo_denunciado
  }

  export type Enumdisputa_situacaoFieldUpdateOperationsInput = {
    set?: $Enums.disputa_situacao
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumavaliacao_usuario_tipo_avaliadorFilter<$PrismaModel = never> = {
    equals?: $Enums.avaliacao_usuario_tipo_avaliador | Enumavaliacao_usuario_tipo_avaliadorFieldRefInput<$PrismaModel>
    in?: $Enums.avaliacao_usuario_tipo_avaliador[]
    notIn?: $Enums.avaliacao_usuario_tipo_avaliador[]
    not?: NestedEnumavaliacao_usuario_tipo_avaliadorFilter<$PrismaModel> | $Enums.avaliacao_usuario_tipo_avaliador
  }

  export type NestedEnumavaliacao_usuario_tipo_avaliadoFilter<$PrismaModel = never> = {
    equals?: $Enums.avaliacao_usuario_tipo_avaliado | Enumavaliacao_usuario_tipo_avaliadoFieldRefInput<$PrismaModel>
    in?: $Enums.avaliacao_usuario_tipo_avaliado[]
    notIn?: $Enums.avaliacao_usuario_tipo_avaliado[]
    not?: NestedEnumavaliacao_usuario_tipo_avaliadoFilter<$PrismaModel> | $Enums.avaliacao_usuario_tipo_avaliado
  }

  export type NestedEnumavaliacao_usuario_tipo_avaliadorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.avaliacao_usuario_tipo_avaliador | Enumavaliacao_usuario_tipo_avaliadorFieldRefInput<$PrismaModel>
    in?: $Enums.avaliacao_usuario_tipo_avaliador[]
    notIn?: $Enums.avaliacao_usuario_tipo_avaliador[]
    not?: NestedEnumavaliacao_usuario_tipo_avaliadorWithAggregatesFilter<$PrismaModel> | $Enums.avaliacao_usuario_tipo_avaliador
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumavaliacao_usuario_tipo_avaliadorFilter<$PrismaModel>
    _max?: NestedEnumavaliacao_usuario_tipo_avaliadorFilter<$PrismaModel>
  }

  export type NestedEnumavaliacao_usuario_tipo_avaliadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.avaliacao_usuario_tipo_avaliado | Enumavaliacao_usuario_tipo_avaliadoFieldRefInput<$PrismaModel>
    in?: $Enums.avaliacao_usuario_tipo_avaliado[]
    notIn?: $Enums.avaliacao_usuario_tipo_avaliado[]
    not?: NestedEnumavaliacao_usuario_tipo_avaliadoWithAggregatesFilter<$PrismaModel> | $Enums.avaliacao_usuario_tipo_avaliado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumavaliacao_usuario_tipo_avaliadoFilter<$PrismaModel>
    _max?: NestedEnumavaliacao_usuario_tipo_avaliadoFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumpagamentos_metodo_pagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.pagamentos_metodo_pagamento | Enumpagamentos_metodo_pagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.pagamentos_metodo_pagamento[]
    notIn?: $Enums.pagamentos_metodo_pagamento[]
    not?: NestedEnumpagamentos_metodo_pagamentoFilter<$PrismaModel> | $Enums.pagamentos_metodo_pagamento
  }

  export type NestedEnumpagamentos_status_pagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.pagamentos_status_pagamento | Enumpagamentos_status_pagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.pagamentos_status_pagamento[]
    notIn?: $Enums.pagamentos_status_pagamento[]
    not?: NestedEnumpagamentos_status_pagamentoFilter<$PrismaModel> | $Enums.pagamentos_status_pagamento
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumpagamentos_metodo_pagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.pagamentos_metodo_pagamento | Enumpagamentos_metodo_pagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.pagamentos_metodo_pagamento[]
    notIn?: $Enums.pagamentos_metodo_pagamento[]
    not?: NestedEnumpagamentos_metodo_pagamentoWithAggregatesFilter<$PrismaModel> | $Enums.pagamentos_metodo_pagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpagamentos_metodo_pagamentoFilter<$PrismaModel>
    _max?: NestedEnumpagamentos_metodo_pagamentoFilter<$PrismaModel>
  }

  export type NestedEnumpagamentos_status_pagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.pagamentos_status_pagamento | Enumpagamentos_status_pagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.pagamentos_status_pagamento[]
    notIn?: $Enums.pagamentos_status_pagamento[]
    not?: NestedEnumpagamentos_status_pagamentoWithAggregatesFilter<$PrismaModel> | $Enums.pagamentos_status_pagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpagamentos_status_pagamentoFilter<$PrismaModel>
    _max?: NestedEnumpagamentos_status_pagamentoFilter<$PrismaModel>
  }

  export type NestedEnumdisputa_tipo_denuncianteFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_tipo_denunciante | Enumdisputa_tipo_denuncianteFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_tipo_denunciante[]
    notIn?: $Enums.disputa_tipo_denunciante[]
    not?: NestedEnumdisputa_tipo_denuncianteFilter<$PrismaModel> | $Enums.disputa_tipo_denunciante
  }

  export type NestedEnumdisputa_tipo_denunciadoFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_tipo_denunciado | Enumdisputa_tipo_denunciadoFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_tipo_denunciado[]
    notIn?: $Enums.disputa_tipo_denunciado[]
    not?: NestedEnumdisputa_tipo_denunciadoFilter<$PrismaModel> | $Enums.disputa_tipo_denunciado
  }

  export type NestedEnumdisputa_situacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_situacao | Enumdisputa_situacaoFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_situacao[]
    notIn?: $Enums.disputa_situacao[]
    not?: NestedEnumdisputa_situacaoFilter<$PrismaModel> | $Enums.disputa_situacao
  }

  export type NestedEnumdisputa_tipo_denuncianteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_tipo_denunciante | Enumdisputa_tipo_denuncianteFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_tipo_denunciante[]
    notIn?: $Enums.disputa_tipo_denunciante[]
    not?: NestedEnumdisputa_tipo_denuncianteWithAggregatesFilter<$PrismaModel> | $Enums.disputa_tipo_denunciante
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdisputa_tipo_denuncianteFilter<$PrismaModel>
    _max?: NestedEnumdisputa_tipo_denuncianteFilter<$PrismaModel>
  }

  export type NestedEnumdisputa_tipo_denunciadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_tipo_denunciado | Enumdisputa_tipo_denunciadoFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_tipo_denunciado[]
    notIn?: $Enums.disputa_tipo_denunciado[]
    not?: NestedEnumdisputa_tipo_denunciadoWithAggregatesFilter<$PrismaModel> | $Enums.disputa_tipo_denunciado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdisputa_tipo_denunciadoFilter<$PrismaModel>
    _max?: NestedEnumdisputa_tipo_denunciadoFilter<$PrismaModel>
  }

  export type NestedEnumdisputa_situacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.disputa_situacao | Enumdisputa_situacaoFieldRefInput<$PrismaModel>
    in?: $Enums.disputa_situacao[]
    notIn?: $Enums.disputa_situacao[]
    not?: NestedEnumdisputa_situacaoWithAggregatesFilter<$PrismaModel> | $Enums.disputa_situacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdisputa_situacaoFilter<$PrismaModel>
    _max?: NestedEnumdisputa_situacaoFilter<$PrismaModel>
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use cadastro_clienteDefaultArgs instead
     */
    export type cadastro_clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = cadastro_clienteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use cadastro_freelancerDefaultArgs instead
     */
    export type cadastro_freelancerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = cadastro_freelancerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use categoriasDefaultArgs instead
     */
    export type categoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = categoriasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use descricao_perfilDefaultArgs instead
     */
    export type descricao_perfilArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = descricao_perfilDefaultArgs<ExtArgs>
    /**
     * @deprecated Use foto_perfilDefaultArgs instead
     */
    export type foto_perfilArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = foto_perfilDefaultArgs<ExtArgs>
    /**
     * @deprecated Use freelancer_categoriaDefaultArgs instead
     */
    export type freelancer_categoriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = freelancer_categoriaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use freelancer_habilidadeDefaultArgs instead
     */
    export type freelancer_habilidadeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = freelancer_habilidadeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use habilidadesDefaultArgs instead
     */
    export type habilidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = habilidadesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use nivel_experienciaDefaultArgs instead
     */
    export type nivel_experienciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = nivel_experienciaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use portfolioDefaultArgs instead
     */
    export type portfolioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = portfolioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use publicacao_projetosDefaultArgs instead
     */
    export type publicacao_projetosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = publicacao_projetosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use categoria_publicacao_projetosDefaultArgs instead
     */
    export type categoria_publicacao_projetosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = categoria_publicacao_projetosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use habilidade_publicacao_projetosDefaultArgs instead
     */
    export type habilidade_publicacao_projetosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = habilidade_publicacao_projetosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use portfolio_freelancerDefaultArgs instead
     */
    export type portfolio_freelancerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = portfolio_freelancerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use avaliacaoDefaultArgs instead
     */
    export type avaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = avaliacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use avaliacao_usuarioDefaultArgs instead
     */
    export type avaliacao_usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = avaliacao_usuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use pagamentosDefaultArgs instead
     */
    export type pagamentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = pagamentosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use freelancer_projetoDefaultArgs instead
     */
    export type freelancer_projetoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = freelancer_projetoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use denunciaDefaultArgs instead
     */
    export type denunciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = denunciaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use disputaDefaultArgs instead
     */
    export type disputaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = disputaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use solicitacao_pagamentoDefaultArgs instead
     */
    export type solicitacao_pagamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = solicitacao_pagamentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use total_a_receberDefaultArgs instead
     */
    export type total_a_receberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = total_a_receberDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}